"use strict";
(self["webpackChunkinsights_chrome"] = self["webpackChunkinsights_chrome"] || []).push([["node_modules_patternfly_react-icons_dist_esm_icons_cube-icon_js"],{

/***/ "./node_modules/@patternfly/react-icons/dist/esm/createIcon.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@patternfly/react-icons/dist/esm/createIcon.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createIcon: () => (/* binding */ createIcon)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?1a75");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);


let currentId = 0;
/**
 * Factory to create Icon class components for consumers
 */
function createIcon({ name, xOffset = 0, yOffset = 0, width, height, svgPath }) {
    var _a;
    return _a = class SVGIcon extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
            constructor() {
                super(...arguments);
                this.id = `icon-title-${currentId++}`;
            }
            render() {
                const _b = this.props, { title, className } = _b, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_b, ["title", "className"]);
                const classes = className ? `pf-v5-svg ${className}` : 'pf-v5-svg';
                const hasTitle = Boolean(title);
                const viewBox = [xOffset, yOffset, width, height].join(' ');
                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("svg", Object.assign({ className: classes, viewBox: viewBox, fill: "currentColor", "aria-labelledby": hasTitle ? this.id : null, "aria-hidden": hasTitle ? null : true, role: "img", width: "1em", height: "1em" }, props),
                    hasTitle && react__WEBPACK_IMPORTED_MODULE_0__.createElement("title", { id: this.id }, title),
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("path", { d: svgPath })));
            }
        },
        _a.displayName = name,
        _a;
}
//# sourceMappingURL=createIcon.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-icons/dist/esm/icons/cube-icon.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@patternfly/react-icons/dist/esm/icons/cube-icon.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CubeIcon: () => (/* binding */ CubeIcon),
/* harmony export */   CubeIconConfig: () => (/* binding */ CubeIconConfig),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _createIcon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createIcon */ "./node_modules/@patternfly/react-icons/dist/esm/createIcon.js");


const CubeIconConfig = {
  name: 'CubeIcon',
  height: 512,
  width: 512,
  svgPath: 'M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z',
  yOffset: 0,
  xOffset: 0,
};

const CubeIcon = (0,_createIcon__WEBPACK_IMPORTED_MODULE_0__.createIcon)(CubeIconConfig);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CubeIcon);

/***/ })

}]);