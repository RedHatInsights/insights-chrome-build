{"version":3,"sources":["webpack:///./src/js/App/Sidenav/Navigation.scss?07f4","webpack:///./src/js/App/Sidenav/Navigation.scss","webpack:///./src/js/App/Sidenav/AppSwitcher.scss?1c12","webpack:///./src/js/App/Sidenav/AppSwitcher.scss","webpack:///./src/js/App/Header/UserIcon.scss?c5a9","webpack:///./src/js/App/Header/UserIcon.scss","webpack:///./src/js/App/Header/InsightsAbout.scss?5381","webpack:///./src/js/App/Header/InsightsAbout.scss","webpack:///./src/js/App/Header/LogoutAlert.scss?bade","webpack:///./src/js/App/Header/LogoutAlert.scss","webpack:///./static/images/logo.svg","webpack:///./src/js/App/Header/Logo.js","webpack:///./src/js/App/Header/Brand.js","webpack:///./src/js/App/Header/UserIcon.js","webpack:///./src/js/App/Header/UserToggle.js","webpack:///./src/js/App/Header/ToolbarToggle.js","webpack:///./src/js/App/Header/InsightsAbout.js","webpack:///./src/js/App/Header/Tools.js","webpack:///./src/js/App/Header/Login.js","webpack:///./src/js/App/Header/LogoutAlert.js","webpack:///./src/js/App/Header/UnAuthtedHeader.js","webpack:///./src/js/App/Header/Header.js","webpack:///./src/js/App/Sidenav/Navigation.js","webpack:///./src/js/App/Sidenav/AppSwitcher.js","webpack:///./src/js/App/Sidenav/SideNav.js"],"names":["api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","Logo","src","logo","alt","Brand","toggleNav","navHidden","className","hidden","Button","variant","aria-label","widget-type","onClick","size","href","propTypes","PropTypes","bool","func","connect","chrome","dispatch","onToggle","UserIcon","props","img","width","setState","avatar","state","account","Image","this","username","onload","getImage","Avatar","Component","shape","string","user","identity","buildItems","isOrgAdmin","accountNumber","extraItems","DropdownItem","key","isDisabled","Fragment","DropdownSeparator","window","insights","isProd","target","rel","isBeta","component","auth","logout","UserToggle","isOpen","onSelect","bind","isSmall","toggle","KebabToggle","DropdownToggle","id","icon","name","Dropdown","position","DropdownPosition","right","isPlain","dropdownItems","number","oneOfType","arrayOf","node","defaultProps","account_number","first_name","last_name","is_org_admin","ToolbarToggle","ev","url","preventDefault","location","map","title","widgetType","iconComponent","toggleIndicator","hasToggleIndicator","elementType","array","Copyright","InsightsAbout","app","globalNav","find","item","active","subItems","subApp","subItem","activeApp","reload","appDetails","apps","path","version","showCopyAlert","showCopyAlertError","currentApp","hideCopyAlert","updateAppVersion","term","details","TextListItem","buildId","appDetail","debugDetails","Username","CurrentApp","ApplicationPath","pathname","navigator","clipboard","writeText","JSON","stringify","then","setTimeout","err","Sentry","forEach","fetch","response","json","catch","travis","data","src_hash","build_id","isModalOpen","onClose","AboutModal","brandImageSrc","brandImageAlt","Stack","gutter","StackItem","Tooltip","trigger","entryDelay","exitDelay","copyDetails","TextContent","TextList","getItem","any","object","appId","Tools","useState","isSettingsDisabled","setIsSettingsDisabled","setIsModalOpen","useEffect","getUser","SettingsButton","document","baseURI","aboutMenuDropdownItems","createCase","mobileDropdownItems","AboutButton","QuestionCircleIcon","PageHeaderTools","PageHeaderToolsGroup","visibility","sm","PageHeaderToolsItem","isSelected","getBundle","action","Divider","Login","login","LogoutAlert","alertOneVisible","cookie","set","_timer","clearTimeout","delay","get","setTimer","Alert","AlertActionCloseButton","hideAlertOne","React","Unauthed","Header","UnAuthtedHeader","basepath","extraLinks","link","external","subscriptions","ansible","openshift","Navigation","settings","activeLocation","onNavigate","onClearActive","activeGroup","event","parent","isMetaKey","ctrlKey","metaKey","which","activeLevel","activeItem","open","group","itemUrl","Nav","data-ouia-safe","NavList","NavExpandable","itemID","ouiaId","isActive","isExpanded","subKey","NavigationItem","ignoreCase","NavItem","to","appNavClick","clearActive","AppSwitcher","setIsOpen","CaretDownIcon","classNames","SideNav","activeTechnology","useDispatch","isFirst","setIsFirst","defaultActive","split","appNav"],"mappings":"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","file":"Sidenav.5e927d8c9dd4832ebbe3.js","sourcesContent":["var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Navigation.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-sidebar#ins-c-sidebar .pf-c-nav .pf-c-nav__list .pf-c-nav__link{text-transform:capitalize}.ins-c-sidebar#ins-c-sidebar .pf-c-nav .pf-c-nav__list .pf-c-nav__link.ins-m-ignore-case{text-transform:none}.ins-c-sidebar#ins-c-sidebar .pf-c-nav .pf-c-nav__list .pf-c-nav__link.ins-c-navigation__additional-links{align-items:center}.ins-c-sidebar#ins-c-sidebar .pf-c-nav .pf-c-nav__list .pf-c-nav__link.ins-c-navigation__additional-links svg{margin-left:var(--pf-global--spacer--sm)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./AppSwitcher.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-app-switcher{width:100%;padding:calc(8px + var(--pf-global--spacer--sm)) 12px;margin-top:7px;border-bottom:3px solid #3c3f42}.ins-c-app-switcher .ins-c-app-switcher__dropdown{width:100%;padding:8px 12px}.ins-c-app-switcher .ins-c-app-switcher__dropdown.pf-m-expanded,.ins-c-app-switcher .ins-c-app-switcher__dropdown:hover{background:#393c3d}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__menu{min-width:unset;left:0}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__toggle{color:white;padding:0;width:100%;justify-content:space-between}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__toggle .pf-c-dropdown__toggle-text{text-transform:capitalize;font-weight:var(--pf-global--FontWeight--semi-bold);white-space:normal;text-align:left}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__menu-item{word-wrap:break-word;white-space:normal}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__menu-item.ins-c-app-switcher__current{font-weight:var(--pf-global--FontWeight--semi-bold);background:var(--pf-c-dropdown__menu-item--hover--BackgroundColor)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./UserIcon.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-dropdown-icon{height:36px;width:36px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./InsightsAbout.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}.pf-c-about-modal-box__content{--pf-c-about-modal-box__content--MarginTop: var(--pf-global--spacer--md);--pf-c-about-modal-box__content--MarginBottom: var(--pf-global--spacer--md)}.pf-c-about-modal-box__hero{--pf-c-about-modal-box__hero--sm--BackgroundImage: url('/../../build/assets/images/fedora-background.svg')}.ins-c-page__about--modal dl{--pf-c-content--dl--RowGap: var(--pf-global--spacer--sm)}.ins-c-page__about--modal-footer .copyright{color:var(--pf-global--Color--200);margin-right:30px;margin-right:1.875rem}.ins-c-page__about--modal-footer *{font-size:var(--pf-global--FontSize--sm)}.ins-c-page__about--modal-footer ul{margin:0;padding:0;display:flex;flex-direction:column}@media screen and (min-width: 992px){.ins-c-page__about--modal-footer ul{flex-direction:row}}.ins-c-page__about--modal-footer li{list-style:none}.ins-c-page__about--modal-footer li+li{margin-top:0}@media screen and (min-width: 992px){.ins-c-page__about--modal-footer li+li::before{content:'|';color:var(--pf-global--Color--200);margin:0 var(--pf-global--spacer--md)}}.ins-c-about-modal .pf-c-alert.ins-c-alert__copied .pf-c-alert__title{margin:0}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./LogoutAlert.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-alert__logout .pf-c-alert__title{padding:unset}.ins-c-alert__logout .pf-c-alert__icon{padding:unset;background-color:unset}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export default __webpack_public_path__ + \"fonts/logo.svg\";","import React from 'react';\nimport logo from '../../../../static/images/logo.svg';\n\nconst Logo = () => <img src={logo} alt=\"Red Hat Logo\" />;\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { onToggle } from '../../redux/actions';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport Logo from './Logo';\n\nexport const Brand = ({ toggleNav, navHidden }) => (\n    <div className=\"pf-c-page__header-brand\">\n        <div hidden={navHidden} className='pf-c-page__header-brand-toggle'>\n            <Button\n                variant=\"plain\"\n                aria-label=\"Toggle primary navigation\"\n                widget-type=\"InsightsNavToggle\"\n                onClick={() => toggleNav && toggleNav()}\n            >\n                <BarsIcon size=\"md\"/>\n            </Button>\n        </div>\n        <a className=\"pf-c-page__header-brand-link\" href=\"./\">\n            <Logo />\n        </a>\n    </div>\n);\n\nBrand.propTypes = {\n    navHidden: PropTypes.bool,\n    toggleNav: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleNav: () => {\n            dispatch(onToggle());\n        }\n    };\n}\n\nexport default connect(({ chrome: { navHidden } }) => ({ navHidden }), mapDispatchToProps)(Brand);\n","import React, { Component } from 'react';\nimport { Avatar } from '@patternfly/react-core/dist/js/components/Avatar/Avatar';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './UserIcon.scss';\nexport class UserIcon extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: this.props.account,\n            avatar: 'apps/chrome/assets/images/img_avatar.svg'\n        };\n    }\n\n    getImage = (img) => {\n        if (img.width === 140) {\n            this.setState({ avatar: img.src });\n        }\n    }\n\n    componentDidMount() {\n        const img = new Image();\n        img.src = `https://access.redhat.com/api/users/avatar/${this.state.account.username}/`;\n        img.onload = (() => this.getImage(img));\n    }\n\n    render() {\n        const { avatar } = this.state;\n\n        return (\n            <Avatar src={ avatar } alt='User Avatar'/>\n        );\n    }\n}\n\nUserIcon.propTypes = {\n    account: PropTypes.shape({\n        username: PropTypes.string\n    })\n};\n\nexport default connect(({ chrome: { user: { identity: { user: { username } } } } }) => ({\n    account: {\n        username: username\n    }\n}))(UserIcon);\n","import React, { Component } from 'react';\nimport { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport { KebabToggle } from '@patternfly/react-core/dist/js/components/Dropdown/KebabToggle';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownSeparator';\nimport { DropdownPosition } from '@patternfly/react-core/dist/js/components/Dropdown/dropdownConstants';\nimport UserIcon from './UserIcon';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction buildItems(username, isOrgAdmin, accountNumber = -1, extraItems) {\n    return [\n        <DropdownItem key=\"Username\" isDisabled>\n            <dl className='ins-c-dropdown-item__stack'>\n                <dt className=\"ins-c-dropdown-item__stack--header\">Username:</dt>\n                <dd className=\"ins-c-dropdown-item__stack--value\">{username}</dd>\n                { isOrgAdmin &&\n                    <dd className=\"ins-c-dropdown-item__stack--subValue\">Org. Administrator</dd>\n                }\n            </dl>\n        </DropdownItem>,\n        <React.Fragment key=\"account wrapper\">\n            { accountNumber > -1 &&\n                <DropdownItem key=\"Account\" isDisabled>\n                    <dl className='ins-c-dropdown-item__stack'>\n                        <dt className=\"ins-c-dropdown-item__stack--header\">Account number:</dt>\n                        <dd className=\"ins-c-dropdown-item__stack--value\">{accountNumber}</dd>\n                    </dl>\n                </DropdownItem>\n            }\n        </React.Fragment>,\n        <DropdownSeparator key=\"separator\" />,\n        <DropdownItem\n            key=\"My Profile\"\n            href={`https://www.${window.insights.chrome.isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/personalInfo.html`}\n            target=\"_blank\"\n            rel='noopener noreferrer'>\n                My profile\n        </DropdownItem>,\n        <React.Fragment key=\"My user access wrapper\">\n            { accountNumber > -1 && window.insights.chrome.isBeta() &&\n                <DropdownItem\n                    key=\"My user access\"\n                    href=\"./settings/my-user-access\">\n                    My User Access\n                </DropdownItem>\n            }\n        </React.Fragment>,\n        <React.Fragment key=\"user prefs wrapper\">\n            { accountNumber > -1 &&\n                <DropdownItem\n                    key=\"User preferences\"\n                    href=\"./user-preferences/email\">\n                    User Preferences\n                </DropdownItem>\n            }\n        </React.Fragment>,\n        <DropdownItem\n            key=\"logout\"\n            component=\"button\"\n            onClick={() => window.insights.chrome.auth.logout(true)}>\n                Log out\n        </DropdownItem>,\n        [...extraItems]\n    ];\n}\n\nexport class UserToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    }\n\n    render() {\n        const { isOpen } = this.state;\n        const { account, isSmall, extraItems } = this.props;\n        const toggle = isSmall ?\n            <KebabToggle onToggle={this.onToggle} /> :\n            <DropdownToggle\n                id='UserMenu'\n                icon={<UserIcon />}\n                className='ins-c-toolbar__menu-user'\n                widget-type='UserMenu'\n                onToggle={this.onToggle}>\n                {account.name}\n            </DropdownToggle>;\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                aria-label=\"Overflow actions\"\n                widget-type=\"InsightsOverflowActions\"\n                onSelect={this.onSelect}\n                toggle={toggle}\n                isPlain\n                isOpen={isOpen}\n                dropdownItems={buildItems(account.username, account.isOrgAdmin, account.number, extraItems)}\n            />\n        );\n    }\n}\n\nUserToggle.propTypes = {\n    account: PropTypes.shape({\n        number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        name: PropTypes.string,\n        username: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        isOrgAdmin: PropTypes.bool\n    }),\n    isSmall: PropTypes.bool,\n    extraItems: PropTypes.arrayOf(PropTypes.node)\n};\n\nUserToggle.defaultProps = {\n    account: {\n        number: 1,\n        name: 'Foo'\n    },\n    isSmall: false,\n    extraItems: []\n};\n\n/* eslint-disable camelcase */\n// TODO update this to use account_id\nexport default connect(({\n    chrome: {\n        user: {\n            identity: {\n                account_number: accountNumber,\n                user: {\n                    username,\n                    first_name,\n                    last_name,\n                    is_org_admin\n                }\n            }\n        }\n    } }) => ({\n    account: {\n        number: accountNumber,\n        username: username,\n        isOrgAdmin: is_org_admin,\n        name: `${first_name} ${last_name}`\n    }\n}))(UserToggle);\n\n/* eslint-enable camelcase */\n","import React, { Component } from 'react';\n\nimport  { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport  { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport  { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport  { DropdownPosition } from '@patternfly/react-core/dist/js/components/Dropdown/dropdownConstants';\nimport PropTypes from 'prop-types';\n\nclass ToolbarToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    onClick(ev, url, onClick) {\n        ev.preventDefault();\n        if (url) {\n            window.location.href = `${url}`;\n        }\n\n        if (onClick) {\n            onClick(ev);\n        }\n    }\n\n    render() {\n        // Render the questionmark icon items\n        const dropdownItems = this.props.dropdownItems.map(({ url, title, onClick }) =>\n            <DropdownItem\n                key={title}\n                component={ url ? 'a' : 'button' }\n                // Because the urls are using 'a', don't use onClick for accessibility\n                // If it is a button, use the onClick prop\n                {\n                    ...url ? {\n                        href: url,\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    } : { onClick: (ev => this.onClick(ev, url, onClick)) }\n                }\n            >\n                { title }\n            </DropdownItem>\n        );\n\n        const toggle = <DropdownToggle\n            widget-type={this.props.widgetType}\n            className={this.props.className}\n            id={this.props.id}\n            iconComponent={null}\n            toggleIndicator={ this.props.hasToggleIndicator }\n            onToggle={this.onToggle}>\n            <this.props.icon />\n        </DropdownToggle>;\n\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                toggle={toggle}\n                isOpen={this.state.isOpen}\n                dropdownItems={dropdownItems}\n                onSelect={this.onSelect}\n                isPlain\n            />\n        );\n    }\n}\n\nToolbarToggle.propTypes = {\n    icon: PropTypes.elementType,\n    dropdownItems: PropTypes.array,\n    widgetType: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    className: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    hasToggleIndicator: PropTypes.bool\n};\n\nexport default ToolbarToggle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AboutModal } from '@patternfly/react-core/dist/js/components/AboutModal/AboutModal';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Tooltip } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { TextList } from '@patternfly/react-core/dist/js/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/js/components/Text/TextListItem';\nimport { Stack } from '@patternfly/react-core/dist/js/layouts/Stack/Stack';\nimport { StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/StackItem';\n\nimport CopyIcon from '@patternfly/react-icons/dist/js/icons/copy-icon';\n\nimport logo from '../../../../static/images/logo.svg';\nimport { connect } from 'react-redux';\nimport './InsightsAbout.scss';\nimport * as Sentry from '@sentry/browser';\n\nexport const Copyright = () => (\n    <div className='ins-c-footer__traditional-nav ins-c-page__about--modal-footer'>\n        <p className='copyright'>Copyright © 2020 Red Hat, Inc.</p>\n        <nav>\n            <ul>\n                <li>\n                    <a className='nav-link'\n                        href='https://www.redhat.com/en/about/privacy-policy'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        Privacy Policy\n                    </a>\n                </li>\n                <li>\n                    <a className='nav-link'\n                        href='https://access.redhat.com/help/terms/'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        Terms of Use\n                    </a>\n                </li>\n                <li>\n                    <a className='nav-link'\n                        href='https://www.redhat.com/en/about/all-policies-guidelines'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        All Policies and Guidelines\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n);\n\nexport class InsightsAbout extends Component {\n    constructor(props) {\n        super(props);\n\n        let app;\n        if (this.props.globalNav) {\n            app = this.props.globalNav.find(item => item.active);\n            if (app && app.subItems) {\n                const subApp = app.subItems.find(subItem => subItem.id === this.props.activeApp);\n                app = subApp && subApp.reload ? subApp : app;\n            }\n        }\n\n        this.state = {\n            appDetails: { apps: [\n                { name: 'Chrome', path: 'apps/chrome/app.info.json', version: 'N/A' },\n                { name: 'Dashboard', path: `apps/dashboard/app.info.json`, version: 'N/A' },\n                { name: 'Inventory', path: `apps/inventory/app.info.json`, version: 'N/A' },\n                { name: 'Remediations', path: `apps/remediations/app.info.json`, version: 'N/A' },\n                { name: 'Vulnerability', path: 'apps/vulnerability/app.info.json', version: 'N/A' },\n                { name: 'Compliance', path: 'apps/compliance/app.info.json', version: 'N/A' },\n                { name: 'Cost Management', path: 'apps/cost-management/app.info.json', version: 'N/A' },\n                { name: 'Advisor', path: 'apps/advisor/app.info.json', version: 'N/A' },\n                { name: 'Drift', path: 'apps/drift/app.info.json', version: 'N/A' },\n                { name: 'Migration Analytics', path: 'apps/migration-analytics/app.info.json', version: 'N/A' },\n                { name: 'Automation Hub', path: 'apps/automation-hub/app.info.json', version: 'N/A' },\n                { name: 'Automation Analytics', path: 'apps/automation-analytics/app.info.json', version: 'N/A' },\n                { name: 'Policies', path: 'apps/policies/app.info.json', version: 'N/A' },\n                { name: 'Patch', path: 'apps/patch/app.info.json', version: 'N/A' },\n                { name: 'Automation Services Catalog', path: 'apps/catalog/app.info.json', version: 'N/A' },\n                { name: 'Approval', path: 'apps/approval/app.info.json', version: 'N/A' },\n                { name: 'Sources', path: 'apps/sources/app.info.json', version: 'N/A' }\n            ] },\n            showCopyAlert: false,\n            showCopyAlertError: false,\n            currentApp: app && app.title\n        };\n        this.hideCopyAlert = () => this.setState({ showCopyAlert: false });\n        this.updateAppVersion = this.updateAppVersion.bind(this);\n    }\n\n    getItem(term, details) {\n        return <React.Fragment key={term}>\n            <TextListItem component=\"dt\">{term}:</TextListItem>\n            <TextListItem component=\"dd\">\n                {\n                    (typeof details === 'function') ? details() : details\n                }\n            </TextListItem>\n        </React.Fragment>;\n    }\n\n    updateAppVersion(app, version, buildId) {\n        const { appDetails } = this.state;\n        let currentApp = appDetails.apps.find(appDetail => appDetail.name === app.name);\n\n        if (currentApp) {\n            if (buildId) {\n                version = `${version}.${buildId}`;\n            }\n\n            currentApp.version = version;\n        }\n\n        this.setState(appDetails);\n    }\n\n    copyDetails(username) {\n\n        const debugDetails = {\n            Username: username,\n            CurrentApp: this.state.currentApp || 'Landing',\n            ApplicationPath: window.location.pathname,\n            ...this.state.appDetails\n        };\n\n        // If the text is successfully copied, change the tooltip\n        // The tooltip exit delay is 1000ms, but the fade out is 200ms\n        // Set the timeout to 1200 so the text doesn't change while it is fading\n        navigator.clipboard.writeText(JSON.stringify(debugDetails, null, 2))\n        .then(() => {\n            this.setState({ showCopyAlert: true }, () => {\n                setTimeout(() => { this.setState({ showCopyAlert: false }); }, 1200);\n            });\n        }, (err) => {\n            Sentry.captureException(err);\n        });\n    }\n\n    componentDidMount() {\n        this.state.appDetails.apps.forEach((app) => {\n            fetch(app.path)\n            .then(response => response.json())\n            .catch(() => ({ travis: {} }))\n            .then(data => this.updateAppVersion(app, data.src_hash, data.build_id));\n        });\n    }\n\n    render() {\n        const { isModalOpen, onClose, user } = this.props;\n        const { showCopyAlert } = this.state;\n\n        return (\n            <AboutModal\n                isOpen={isModalOpen}\n                onClose={onClose}\n                brandImageSrc={logo}\n                brandImageAlt=\"Red Hat Logo\"\n                className='ins-c-about-modal'\n            >\n                <Stack gutter='sm'>\n                    <StackItem>\n                        Please include these details when opening a support case.\n                        <Tooltip\n                            trigger=\"mouseenter focus click\"\n                            position='top'\n                            content={\n                                showCopyAlert\n                                    ? <span> Successfully copied to clipboard</span>\n                                    : <span> Copy to clipboard </span>\n                            }\n                            entryDelay={ 100 }\n                            exitDelay={ 1000 }>\n                            <Button variant='plain'\n                                onClick={() => this.copyDetails(user.username)}\n                                aria-label='Copy details'>\n                                <CopyIcon/>\n                            </Button>\n                        </Tooltip>\n                    </StackItem>\n                    <StackItem>\n                        <TextContent className=\"ins-c-page__about--modal\">\n                            <TextList component=\"dl\" className='ins-debug-info'>\n                                {this.getItem('User Name', user && user.username)}\n                                {this.getItem('Current Application', this.state.currentApp || 'Landing')}\n                                {this.getItem('Application Path', window.location.pathname)}\n                                {this.state.appDetails.apps.map((app) => {\n                                    return this.getItem(app.name + ' Version', app.version);\n                                })}\n                            </TextList>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem>\n                        <Copyright />\n                    </StackItem>\n                </Stack>\n            </AboutModal>\n        );\n    }\n}\n\nInsightsAbout.propTypes = {\n    globalNav: PropTypes.any,\n    activeApp: PropTypes.string,\n    isModalOpen: PropTypes.bool,\n    onClose: PropTypes.func,\n    user: PropTypes.object\n};\n\nfunction mapStateToProps({ chrome: { user: { identity: { user } }, appId, globalNav, activeApp } }) {\n    return { appId, globalNav, user, activeApp };\n}\n\nexport default connect(mapStateToProps)(InsightsAbout);\n","import React, { useState, useEffect } from 'react';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { PageHeaderTools } from '@patternfly/react-core/dist/js/components/Page/PageHeaderTools';\nimport { PageHeaderToolsGroup } from '@patternfly/react-core/dist/js/components/Page/PageHeaderToolsGroup';\nimport { PageHeaderToolsItem } from '@patternfly/react-core/dist/js/components/Page/PageHeaderToolsItem';\nimport { Divider } from '@patternfly/react-core/dist/js/components/Divider/Divider';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/question-circle-icon';\nimport CogIcon from '@patternfly/react-icons/dist/js/icons/cog-icon';\nimport UserToggle from './UserToggle';\nimport ToolbarToggle from './ToolbarToggle';\nimport InsightsAbout from './InsightsAbout';\n\nconst Tools = () => {\n\n    {/* Set the state */}\n    const [isSettingsDisabled, setIsSettingsDisabled] = useState(true);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    {/* Disable settings/cog icon when a user doesn't have an account number */}\n    useEffect(() => {\n        window.insights.chrome.auth.getUser().then((user)=> user.identity.account_number && setIsSettingsDisabled(false));\n    }, []);\n\n    {/* button that should redirect a user to RBAC with an account */}\n    const SettingsButton = () => (\n        <Button\n            variant=\"plain\"\n            aria-label=\"Go to settings\"\n            widget-type='SettingsButton'\n            className='ins-c-toolbar__button-settings'\n            href={`${document.baseURI}settings/my-user-access`}\n            component=\"a\"\n        >\n            <CogIcon/>\n        </Button>\n    );\n\n    {/* list out the items for the about menu */}\n    const aboutMenuDropdownItems = [\n        {\n            title: 'Get support',\n            url: 'https://access.redhat.com/support'\n        }, {\n            title: 'Open support case',\n            onClick: () => window.insights.chrome.createCase()\n        }, {\n            title: 'Training',\n            url: 'https://www.redhat.com/en/services/training-and-certification'\n        }, {\n            title: 'API documentation',\n            url: `${document.baseURI}docs/api`\n        }, {\n            title: 'About',\n            onClick: () => setIsModalOpen(true)\n        }\n    ];\n\n    {/* Combine aboutMenuItems with a settings link on mobile */}\n    const mobileDropdownItems = [\n        { title: 'separator' },\n        {\n            title: 'Settings',\n            url: `${document.baseURI}settings/my-user-access`\n        },\n        { title: 'separator' },\n        ...aboutMenuDropdownItems\n    ];\n\n    {/* QuestionMark icon that should be used for \"help/support\" things */}\n    const AboutButton = () => (\n        <ToolbarToggle\n            key='Help menu'\n            icon={ QuestionCircleIcon }\n            id='HelpMenu'\n            className='ins-c-toolbar__menu-help'\n            hasToggleIndicator={ null }\n            widget-type='HelpMenu'\n            dropdownItems={ aboutMenuDropdownItems }\n        />\n    );\n\n    return (\n        <PageHeaderTools widget-type=\"InsightsToolbar\">\n\n            {/* Show tools on medium and above screens */}\n            <PageHeaderToolsGroup visibility={{ default: 'hidden', sm: 'visible' }}>\n                { !isSettingsDisabled &&\n                    <PageHeaderToolsItem isSelected={ window.insights.chrome.getBundle() === 'settings' }>\n                        { <SettingsButton/> }\n                    </PageHeaderToolsItem>\n                }\n                <PageHeaderToolsItem>\n                    { <AboutButton/> }\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* Show full user dropdown on medium and above screens */}\n            <PageHeaderToolsGroup visibility={{ default: 'hidden', sm: 'visible' }}>\n                <PageHeaderToolsItem>\n                    <UserToggle className='ins-c-dropdown__user'/>\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* Collapse tools and user dropdown to kebab on small screens  */}\n            <PageHeaderToolsGroup visibility={{ sm: 'hidden' }}>\n                <PageHeaderToolsItem>\n                    <UserToggle isSmall extraItems={mobileDropdownItems.map((action, key) => (\n                        <React.Fragment key={key}>\n                            { action.title === 'separator'\n                                ? <Divider component=\"li\"/>\n                                : (<DropdownItem\n                                    {...(action.onClick\n                                        ? {\n                                            component: 'button',\n                                            onClick: action.onClick\n                                        } : {\n                                            href: action.url,\n                                            component: 'a',\n                                            target: '_blank',\n                                            rel: 'noopener noreferrer'\n                                        }\n                                    )}\n                                >\n                                    {action.title}\n                                </DropdownItem>)\n                            }\n                        </React.Fragment>\n                    ))} />\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* Render About Modal */}\n            { isModalOpen && <InsightsAbout isModalOpen={isModalOpen} onClose={() => setIsModalOpen(!isModalOpen)} /> }\n        </PageHeaderTools>\n    );\n};\n\nexport default Tools;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { login } from '../../jwt/jwt';\n\nconst Login = () => (\n    <div className=\"pf-c-page__header-tools\">\n        <Button\n            variant=\"tertiary\"\n            aria-label=\"Toggle primary navigation\"\n            widget-type=\"InsightsNavToggle\"\n            onClick={ login }>\n          Log in\n        </Button>\n    </div>\n);\n\nexport default Login;\n","import React from 'react';\nimport { Alert } from '@patternfly/react-core/dist/js/components/Alert/Alert';\nimport { AlertActionCloseButton } from '@patternfly/react-core/dist/js/components/Alert/AlertActionCloseButton';\nimport cookie from 'js-cookie';\n\nimport './LogoutAlert.scss';\n\nclass LogoutAlert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            alertOneVisible: cookie.get('cs_loggedOut') === 'true',\n            delay: 8000\n        };\n    }\n\n    hideAlertOne = () => {\n        this.setState({ alertOneVisible: false });\n        cookie.set('cs_loggedOut', 'false');\n    }\n    componentDidMount() {\n        this.setTimer();\n    }\n    componentWillUnmount() {\n        clearTimeout(this._timer);\n    }\n\n    setTimer = () => {\n        if (this._timer !== null) {\n            clearTimeout(this._timer);\n        }\n\n        // hide after `delay` milliseconds\n        this._timer = setTimeout(function() {\n            this.setState({ alertOneVisible: false });\n            clearTimeout(this._timer);\n        }.bind(this), this.state.delay);\n    }\n\n    render() {\n        const { alertOneVisible } = this.state;\n        return (\n            <React.Fragment>\n                { alertOneVisible && (\n                    <Alert\n                        variant=\"success\"\n                        title=\"You have successfully logged out.\"\n                        className=\"ins-c-alert__logout\"\n                        action={ <AlertActionCloseButton onClose={ this.hideAlertOne } /> }\n                    />\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default LogoutAlert;\n","import React, { Fragment } from 'react';\nimport Login from './Login';\nimport LogoutAlert from './LogoutAlert';\nimport Brand from './Brand';\n\nfunction Unauthed() {\n    return (\n        <Fragment>\n            <Brand />\n            <Login />\n            <LogoutAlert/>\n        </Fragment>\n    );\n}\n\nexport default Unauthed;\n","import React, { Fragment } from 'react';\nimport Brand from './Brand';\nimport Tools from './Tools';\nimport UnAuthtedHeader from './UnAuthtedHeader';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst Header = ({ user }) => {\n    return user ? (\n        <Fragment>\n            <Brand />\n            <Tools />\n        </Fragment>\n    ) : <UnAuthtedHeader />;\n};\n\nHeader.propTypes = {\n    user: PropTypes.oneOfType([\n        PropTypes.bool,\n        PropTypes.shape({\n            [PropTypes.string]: PropTypes.any\n        })\n    ])\n};\n\nexport default connect(({ chrome: { user } }) => ({ user }))(Header);\n","import React from 'react';\nimport { Nav } from '@patternfly/react-core/dist/js/components/Nav/Nav';\nimport  { NavItem } from '@patternfly/react-core/dist/js/components/Nav/NavItem';\nimport { NavExpandable } from '@patternfly/react-core/dist/js/components/Nav/NavExpandable';\nimport { NavList } from '@patternfly/react-core/dist/js/components/Nav/NavList';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { appNavClick, clearActive } from '../../redux/actions';\nimport NavigationItem from './NavigationItem';\nimport ExternalLinkAltIcon from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\n\nimport './Navigation.scss';\n\nconst basepath = document.baseURI;\n\nconst extraLinks = {\n    insights: [{\n        title: 'Subscription Watch',\n        link: './subscriptions/'\n    }, {\n        url: 'https://access.redhat.com/documentation/en-us/red_hat_insights/',\n        title: 'Documentation',\n        external: true\n    }],\n    subscriptions: [{\n        url: 'https://access.redhat.com/products/subscription-central',\n        title: 'Documentation',\n        external: true\n    }],\n    'cost-management': [{\n        url: 'https://access.redhat.com/documentation/en-us/openshift_container_platform/#category-cost-management',\n        title: 'Documentation',\n        external: true\n    }],\n    ansible: [{\n        url: 'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/',\n        title: 'Documentation',\n        external: true\n    }],\n    openshift: [{\n        title: 'Support Cases',\n        link: 'https://access.redhat.com/support/cases'\n    }, {\n        title: 'Cluster Manager Feedback',\n        link: 'mailto:ocm-feedback@redhat.com'\n    }, {\n        title: 'Red Hat Marketplace',\n        link: 'https://marketplace.redhat.com'\n    }, {\n        url: 'https://docs.openshift.com/dedicated/4/',\n        title: 'Documentation',\n        external: true\n    }]\n};\n\nexport const Navigation = ({\n    settings,\n    activeApp,\n    activeLocation,\n    onNavigate,\n    onClearActive,\n    activeGroup,\n    appId\n}) => {\n    const onClick = (event, item, parent) => {\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        let url = `${basepath}${activeLocation || ''}`;\n\n        // always redirect if in subNav and current or new navigation has reload\n        if (parent?.active) {\n            const activeLevel = settings.find(({ id }) => id === appId);\n            const activeItem = activeLevel?.subItems?.find?.(({ id }) => id === activeGroup);\n            if (item.reload || activeItem?.reload) {\n                url = `${url}/${item.reload || `${appId}/${item.id}`}`;\n                isMetaKey ? window.open(url) : window.location.href = url;\n            }\n        }\n\n        // If in SPA do not perform redirect\n        if ((item.group && activeGroup === item.group) || parent?.active) {\n            if (isMetaKey) {\n                window.open(`${url}/${item.id}`);\n            } else {\n                !parent?.active && onClearActive();\n                onNavigate(item, event);\n            }\n        } else {\n            const itemUrl = `${parent?.id ? `${parent.id}/` : ''}${item.id}`;\n            url = `${url}/${item.reload || itemUrl}`;\n            isMetaKey ? window.open(url) : window.location.href = url;\n        }\n    };\n\n    return (\n        <Nav aria-label=\"Insights Global Navigation\" data-ouia-safe=\"true\">\n            <NavList>\n                {settings?.map((item, key) => (\n                    item.subItems ? <NavExpandable\n                        className=\"ins-m-navigation-align\"\n                        title={item.title}\n                        itemID={item.id}\n                        ouiaId={item.id}\n                        key={key}\n                        isActive={item.active}\n                        isExpanded={item.active}>\n                        {\n                            item.subItems.map((subItem, subKey) => <NavigationItem\n                                ignoreCase={subItem.ignoreCase}\n                                itemID={subItem.reload || subItem.id}\n                                ouiaId={subItem.reload || subItem.id}\n                                key={subKey}\n                                title={subItem.title}\n                                parent={subItem.reload ? activeLocation : `${activeLocation}${item.id ? `/${item.id}` : ''}`}\n                                isActive={item.active && subItem.id === activeApp}\n                                onClick={event => onClick(event, subItem, item)}\n                            />)\n                        }\n                    </NavExpandable> : <NavigationItem\n                        ignoreCase={item.ignoreCase}\n                        itemID={item.id}\n                        ouiaId={item.id}\n                        key={key}\n                        title={item.title}\n                        parent={activeLocation}\n                        isActive={item.active || item.id === activeApp}\n                        onClick={event => onClick(event, item)}\n                    />\n                ))}\n                {extraLinks[activeLocation]?.map?.((item, key) => (\n                    <NavItem\n                        className='ins-c-navigation__additional-links'\n                        key={key}\n                        to={item.url || item.link}\n                        ouiaId={item.id}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {item.title} {item.external && <ExternalLinkAltIcon/>}\n                    </NavItem>\n                ))}\n            </NavList>\n        </Nav>\n    );\n};\n\nNavigation.propTypes = {\n    appId: PropTypes.string,\n    settings: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string,\n            ignoreCase: PropTypes.bool,\n            subItems: () => Navigation.propTypes.settings\n        })\n    ),\n    activeApp: PropTypes.string,\n    navHidden: PropTypes.bool,\n    activeLocation: PropTypes.string,\n    onNavigate: PropTypes.func,\n    onClearActive: PropTypes.func,\n    activeGroup: PropTypes.string\n};\n\nfunction stateToProps({ chrome: { globalNav, activeApp, navHidden, activeLocation, activeGroup, appId } }) {\n    return ({ settings: globalNav, activeApp, navHidden, activeLocation, activeGroup, appId });\n}\n\nexport function dispatchToProps(dispatch) {\n    return {\n        onNavigate: (item, event) => dispatch(appNavClick(item, event)),\n        onClearActive: () => dispatch(clearActive())\n    };\n}\n\nexport default connect(stateToProps, dispatchToProps)(Navigation);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport { CaretDownIcon } from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\n\nimport './AppSwitcher.scss';\n\nconst AppSwitcher = ({ currentApp }) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const dropdownItems = (activeApp) => {\n\n        const appList = [\n            { title: 'Red Hat Insights', id: 'insights' },\n            { title: 'Red Hat OpenShift Cluster Manager', id: 'openshift' },\n            { title: 'Red Hat Ansible Automation Platform', id: 'ansible' },\n            { title: 'Cost Management', id: 'cost-management' },\n            { title: 'Migration Services', id: 'migrations' },\n            { title: 'Subscription Watch', id: 'subscriptions' }\n        ];\n\n        const renderNavItems = appList.map(app =>\n            <DropdownItem\n                component='a'\n                href={`${document.baseURI}${app.id}`}\n                className={classNames({ 'ins-c-app-switcher__current': app.title === activeApp })}\n                key={app.id}\n                ouiaId={app.id}>\n                {app.title}\n            </DropdownItem>\n        );\n\n        return renderNavItems;\n\n    };\n\n    return (\n        <section className=\"ins-c-app-switcher\">\n            <Dropdown\n                isPlain\n                className='ins-c-app-switcher__dropdown'\n                onSelect={() => setIsOpen(!isOpen)}\n                toggle={\n                    <DropdownToggle id=\"toggle-id\" onToggle={() => setIsOpen(!isOpen)} toggleIndicator={CaretDownIcon}>\n                        { currentApp }\n                    </DropdownToggle>\n                }\n                isOpen={isOpen}\n                dropdownItems={dropdownItems(currentApp)}\n                ouiaId='App Switcher'\n            />\n        </section>\n    );\n};\n\nexport default AppSwitcher;\n\nAppSwitcher.propTypes = {\n    currentApp: PropTypes.string\n};\n","import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Navigation from './Navigation';\nimport { connect, useDispatch } from 'react-redux';\n\nimport AppSwitcher from './AppSwitcher';\nimport { appNavClick } from '../../redux/actions';\nimport NavLoader from './Loader';\n\nexport const SideNav = ({ activeTechnology, globalNav }) => {\n    const dispatch = useDispatch();\n    const [isFirst, setIsFirst] = useState(true);\n    useEffect(() => {\n        if (globalNav && isFirst) {\n            const { subItems } = globalNav?.find?.(({ active }) => active) || {};\n            const defaultActive = subItems?.find?.(\n                ({ id }) => location.pathname.split('/').find(item => item === id)\n            ) ||\n            subItems?.find?.(({ default: isDefault }) => isDefault) ||\n            subItems?.[0];\n\n            dispatch(appNavClick(defaultActive || {}));\n            setIsFirst(() => false);\n        }\n    }, [globalNav]);\n\n    return globalNav ? <Fragment>\n        <AppSwitcher currentApp={activeTechnology}/>\n        <Navigation />\n    </Fragment> : <NavLoader />;\n};\n\nSideNav.propTypes = {\n    activeTechnology: PropTypes.string,\n    globalNav: PropTypes.arrayOf(PropTypes.object)\n};\n\nSideNav.defaultProps = {\n    activeTechnology: '',\n    activeLocation: ''\n};\n\nexport default connect(({ chrome: {\n    activeTechnology,\n    globalNav,\n    appNav\n} }) => ({\n    activeTechnology,\n    globalNav,\n    appNav\n}))(SideNav);\n"],"sourceRoot":""}