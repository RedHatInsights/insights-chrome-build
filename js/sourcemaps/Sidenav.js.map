{"version":3,"sources":["webpack:///./src/js/App/Sidenav/Navigation.js","webpack:///./src/js/App/Sidenav/NavigationItem.js","webpack:///./src/js/App/Sidenav/Navigation.scss?07f4","webpack:///./src/js/App/Sidenav/Navigation.scss","webpack:///./src/js/App/Sidenav/AppSwitcher.js","webpack:///./src/js/App/Sidenav/AppSwitcher.scss?1c12","webpack:///./src/js/App/Sidenav/AppSwitcher.scss","webpack:///./src/js/App/Sidenav/index.js"],"names":["basepath","document","baseURI","openshiftLinks","supportcases","title","link","feedback","marketplace","insightsLinks","subscriptionWatch","Navigation","props","onSelect","bind","onClick","groupId","itemID","this","setState","activeGroup","activeItem","event","item","parent","persist","url","onNavigate","onClearActive","activeLocation","settings","appId","isMetaKey","ctrlKey","metaKey","which","active","activeLevel","find","navItem","id","subItems","reload","window","open","location","href","group","prefix","activeApp","documentation","aria-label","data-ouia-safe","map","key","disabled_on_stable","pathname","indexOf","ouia-nav-group","isActive","isExpanded","subItem","subKey","ignoreCase","ouia-nav-item","Object","entries","value","to","target","rel","Fragment","className","Component","propTypes","PropTypes","string","arrayOf","shape","bool","navHidden","func","connect","chrome","globalNav","dispatch","appNavClick","clearActive","NavigationItem","navigate","itemId","classNames","preventDefault","oneOfType","number","node","defaultProps","api","content","__esModule","default","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","AppSwitcher","currentApp","useState","isOpen","setIsOpen","isPlain","toggle","onToggle","toggleIndicator","CaretDownIcon","dropdownItems","app","component","documentationLink","insights","openshift","subscriptions","ansible","SideNav","activeTechnology"],"mappings":"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","file":"Sidenav.a8a4fe136469184bdebf.js","sourcesContent":["import React, { Component } from 'react';\nimport { Nav } from '@patternfly/react-core/dist/js/components/Nav/Nav';\nimport  { NavItem } from '@patternfly/react-core/dist/js/components/Nav/NavItem';\nimport { NavExpandable } from '@patternfly/react-core/dist/js/components/Nav/NavExpandable';\nimport { NavList } from '@patternfly/react-core/dist/js/components/Nav/NavList';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { appNavClick, clearActive } from '../../redux/actions';\nimport NavigationItem from './NavigationItem';\n\nimport './Navigation.scss';\n\nconst basepath = document.baseURI;\n\nconst openshiftLinks = {\n    supportcases: {\n        title: 'Support Cases',\n        link: 'https://access.redhat.com/support/cases'\n    },\n    feedback: {\n        title: 'Cluster Manager Feedback',\n        link: 'mailto:ocm-feedback@redhat.com'\n    },\n    marketplace: {\n        title: 'Red Hat Marketplace',\n        link: 'https://marketplace.redhat.com'\n    }\n};\n\nconst insightsLinks = {\n    subscriptionWatch: {\n        title: 'Subscription Watch',\n        link: './subscriptions/'\n    }\n};\n\nexport class Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.onSelect = this.onSelect.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onSelect({ groupId, itemID }) {\n        this.setState({\n            activeGroup: groupId,\n            activeItem: itemID\n        });\n    };\n\n    onClick(event, item, parent) {\n        event.persist();\n        const { onNavigate, onClearActive, activeGroup, activeLocation, settings, appId } = this.props;\n\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        let url;\n\n        if (parent && parent.active) {\n            const activeLevel = settings.find(navItem => navItem.id === appId);\n            if (activeLevel) {\n                const activeItem = activeLevel.subItems.find(navItem => navItem.id === activeGroup);\n                if (activeItem && activeItem.reload && !item.reload) {\n                    url = `${basepath}${activeLocation}/${appId}/${item.id}`;\n                    isMetaKey ? window.open(url) : window.location.href = url;\n                }\n            }\n\n            if (!item.reload) {\n                isMetaKey ?  window.open(`${basepath}${activeLocation}/${item.reload}`) :  onNavigate && onNavigate(item, event);\n            } else {\n                url = `${basepath}${activeLocation}/${item.reload}`;\n                isMetaKey ? window.open(url) : window.location.href = url;\n            }\n        } else {\n            if (item.group && activeGroup === item.group) {\n                if (isMetaKey) {\n                    window.open(`${basepath}${activeLocation}/${item.id}`);\n                } else {\n                    onClearActive && onClearActive();\n                    onNavigate && onNavigate(item, event);\n                }\n            } else {\n                const prefix = (parent && parent.id && !item.reload) ? `/${parent.id}/` : '/';\n                url = `${basepath}${activeLocation}${prefix}${item.reload || item.id}`;\n                isMetaKey ? window.open(url) : window.location.href = url;\n            }\n        }\n    }\n\n    render() {\n        const { settings, activeApp, /*navHidden,*/ activeLocation, documentation } = this.props;\n        // if (navHidden) {\n        //     //document.querySelector('aside').setAttribute('hidden', true);\n        // }\n        return (\n            <Nav onSelect={this.onSelect} aria-label=\"Insights Global Navigation\" data-ouia-safe=\"true\">\n                <NavList>\n                    {\n                        settings.map((item, key) => {\n                            if (!(item.disabled_on_stable && window.location.pathname.indexOf('/beta') === -1)) {\n                                if (item.subItems) {\n                                    return <NavExpandable\n                                        title={item.title}\n                                        ouia-nav-group={item.id}\n                                        itemID={item.id}\n                                        key={key}\n                                        isActive={item.active}\n                                        isExpanded={item.active}>\n                                        {\n                                            item.subItems.map((subItem, subKey) => {\n                                                if (!(subItem.disabled_on_stable\n                                                    && window.location.pathname.indexOf('/beta') === -1)) {\n                                                    return <NavigationItem\n                                                        ignoreCase={subItem.ignoreCase}\n                                                        itemID={subItem.reload || subItem.id}\n                                                        ouia-nav-item={subItem.reload || subItem.id}\n                                                        key={subKey}\n                                                        title={subItem.title}\n                                                        parent={`${activeLocation}${item.id ? `/${item.id}` : ''}`}\n                                                        isActive={item.active && subItem.id === activeApp}\n                                                        onClick={event => this.onClick(event, subItem, item)}\n                                                    />;\n                                                }\n                                            })\n                                        }\n                                    </NavExpandable>;\n                                } else {\n                                    return <NavigationItem\n                                        ignoreCase={item.ignoreCase}\n                                        itemID={item.id}\n                                        ouia-nav-item={item.id}\n                                        key={key}\n                                        title={item.title}\n                                        parent={activeLocation}\n                                        isActive={item.active || item.id === activeApp}\n                                        onClick={event => this.onClick(event, item)}\n                                    />;\n                                }\n                            }\n                        })\n                    }\n                    { activeLocation === 'insights' &&\n                        Object.entries(insightsLinks).map(\n                            ([key, value]) => {\n                                return <NavItem\n                                    key={key}\n                                    to={value.link}\n                                    target='_blank'\n                                    rel='noopener noreferrer'>\n                                    {value.title}\n                                </NavItem>;\n                            }\n                        )\n                    }\n                    { documentation &&\n                        <React.Fragment>\n                            <NavItem\n                                className=\"ins-c-page__documentation\"\n                                to={documentation}\n                                rel='noopener noreferrer'\n                                target='_blank'>Documentation\n                            </NavItem>\n                        </React.Fragment>\n                    }\n                    { activeLocation === 'openshift' &&\n                        Object.entries(openshiftLinks).map(\n                            ([key, value]) => {\n                                return <NavItem\n                                    key={key}\n                                    to={value.link}\n                                    target='_blank'\n                                    rel='noopener noreferrer'>\n                                    {value.title}\n                                </NavItem>;\n                            }\n                        )\n                    }\n                </NavList>\n            </Nav>\n        );\n    }\n}\n\nNavigation.propTypes = {\n    appId: PropTypes.string,\n    settings: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string,\n            ignoreCase: PropTypes.bool,\n            subItems: () => Navigation.propTypes.settings\n        })\n    ),\n    activeApp: PropTypes.string,\n    navHidden: PropTypes.bool,\n    activeLocation: PropTypes.string,\n    documentation: PropTypes.string,\n    onNavigate: PropTypes.func,\n    onClearActive: PropTypes.func,\n    activeGroup: PropTypes.string\n};\n\nfunction stateToProps({ chrome: { globalNav, activeApp, navHidden, activeLocation, activeGroup, appId } }) {\n    return ({ settings: globalNav, activeApp, navHidden, activeLocation, activeGroup, appId });\n}\n\nexport function dispatchToProps(dispatch) {\n    return {\n        onNavigate: (item, event) => dispatch(appNavClick(item, event)),\n        onClearActive: () => dispatch(clearActive())\n    };\n}\n\nexport default connect(stateToProps, dispatchToProps)(Navigation);\n","import React from 'react';\nimport { NavItem } from '@patternfly/react-core/dist/js/components/Nav/NavItem';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst basepath = document.baseURI;\n\nconst NavigationItem = ({ itemID, title, parent, navigate, ignoreCase, ...props }) => (\n    <NavItem\n        {...props}\n        itemId={itemID}\n        className={classNames({ 'ins-m-ignore-case': ignoreCase })}\n        preventDefault\n        to={navigate || `${basepath}${parent}/${itemID}`}\n    >\n        {title}\n    </NavItem>\n);\n\nNavigationItem.propTypes = {\n    itemID: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    title: PropTypes.node,\n    navigate: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    parent: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    ignoreCase: PropTypes.bool\n};\n\nNavigationItem.defaultProps = {\n    parent: ''\n};\n\nexport default NavigationItem;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./Navigation.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-sidebar .pf-c-nav .pf-c-nav__link{text-transform:capitalize}.ins-c-sidebar .pf-c-nav .pf-c-nav__link.ins-m-ignore-case{text-transform:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport { CaretDownIcon } from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\n\nimport './AppSwitcher.scss';\n\nconst AppSwitcher = ({ currentApp }) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const dropdownItems = (activeApp) => {\n\n        const appList = [\n            { title: 'Red Hat Insights', id: 'insights' },\n            { title: 'Red Hat OpenShift Cluster Manager', id: 'openshift' },\n            { title: 'Red Hat Ansible Automation Platform', id: 'ansible' },\n            { title: 'Cost Management', id: 'cost-management' },\n            { title: 'Migration Services', id: 'migrations' },\n            { title: 'Subscription Watch', id: 'subscriptions' }\n        ];\n\n        const renderNavItems = appList.map(app =>\n            <DropdownItem\n                component='a'\n                href={`${document.baseURI}${app.id}`}\n                className={classNames({ 'ins-c-app-switcher__current': app.title === activeApp })}\n                key={app.id}>\n                {app.title}\n            </DropdownItem>\n        );\n\n        return renderNavItems;\n\n    };\n\n    return (\n        <section className='ins-c-app-switcher'>\n            <Dropdown\n                isPlain\n                className='ins-c-app-switcher__dropdown'\n                onSelect={() => setIsOpen(!isOpen)}\n                toggle={\n                    <DropdownToggle id=\"toggle-id\" onToggle={() => setIsOpen(!isOpen)} toggleIndicator={CaretDownIcon}>\n                        { currentApp }\n                    </DropdownToggle>\n                }\n                isOpen={isOpen}\n                dropdownItems={dropdownItems(currentApp)}\n            />\n        </section>\n    );\n};\n\nexport default AppSwitcher;\n\nAppSwitcher.propTypes = {\n    currentApp: PropTypes.string\n};\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./AppSwitcher.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".ins-c-app-switcher{width:100%;padding:calc(8px + var(--pf-global--spacer--sm)) 12px;margin-top:7px;border-bottom:3px solid #3c3f42}.ins-c-app-switcher .ins-c-app-switcher__dropdown{width:100%;padding:8px 12px}.ins-c-app-switcher .ins-c-app-switcher__dropdown.pf-m-expanded,.ins-c-app-switcher .ins-c-app-switcher__dropdown:hover{background:#393c3d}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__menu{min-width:unset;left:0}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__toggle{color:white;padding:0;width:100%;justify-content:space-between}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__toggle .pf-c-dropdown__toggle-text{text-transform:capitalize;font-weight:var(--pf-global--FontWeight--semi-bold);white-space:normal;text-align:left}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__menu-item{word-wrap:break-word;white-space:normal}.ins-c-app-switcher .ins-c-app-switcher__dropdown .pf-c-dropdown__menu-item.ins-c-app-switcher__current{font-weight:var(--pf-global--FontWeight--semi-bold);background:var(--pf-c-dropdown__menu-item--hover--BackgroundColor)}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Navigation from './Navigation';\nimport { connect } from 'react-redux';\n\nimport AppSwitcher from './AppSwitcher';\n\nconst documentationLink = {\n    insights: 'https://access.redhat.com/documentation/en-us/red_hat_insights/',\n    openshift: 'https://docs.openshift.com/dedicated/4/',\n    subscriptions: 'https://access.redhat.com/products/subscription-central',\n    'cost-management': 'https://access.redhat.com/documentation/en-us/openshift_container_platform/#category-cost-management',\n    ansible: 'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/'\n};\n\nexport class SideNav extends Component {\n    render() {\n        const { activeTechnology, activeLocation } = this.props;\n        return (<Fragment>\n            <AppSwitcher currentApp={activeTechnology}/>\n            <Navigation documentation={documentationLink[activeLocation]} />\n        </Fragment>);\n    }\n}\n\nSideNav.propTypes = {\n    activeTechnology: PropTypes.string,\n    activeLocation: PropTypes.string\n};\n\nSideNav.defaultProps = {\n    activeTechnology: '',\n    activeLocation: ''\n};\n\nexport default connect(({ chrome: {\n    activeTechnology,\n    activeLocation\n} }) => ({\n    activeTechnology,\n    activeLocation\n}))(SideNav);\n"],"sourceRoot":""}