{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/construct.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeFunction.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-general-info/esm/api/api.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-general-info/esm/redux/action-types.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-general-info/esm/redux/actions.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-general-info/esm/redux/reducers.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-general-info/node_modules/@redhat-cloud-services/host-inventory-client/dist/api.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-general-info/node_modules/@redhat-cloud-services/host-inventory-client/dist/base.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-general-info/node_modules/@redhat-cloud-services/host-inventory-client/dist/configuration.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-inventory-general-info/node_modules/@redhat-cloud-services/host-inventory-client/dist/index.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/ReducerRegistry/ReducerRegistry.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/interceptors/interceptors.js","webpack:///./node_modules/abortcontroller-polyfill/dist/polyfill-patch-fetch.js"],"names":["setPrototypeOf","isNativeReflectConstruct","_construct","Parent","args","Class","module","exports","Reflect","construct","a","push","apply","instance","Function","bind","prototype","arguments","fn","toString","call","indexOf","sham","Proxy","Date","e","getPrototypeOf","isNativeFunction","_wrapNativeSuper","_cache","Map","undefined","TypeError","has","get","set","Wrapper","this","constructor","Object","create","value","enumerable","writable","configurable","hosts","HostsApi","getEntitySystemProfile","item","apiHostGetHostSystemProfileById","asyncInventory","reduce","acc","curr","concat","ACTION_TYPES","SET_DISPLAY_NAME","SET_ANSIBLE_HOST","systemProfile","itemId","type","payload","editDisplayName","id","display_name","meta","notifications","fulfilled","variant","title","dismissable","editAnsibleHost","ansible_host","_applyReducerHash","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","target","i","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","defaultState","loaded","sizes","formatBytes","bytes","isNaN","Number","index","Math","floor","log","parseFloat","pow","toFixed","systemProfilePending","state","calculateRepos","repos","enabled","disabled","calculateInterfaces","interfaces","ipv4","ipv4_addresses","Boolean","ipv6","ipv6_addresses","onSystemProfile","_ref","results","system_profile","ramSize","system_memory_bytes","repositories","yum_repos","network","network_interfaces","extendStatics","__extends","d","b","__proto__","Array","p","hasOwnProperty","__","__assign","assign","t","s","n","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","globalImportUrl","axios_1","base_1","SystemProfileSelinuxCurrentModeEnum","SystemProfileSelinuxConfigFileEnum","SystemProfileOperatingSystemNameEnum","DefaultApiAxiosParamCreator","configuration","_this","apiSystemProfileValidateSchema","repoBranch","repoFork","days","options","localVarUrlObj","baseOptions","localVarRequestOptions","localVarHeaderParameter","localVarQueryParameter","localVarApiKeyValue","_a","headersFromBaseOptions","_b","RequiredError","parse","method","apiKey","query","search","headers","url","format","DefaultApiFp","localVarAxiosArgs","axios","basePath","default","BASE_PATH","axiosRequestArgs","request","DefaultApiFactory","DefaultApi","_super","BaseAPI","HostsApiAxiosParamCreator","apiHostDeleteById","hostIdList","branchId","localVarPath","replace","encodeURIComponent","String","apiHostGetHostById","perPage","page","orderBy","orderHow","apiHostGetHostList","displayName","fqdn","hostnameOrId","insightsId","staleness","tags","registeredWith","apiHostGetHostTagCount","apiHostGetHostTags","apiHostHostCheckin","createCheckIn","accessToken","needsSerialization","data","JSON","stringify","apiHostMergeFacts","namespace","apiHostPatchById","patchHostIn","apiHostReplaceFacts","HostsApiFp","HostsApiFactory","SapSystemApiAxiosParamCreator","apiSystemProfileGetSapSids","apiSystemProfileGetSapSystem","SapSystemApiFp","SapSystemApiFactory","SapSystemApi","TagsApiAxiosParamCreator","apiTagGetTags","TagsApiFp","TagsApiFactory","TagsApi","COLLECTION_FORMATS","csv","ssv","tsv","pipes","field","msg","name","Error","Configuration","param","username","password","__export","m","applyReducerHash","reducerHash","initialState","action","ReducerRegistry","initState","middlewares","composeEnhancersDefault","compose","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","reducers","newReducers","replaceReducer","combineReducers","entries","reducer","includes","_ref2","val","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","NewTarget","_authInterceptor","_callee","config","_context","prev","insights","chrome","auth","getUser","abrupt","stop","interceptors","use","_x","response","error","status","logout","scope","setTag","req_id","err","requestId","_errObject$response","_errObject$response$h","errObject","statusText","customError","sentryId","_classCallCheck","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","o","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_superPropBase","property","_get","receiver","base","desc","Emitter","callback","listeners","stack","l","splice","event","stackToCall","slice","listener","once","removeEventListener","defaultPrevented","AbortSignal","_Emitter","aborted","onabort","AbortController","Event","document","createEvent","initEvent","createEventObject","bubbles","cancelable","signal","dispatchEvent","polyfillNeeded","__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL","console","Request","abortableFetchDecorator","patchTargets","fetch","_patchTargets","_patchTargets$Request","NativeRequest","NativeAbortController","_patchTargets$__FORCE","input","init","realFetch","isPrototypeOf","abortError","DOMException","cancellation","addEventListener","race","toStringTag","_abortableFetch","warn"],"mappings":"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","file":"2693.dc55ed0953430b8ee2b9.js","sourcesContent":["var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","import 'abortcontroller-polyfill/dist/polyfill-patch-fetch';\nexport var INVENTORY_API_BASE = '/api/inventory/v1';\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { HostsApi } from '@redhat-cloud-services/host-inventory-client';\nexport var hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\nexport var getEntitySystemProfile = function getEntitySystemProfile(item) {\n  return hosts.apiHostGetHostSystemProfileById([item]);\n};","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar asyncInventory = ['LOAD_SYSTEM_PROFILE'].reduce(function (acc, curr) {\n  return [].concat(_toConsumableArray(acc), [curr, \"\".concat(curr, \"_PENDING\"), \"\".concat(curr, \"_FULFILLED\"), \"\".concat(curr, \"_REJECTED\")]);\n}, []);\nexport var ACTION_TYPES = _toConsumableArray(asyncInventory).reduce(function (acc, curr) {\n  acc[curr] = curr;\n  return acc;\n}, {\n  SET_DISPLAY_NAME: 'SET_DISPLAY_NAME',\n  SET_ANSIBLE_HOST: 'SET_ANSIBLE_HOST'\n});","import { ACTION_TYPES } from './action-types';\nimport { getEntitySystemProfile, hosts } from '../api';\nexport var systemProfile = function systemProfile(itemId) {\n  return {\n    type: ACTION_TYPES.LOAD_SYSTEM_PROFILE,\n    payload: getEntitySystemProfile(itemId, {})\n  };\n};\nexport var editDisplayName = function editDisplayName(id, value) {\n  return {\n    type: ACTION_TYPES.SET_DISPLAY_NAME,\n    payload: hosts.apiHostPatchById([id], {\n      display_name: value\n    }),\n    // eslint-disable-line camelcase\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Display name has been updated',\n          dismissable: true\n        }\n      }\n    }\n  };\n};\nexport var editAnsibleHost = function editAnsibleHost(id, value) {\n  return {\n    type: ACTION_TYPES.SET_ANSIBLE_HOST,\n    payload: hosts.apiHostPatchById([id], {\n      ansible_host: value\n    }),\n    // eslint-disable-line camelcase\n    meta: {\n      notifications: {\n        fulfilled: {\n          variant: 'success',\n          title: 'Ansible hostname has been updated',\n          dismissable: true\n        }\n      }\n    }\n  };\n};","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _applyReducerHash;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { ACTION_TYPES } from './action-types';\nexport var defaultState = {\n  loaded: false\n};\nexport var sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']; // Kudos to https://stackoverflow.com/a/18650828/2560321\n\nexport var formatBytes = function formatBytes(bytes) {\n  if (bytes === 0 || isNaN(Number(bytes))) {\n    return '0 B';\n  }\n\n  var index = Math.floor(Math.log(bytes) / Math.log(1024));\n  return \"\".concat(parseFloat((bytes / Math.pow(1024, index)).toFixed(2)), \" \").concat(sizes[index]);\n};\nexport function systemProfilePending(state) {\n  return _objectSpread({}, state, {\n    systemProfile: {\n      loaded: false\n    }\n  });\n}\nexport function calculateRepos(repos) {\n  return repos && repos.reduce(function (acc, curr) {\n    return _objectSpread({}, acc, {}, curr.enabled ? {\n      enabled: [].concat(_toConsumableArray(acc.enabled), [curr])\n    } : {\n      disabled: [].concat(_toConsumableArray(acc.disabled), [curr])\n    });\n  }, {\n    enabled: [],\n    disabled: []\n  });\n}\nexport function calculateInterfaces(interfaces) {\n  return interfaces && interfaces.reduce(function (acc, curr) {\n    return {\n      interfaces: [].concat(_toConsumableArray(acc.interfaces), [curr]),\n      ipv4: [].concat(_toConsumableArray(acc.ipv4), _toConsumableArray(curr.ipv4_addresses || [])).filter(Boolean),\n      ipv6: [].concat(_toConsumableArray(acc.ipv6), _toConsumableArray(curr.ipv6_addresses || [])).filter(Boolean)\n    };\n  }, {\n    interfaces: [],\n    ipv4: [],\n    ipv6: []\n  });\n}\nexport function onSystemProfile(state, _ref) {\n  var results = _ref.payload.results;\n  var systemProfile = results && results[0] && results[0].system_profile || {};\n  return _objectSpread({}, state, {\n    systemProfile: _objectSpread({\n      loaded: true\n    }, systemProfile, {\n      ramSize: systemProfile.system_memory_bytes && formatBytes(systemProfile.system_memory_bytes),\n      repositories: calculateRepos(systemProfile.yum_repos),\n      network: calculateInterfaces(systemProfile.network_interfaces)\n    })\n  });\n}\nexport default applyReducerHash((_applyReducerHash = {}, _defineProperty(_applyReducerHash, ACTION_TYPES.LOAD_SYSTEM_PROFILE_FULFILLED, onSystemProfile), _defineProperty(_applyReducerHash, ACTION_TYPES.LOAD_SYSTEM_PROFILE_PENDING, systemProfilePending), _applyReducerHash), {\n  systemProfile: defaultState\n});","\"use strict\";\n// tslint:disable\n/**\n * Insights Host Inventory REST Interface\n * REST interface for the Insights Platform Host Inventory application.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar globalImportUrl = require(\"url\");\nvar axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar base_1 = require(\"./base\");\n/**\n    * @export\n    * @enum {string}\n    */\nvar SystemProfileSelinuxCurrentModeEnum;\n(function (SystemProfileSelinuxCurrentModeEnum) {\n    SystemProfileSelinuxCurrentModeEnum[\"Enforcing\"] = \"enforcing\";\n    SystemProfileSelinuxCurrentModeEnum[\"Permissive\"] = \"permissive\";\n    SystemProfileSelinuxCurrentModeEnum[\"Disabled\"] = \"disabled\";\n})(SystemProfileSelinuxCurrentModeEnum = exports.SystemProfileSelinuxCurrentModeEnum || (exports.SystemProfileSelinuxCurrentModeEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar SystemProfileSelinuxConfigFileEnum;\n(function (SystemProfileSelinuxConfigFileEnum) {\n    SystemProfileSelinuxConfigFileEnum[\"Enforcing\"] = \"enforcing\";\n    SystemProfileSelinuxConfigFileEnum[\"Permissive\"] = \"permissive\";\n    SystemProfileSelinuxConfigFileEnum[\"Disabled\"] = \"disabled\";\n})(SystemProfileSelinuxConfigFileEnum = exports.SystemProfileSelinuxConfigFileEnum || (exports.SystemProfileSelinuxConfigFileEnum = {}));\n/**\n    * @export\n    * @enum {string}\n    */\nvar SystemProfileOperatingSystemNameEnum;\n(function (SystemProfileOperatingSystemNameEnum) {\n    SystemProfileOperatingSystemNameEnum[\"RHEL\"] = \"RHEL\";\n})(SystemProfileOperatingSystemNameEnum = exports.SystemProfileOperatingSystemNameEnum || (exports.SystemProfileOperatingSystemNameEnum = {}));\n/**\n * DefaultApi - axios parameter creator\n * @export\n */\nexports.DefaultApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary validate system profile schema\n         * @param {string} repoBranch The branch of the inventory-schemas repo to use\n         * @param {string} [repoFork] The fork of the inventory-schemas repo to use\n         * @param {number} [days] How many days worth of kafka messages to validate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileValidateSchema: function (repoBranch, repoFork, days, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'repoBranch' is not null or undefined\n                            if (repoBranch === null || repoBranch === undefined) {\n                                throw new base_1.RequiredError('repoBranch', 'Required parameter repoBranch was null or undefined when calling apiSystemProfileValidateSchema.');\n                            }\n                            localVarPath = \"/system_profile/validate_schema\";\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (repoFork !== undefined) {\n                                localVarQueryParameter['repo_fork'] = repoFork;\n                            }\n                            if (repoBranch !== undefined) {\n                                localVarQueryParameter['repo_branch'] = repoBranch;\n                            }\n                            if (days !== undefined) {\n                                localVarQueryParameter['days'] = days;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * DefaultApi - functional programming interface\n * @export\n */\nexports.DefaultApiFp = function (configuration) {\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary validate system profile schema\n         * @param {string} repoBranch The branch of the inventory-schemas repo to use\n         * @param {string} [repoFork] The fork of the inventory-schemas repo to use\n         * @param {number} [days] How many days worth of kafka messages to validate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileValidateSchema: function (repoBranch, repoFork, days, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.DefaultApiAxiosParamCreator(configuration).apiSystemProfileValidateSchema(repoBranch, repoFork, days, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * DefaultApi - factory interface\n * @export\n */\nexports.DefaultApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary validate system profile schema\n         * @param {string} repoBranch The branch of the inventory-schemas repo to use\n         * @param {string} [repoFork] The fork of the inventory-schemas repo to use\n         * @param {number} [days] How many days worth of kafka messages to validate\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileValidateSchema: function (repoBranch, repoFork, days, options) {\n            return exports.DefaultApiFp(configuration).apiSystemProfileValidateSchema(repoBranch, repoFork, days, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * DefaultApi - object-oriented interface\n * @export\n * @class DefaultApi\n * @extends {BaseAPI}\n */\nvar DefaultApi = /** @class */ (function (_super) {\n    __extends(DefaultApi, _super);\n    function DefaultApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Required permissions: inventory:hosts:read\n     * @summary validate system profile schema\n     * @param {string} repoBranch The branch of the inventory-schemas repo to use\n     * @param {string} [repoFork] The fork of the inventory-schemas repo to use\n     * @param {number} [days] How many days worth of kafka messages to validate\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof DefaultApi\n     */\n    DefaultApi.prototype.apiSystemProfileValidateSchema = function (repoBranch, repoFork, days, options) {\n        var _this = this;\n        return exports.DefaultApiFp(this.configuration).apiSystemProfileValidateSchema(repoBranch, repoFork, days, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return DefaultApi;\n}(base_1.BaseAPI));\nexports.DefaultApi = DefaultApi;\n/**\n * HostsApi - axios parameter creator\n * @export\n */\nexports.HostsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Delete hosts by IDs <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Delete hosts by IDs\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostDeleteById: function (hostIdList, branchId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'hostIdList' is not null or undefined\n                            if (hostIdList === null || hostIdList === undefined) {\n                                throw new base_1.RequiredError('hostIdList', 'Required parameter hostIdList was null or undefined when calling apiHostDeleteById.');\n                            }\n                            localVarPath = \"/hosts/{host_id_list}\"\n                                .replace(\"{\" + \"host_id_list\" + \"}\", encodeURIComponent(String(hostIdList)));\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'DELETE' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (branchId !== undefined) {\n                                localVarQueryParameter['branch_id'] = branchId;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find one or more hosts by their ID. <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Find hosts by their IDs\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostById: function (hostIdList, branchId, perPage, page, orderBy, orderHow, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'hostIdList' is not null or undefined\n                            if (hostIdList === null || hostIdList === undefined) {\n                                throw new base_1.RequiredError('hostIdList', 'Required parameter hostIdList was null or undefined when calling apiHostGetHostById.');\n                            }\n                            localVarPath = \"/hosts/{host_id_list}\"\n                                .replace(\"{\" + \"host_id_list\" + \"}\", encodeURIComponent(String(hostIdList)));\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (branchId !== undefined) {\n                                localVarQueryParameter['branch_id'] = branchId;\n                            }\n                            if (perPage !== undefined) {\n                                localVarQueryParameter['per_page'] = perPage;\n                            }\n                            if (page !== undefined) {\n                                localVarQueryParameter['page'] = page;\n                            }\n                            if (orderBy !== undefined) {\n                                localVarQueryParameter['order_by'] = orderBy;\n                            }\n                            if (orderHow !== undefined) {\n                                localVarQueryParameter['order_how'] = orderHow;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Read the entire list of all hosts available to the account. <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Read the entire list of hosts\n         * @param {string} [displayName] A part of a searched host’s display name.\n         * @param {string} [fqdn] Filter by a host\\&#39;s FQDN\n         * @param {string} [hostnameOrId] Search for a host by display_name, fqdn, id\n         * @param {string} [insightsId] Search for a host by insights_id\n         * @param {string} [branchId] Filter by branch_id\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostList: function (displayName, fqdn, hostnameOrId, insightsId, branchId, perPage, page, orderBy, orderHow, staleness, tags, registeredWith, filter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            localVarPath = \"/hosts\";\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (displayName !== undefined) {\n                                localVarQueryParameter['display_name'] = displayName;\n                            }\n                            if (fqdn !== undefined) {\n                                localVarQueryParameter['fqdn'] = fqdn;\n                            }\n                            if (hostnameOrId !== undefined) {\n                                localVarQueryParameter['hostname_or_id'] = hostnameOrId;\n                            }\n                            if (insightsId !== undefined) {\n                                localVarQueryParameter['insights_id'] = insightsId;\n                            }\n                            if (branchId !== undefined) {\n                                localVarQueryParameter['branch_id'] = branchId;\n                            }\n                            if (perPage !== undefined) {\n                                localVarQueryParameter['per_page'] = perPage;\n                            }\n                            if (page !== undefined) {\n                                localVarQueryParameter['page'] = page;\n                            }\n                            if (orderBy !== undefined) {\n                                localVarQueryParameter['order_by'] = orderBy;\n                            }\n                            if (orderHow !== undefined) {\n                                localVarQueryParameter['order_how'] = orderHow;\n                            }\n                            if (staleness) {\n                                localVarQueryParameter['staleness'] = staleness;\n                            }\n                            if (tags) {\n                                localVarQueryParameter['tags'] = tags;\n                            }\n                            if (registeredWith !== undefined) {\n                                localVarQueryParameter['registered_with'] = registeredWith;\n                            }\n                            if (filter !== undefined) {\n                                localVarQueryParameter['filter'] = filter;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find one or more hosts by their ID and return the id and system profile <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Return one or more hosts system profile\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostSystemProfileById: function (hostIdList, perPage, page, orderBy, orderHow, branchId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'hostIdList' is not null or undefined\n                            if (hostIdList === null || hostIdList === undefined) {\n                                throw new base_1.RequiredError('hostIdList', 'Required parameter hostIdList was null or undefined when calling apiHostGetHostSystemProfileById.');\n                            }\n                            localVarPath = \"/hosts/{host_id_list}/system_profile\"\n                                .replace(\"{\" + \"host_id_list\" + \"}\", encodeURIComponent(String(hostIdList)));\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (perPage !== undefined) {\n                                localVarQueryParameter['per_page'] = perPage;\n                            }\n                            if (page !== undefined) {\n                                localVarQueryParameter['page'] = page;\n                            }\n                            if (orderBy !== undefined) {\n                                localVarQueryParameter['order_by'] = orderBy;\n                            }\n                            if (orderHow !== undefined) {\n                                localVarQueryParameter['order_how'] = orderHow;\n                            }\n                            if (branchId !== undefined) {\n                                localVarQueryParameter['branch_id'] = branchId;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get the number of tags on a host <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Get the number of tags on a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostTagCount: function (hostIdList, perPage, page, orderBy, orderHow, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'hostIdList' is not null or undefined\n                            if (hostIdList === null || hostIdList === undefined) {\n                                throw new base_1.RequiredError('hostIdList', 'Required parameter hostIdList was null or undefined when calling apiHostGetHostTagCount.');\n                            }\n                            localVarPath = \"/hosts/{host_id_list}/tags/count\"\n                                .replace(\"{\" + \"host_id_list\" + \"}\", encodeURIComponent(String(hostIdList)));\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (perPage !== undefined) {\n                                localVarQueryParameter['per_page'] = perPage;\n                            }\n                            if (page !== undefined) {\n                                localVarQueryParameter['page'] = page;\n                            }\n                            if (orderBy !== undefined) {\n                                localVarQueryParameter['order_by'] = orderBy;\n                            }\n                            if (orderHow !== undefined) {\n                                localVarQueryParameter['order_how'] = orderHow;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get the tags on a host <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Get the tags on a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostTags: function (hostIdList, perPage, page, orderBy, orderHow, search, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'hostIdList' is not null or undefined\n                            if (hostIdList === null || hostIdList === undefined) {\n                                throw new base_1.RequiredError('hostIdList', 'Required parameter hostIdList was null or undefined when calling apiHostGetHostTags.');\n                            }\n                            localVarPath = \"/hosts/{host_id_list}/tags\"\n                                .replace(\"{\" + \"host_id_list\" + \"}\", encodeURIComponent(String(hostIdList)));\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (perPage !== undefined) {\n                                localVarQueryParameter['per_page'] = perPage;\n                            }\n                            if (page !== undefined) {\n                                localVarQueryParameter['page'] = page;\n                            }\n                            if (orderBy !== undefined) {\n                                localVarQueryParameter['order_by'] = orderBy;\n                            }\n                            if (orderHow !== undefined) {\n                                localVarQueryParameter['order_how'] = orderHow;\n                            }\n                            if (search !== undefined) {\n                                localVarQueryParameter['search'] = search;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Finds a host and updates its staleness timestamps. It uses the supplied canonical facts to determine which host to update. By default, the staleness timestamp is set to 1 hour from when the request is received; however, this can be overridden by supplying the interval. <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Update staleness timestamps for a host matching the provided facts\n         * @param {CreateCheckIn} createCheckIn Data required to create a check-in record for a host.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostHostCheckin: function (createCheckIn, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, accessToken, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'createCheckIn' is not null or undefined\n                            if (createCheckIn === null || createCheckIn === undefined) {\n                                throw new base_1.RequiredError('createCheckIn', 'Required parameter createCheckIn was null or undefined when calling apiHostHostCheckin.');\n                            }\n                            localVarPath = \"/hosts/checkin\";\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'POST' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            // authentication BearerAuth required\n                            // http bearer authentication required\n                            if (configuration && configuration.accessToken) {\n                                accessToken = typeof configuration.accessToken === 'function'\n                                    ? configuration.accessToken()\n                                    : configuration.accessToken;\n                                localVarHeaderParameter[\"Authorization\"] = \"Bearer \" + accessToken;\n                            }\n                            localVarHeaderParameter['Content-Type'] = 'application/json';\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            needsSerialization = (typeof createCheckIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                            localVarRequestOptions.data = needsSerialization ? JSON.stringify(createCheckIn !== undefined ? createCheckIn : {}) : (createCheckIn || \"\");\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Merge one or multiple hosts facts under a namespace. <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Merge facts under a namespace\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} namespace A namespace of the merged facts.\n         * @param {object} body A dictionary with the new facts to merge with the original ones.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostMergeFacts: function (hostIdList, namespace, body, branchId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'hostIdList' is not null or undefined\n                            if (hostIdList === null || hostIdList === undefined) {\n                                throw new base_1.RequiredError('hostIdList', 'Required parameter hostIdList was null or undefined when calling apiHostMergeFacts.');\n                            }\n                            // verify required parameter 'namespace' is not null or undefined\n                            if (namespace === null || namespace === undefined) {\n                                throw new base_1.RequiredError('namespace', 'Required parameter namespace was null or undefined when calling apiHostMergeFacts.');\n                            }\n                            // verify required parameter 'body' is not null or undefined\n                            if (body === null || body === undefined) {\n                                throw new base_1.RequiredError('body', 'Required parameter body was null or undefined when calling apiHostMergeFacts.');\n                            }\n                            localVarPath = \"/hosts/{host_id_list}/facts/{namespace}\"\n                                .replace(\"{\" + \"host_id_list\" + \"}\", encodeURIComponent(String(hostIdList)))\n                                .replace(\"{\" + \"namespace\" + \"}\", encodeURIComponent(String(namespace)));\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (branchId !== undefined) {\n                                localVarQueryParameter['branch_id'] = branchId;\n                            }\n                            localVarHeaderParameter['Content-Type'] = 'application/json';\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                            localVarRequestOptions.data = needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Update a host <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Update a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {PatchHostIn} patchHostIn A group of fields to be updated on the host\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostPatchById: function (hostIdList, patchHostIn, branchId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'hostIdList' is not null or undefined\n                            if (hostIdList === null || hostIdList === undefined) {\n                                throw new base_1.RequiredError('hostIdList', 'Required parameter hostIdList was null or undefined when calling apiHostPatchById.');\n                            }\n                            // verify required parameter 'patchHostIn' is not null or undefined\n                            if (patchHostIn === null || patchHostIn === undefined) {\n                                throw new base_1.RequiredError('patchHostIn', 'Required parameter patchHostIn was null or undefined when calling apiHostPatchById.');\n                            }\n                            localVarPath = \"/hosts/{host_id_list}\"\n                                .replace(\"{\" + \"host_id_list\" + \"}\", encodeURIComponent(String(hostIdList)));\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'PATCH' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (branchId !== undefined) {\n                                localVarQueryParameter['branch_id'] = branchId;\n                            }\n                            localVarHeaderParameter['Content-Type'] = 'application/json';\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            needsSerialization = (typeof patchHostIn !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                            localVarRequestOptions.data = needsSerialization ? JSON.stringify(patchHostIn !== undefined ? patchHostIn : {}) : (patchHostIn || \"\");\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Replace facts under a namespace <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Replace facts under a namespace\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} namespace A namespace of the merged facts.\n         * @param {object} body A dictionary with the new facts to replace the original ones.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostReplaceFacts: function (hostIdList, namespace, body, branchId, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions, needsSerialization;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            // verify required parameter 'hostIdList' is not null or undefined\n                            if (hostIdList === null || hostIdList === undefined) {\n                                throw new base_1.RequiredError('hostIdList', 'Required parameter hostIdList was null or undefined when calling apiHostReplaceFacts.');\n                            }\n                            // verify required parameter 'namespace' is not null or undefined\n                            if (namespace === null || namespace === undefined) {\n                                throw new base_1.RequiredError('namespace', 'Required parameter namespace was null or undefined when calling apiHostReplaceFacts.');\n                            }\n                            // verify required parameter 'body' is not null or undefined\n                            if (body === null || body === undefined) {\n                                throw new base_1.RequiredError('body', 'Required parameter body was null or undefined when calling apiHostReplaceFacts.');\n                            }\n                            localVarPath = \"/hosts/{host_id_list}/facts/{namespace}\"\n                                .replace(\"{\" + \"host_id_list\" + \"}\", encodeURIComponent(String(hostIdList)))\n                                .replace(\"{\" + \"namespace\" + \"}\", encodeURIComponent(String(namespace)));\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'PUT' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (branchId !== undefined) {\n                                localVarQueryParameter['branch_id'] = branchId;\n                            }\n                            localVarHeaderParameter['Content-Type'] = 'application/json';\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            needsSerialization = (typeof body !== \"string\") || localVarRequestOptions.headers['Content-Type'] === 'application/json';\n                            localVarRequestOptions.data = needsSerialization ? JSON.stringify(body !== undefined ? body : {}) : (body || \"\");\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * HostsApi - functional programming interface\n * @export\n */\nexports.HostsApiFp = function (configuration) {\n    return {\n        /**\n         * Delete hosts by IDs <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Delete hosts by IDs\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostDeleteById: function (hostIdList, branchId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostDeleteById(hostIdList, branchId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find one or more hosts by their ID. <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Find hosts by their IDs\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostById: function (hostIdList, branchId, perPage, page, orderBy, orderHow, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostGetHostById(hostIdList, branchId, perPage, page, orderBy, orderHow, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Read the entire list of all hosts available to the account. <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Read the entire list of hosts\n         * @param {string} [displayName] A part of a searched host’s display name.\n         * @param {string} [fqdn] Filter by a host\\&#39;s FQDN\n         * @param {string} [hostnameOrId] Search for a host by display_name, fqdn, id\n         * @param {string} [insightsId] Search for a host by insights_id\n         * @param {string} [branchId] Filter by branch_id\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostList: function (displayName, fqdn, hostnameOrId, insightsId, branchId, perPage, page, orderBy, orderHow, staleness, tags, registeredWith, filter, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostGetHostList(displayName, fqdn, hostnameOrId, insightsId, branchId, perPage, page, orderBy, orderHow, staleness, tags, registeredWith, filter, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Find one or more hosts by their ID and return the id and system profile <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Return one or more hosts system profile\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostSystemProfileById: function (hostIdList, perPage, page, orderBy, orderHow, branchId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostGetHostSystemProfileById(hostIdList, perPage, page, orderBy, orderHow, branchId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get the number of tags on a host <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Get the number of tags on a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostTagCount: function (hostIdList, perPage, page, orderBy, orderHow, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostGetHostTagCount(hostIdList, perPage, page, orderBy, orderHow, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Get the tags on a host <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Get the tags on a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostTags: function (hostIdList, perPage, page, orderBy, orderHow, search, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostGetHostTags(hostIdList, perPage, page, orderBy, orderHow, search, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Finds a host and updates its staleness timestamps. It uses the supplied canonical facts to determine which host to update. By default, the staleness timestamp is set to 1 hour from when the request is received; however, this can be overridden by supplying the interval. <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Update staleness timestamps for a host matching the provided facts\n         * @param {CreateCheckIn} createCheckIn Data required to create a check-in record for a host.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostHostCheckin: function (createCheckIn, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostHostCheckin(createCheckIn, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Merge one or multiple hosts facts under a namespace. <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Merge facts under a namespace\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} namespace A namespace of the merged facts.\n         * @param {object} body A dictionary with the new facts to merge with the original ones.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostMergeFacts: function (hostIdList, namespace, body, branchId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostMergeFacts(hostIdList, namespace, body, branchId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Update a host <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Update a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {PatchHostIn} patchHostIn A group of fields to be updated on the host\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostPatchById: function (hostIdList, patchHostIn, branchId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostPatchById(hostIdList, patchHostIn, branchId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Replace facts under a namespace <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Replace facts under a namespace\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} namespace A namespace of the merged facts.\n         * @param {object} body A dictionary with the new facts to replace the original ones.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostReplaceFacts: function (hostIdList, namespace, body, branchId, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.HostsApiAxiosParamCreator(configuration).apiHostReplaceFacts(hostIdList, namespace, body, branchId, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * HostsApi - factory interface\n * @export\n */\nexports.HostsApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Delete hosts by IDs <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Delete hosts by IDs\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostDeleteById: function (hostIdList, branchId, options) {\n            return exports.HostsApiFp(configuration).apiHostDeleteById(hostIdList, branchId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find one or more hosts by their ID. <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Find hosts by their IDs\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostById: function (hostIdList, branchId, perPage, page, orderBy, orderHow, options) {\n            return exports.HostsApiFp(configuration).apiHostGetHostById(hostIdList, branchId, perPage, page, orderBy, orderHow, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Read the entire list of all hosts available to the account. <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Read the entire list of hosts\n         * @param {string} [displayName] A part of a searched host’s display name.\n         * @param {string} [fqdn] Filter by a host\\&#39;s FQDN\n         * @param {string} [hostnameOrId] Search for a host by display_name, fqdn, id\n         * @param {string} [insightsId] Search for a host by insights_id\n         * @param {string} [branchId] Filter by branch_id\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostList: function (displayName, fqdn, hostnameOrId, insightsId, branchId, perPage, page, orderBy, orderHow, staleness, tags, registeredWith, filter, options) {\n            return exports.HostsApiFp(configuration).apiHostGetHostList(displayName, fqdn, hostnameOrId, insightsId, branchId, perPage, page, orderBy, orderHow, staleness, tags, registeredWith, filter, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Find one or more hosts by their ID and return the id and system profile <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Return one or more hosts system profile\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostSystemProfileById: function (hostIdList, perPage, page, orderBy, orderHow, branchId, options) {\n            return exports.HostsApiFp(configuration).apiHostGetHostSystemProfileById(hostIdList, perPage, page, orderBy, orderHow, branchId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get the number of tags on a host <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Get the number of tags on a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostTagCount: function (hostIdList, perPage, page, orderBy, orderHow, options) {\n            return exports.HostsApiFp(configuration).apiHostGetHostTagCount(hostIdList, perPage, page, orderBy, orderHow, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Get the tags on a host <br /><br /> Required permissions: inventory:hosts:read\n         * @summary Get the tags on a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostGetHostTags: function (hostIdList, perPage, page, orderBy, orderHow, search, options) {\n            return exports.HostsApiFp(configuration).apiHostGetHostTags(hostIdList, perPage, page, orderBy, orderHow, search, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Finds a host and updates its staleness timestamps. It uses the supplied canonical facts to determine which host to update. By default, the staleness timestamp is set to 1 hour from when the request is received; however, this can be overridden by supplying the interval. <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Update staleness timestamps for a host matching the provided facts\n         * @param {CreateCheckIn} createCheckIn Data required to create a check-in record for a host.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostHostCheckin: function (createCheckIn, options) {\n            return exports.HostsApiFp(configuration).apiHostHostCheckin(createCheckIn, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Merge one or multiple hosts facts under a namespace. <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Merge facts under a namespace\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} namespace A namespace of the merged facts.\n         * @param {object} body A dictionary with the new facts to merge with the original ones.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostMergeFacts: function (hostIdList, namespace, body, branchId, options) {\n            return exports.HostsApiFp(configuration).apiHostMergeFacts(hostIdList, namespace, body, branchId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Update a host <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Update a host\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {PatchHostIn} patchHostIn A group of fields to be updated on the host\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostPatchById: function (hostIdList, patchHostIn, branchId, options) {\n            return exports.HostsApiFp(configuration).apiHostPatchById(hostIdList, patchHostIn, branchId, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Replace facts under a namespace <br /><br /> Required permissions: inventory:hosts:write\n         * @summary Replace facts under a namespace\n         * @param {Array<string>} hostIdList A comma separated list of host IDs.\n         * @param {string} namespace A namespace of the merged facts.\n         * @param {object} body A dictionary with the new facts to replace the original ones.\n         * @param {string} [branchId] Filter by branch_id\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiHostReplaceFacts: function (hostIdList, namespace, body, branchId, options) {\n            return exports.HostsApiFp(configuration).apiHostReplaceFacts(hostIdList, namespace, body, branchId, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * HostsApi - object-oriented interface\n * @export\n * @class HostsApi\n * @extends {BaseAPI}\n */\nvar HostsApi = /** @class */ (function (_super) {\n    __extends(HostsApi, _super);\n    function HostsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Delete hosts by IDs <br /><br /> Required permissions: inventory:hosts:write\n     * @summary Delete hosts by IDs\n     * @param {Array<string>} hostIdList A comma separated list of host IDs.\n     * @param {string} [branchId] Filter by branch_id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostDeleteById = function (hostIdList, branchId, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostDeleteById(hostIdList, branchId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find one or more hosts by their ID. <br /><br /> Required permissions: inventory:hosts:read\n     * @summary Find hosts by their IDs\n     * @param {Array<string>} hostIdList A comma separated list of host IDs.\n     * @param {string} [branchId] Filter by branch_id\n     * @param {number} [perPage] A number of items to return per page.\n     * @param {number} [page] A page number of the items to return.\n     * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n     * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostGetHostById = function (hostIdList, branchId, perPage, page, orderBy, orderHow, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostGetHostById(hostIdList, branchId, perPage, page, orderBy, orderHow, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Read the entire list of all hosts available to the account. <br /><br /> Required permissions: inventory:hosts:read\n     * @summary Read the entire list of hosts\n     * @param {string} [displayName] A part of a searched host’s display name.\n     * @param {string} [fqdn] Filter by a host\\&#39;s FQDN\n     * @param {string} [hostnameOrId] Search for a host by display_name, fqdn, id\n     * @param {string} [insightsId] Search for a host by insights_id\n     * @param {string} [branchId] Filter by branch_id\n     * @param {number} [perPage] A number of items to return per page.\n     * @param {number} [page] A page number of the items to return.\n     * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n     * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n     * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n     * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n     * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n     * @param {object} [filter] Filters hosts based on system_profile fields\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostGetHostList = function (displayName, fqdn, hostnameOrId, insightsId, branchId, perPage, page, orderBy, orderHow, staleness, tags, registeredWith, filter, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostGetHostList(displayName, fqdn, hostnameOrId, insightsId, branchId, perPage, page, orderBy, orderHow, staleness, tags, registeredWith, filter, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Find one or more hosts by their ID and return the id and system profile <br /><br /> Required permissions: inventory:hosts:read\n     * @summary Return one or more hosts system profile\n     * @param {Array<string>} hostIdList A comma separated list of host IDs.\n     * @param {number} [perPage] A number of items to return per page.\n     * @param {number} [page] A page number of the items to return.\n     * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n     * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n     * @param {string} [branchId] Filter by branch_id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostGetHostSystemProfileById = function (hostIdList, perPage, page, orderBy, orderHow, branchId, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostGetHostSystemProfileById(hostIdList, perPage, page, orderBy, orderHow, branchId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get the number of tags on a host <br /><br /> Required permissions: inventory:hosts:read\n     * @summary Get the number of tags on a host\n     * @param {Array<string>} hostIdList A comma separated list of host IDs.\n     * @param {number} [perPage] A number of items to return per page.\n     * @param {number} [page] A page number of the items to return.\n     * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n     * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostGetHostTagCount = function (hostIdList, perPage, page, orderBy, orderHow, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostGetHostTagCount(hostIdList, perPage, page, orderBy, orderHow, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Get the tags on a host <br /><br /> Required permissions: inventory:hosts:read\n     * @summary Get the tags on a host\n     * @param {Array<string>} hostIdList A comma separated list of host IDs.\n     * @param {number} [perPage] A number of items to return per page.\n     * @param {number} [page] A page number of the items to return.\n     * @param {'display_name' | 'updated'} [orderBy] Ordering field name\n     * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering, defaults to ASC for display_name and to DESC for updated\n     * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostGetHostTags = function (hostIdList, perPage, page, orderBy, orderHow, search, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostGetHostTags(hostIdList, perPage, page, orderBy, orderHow, search, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Finds a host and updates its staleness timestamps. It uses the supplied canonical facts to determine which host to update. By default, the staleness timestamp is set to 1 hour from when the request is received; however, this can be overridden by supplying the interval. <br /><br /> Required permissions: inventory:hosts:write\n     * @summary Update staleness timestamps for a host matching the provided facts\n     * @param {CreateCheckIn} createCheckIn Data required to create a check-in record for a host.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostHostCheckin = function (createCheckIn, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostHostCheckin(createCheckIn, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Merge one or multiple hosts facts under a namespace. <br /><br /> Required permissions: inventory:hosts:write\n     * @summary Merge facts under a namespace\n     * @param {Array<string>} hostIdList A comma separated list of host IDs.\n     * @param {string} namespace A namespace of the merged facts.\n     * @param {object} body A dictionary with the new facts to merge with the original ones.\n     * @param {string} [branchId] Filter by branch_id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostMergeFacts = function (hostIdList, namespace, body, branchId, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostMergeFacts(hostIdList, namespace, body, branchId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Update a host <br /><br /> Required permissions: inventory:hosts:write\n     * @summary Update a host\n     * @param {Array<string>} hostIdList A comma separated list of host IDs.\n     * @param {PatchHostIn} patchHostIn A group of fields to be updated on the host\n     * @param {string} [branchId] Filter by branch_id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostPatchById = function (hostIdList, patchHostIn, branchId, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostPatchById(hostIdList, patchHostIn, branchId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Replace facts under a namespace <br /><br /> Required permissions: inventory:hosts:write\n     * @summary Replace facts under a namespace\n     * @param {Array<string>} hostIdList A comma separated list of host IDs.\n     * @param {string} namespace A namespace of the merged facts.\n     * @param {object} body A dictionary with the new facts to replace the original ones.\n     * @param {string} [branchId] Filter by branch_id\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof HostsApi\n     */\n    HostsApi.prototype.apiHostReplaceFacts = function (hostIdList, namespace, body, branchId, options) {\n        var _this = this;\n        return exports.HostsApiFp(this.configuration).apiHostReplaceFacts(hostIdList, namespace, body, branchId, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return HostsApi;\n}(base_1.BaseAPI));\nexports.HostsApi = HostsApi;\n/**\n * SapSystemApi - axios parameter creator\n * @export\n */\nexports.SapSystemApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary get sap system values\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileGetSapSids: function (search, tags, perPage, page, staleness, registeredWith, filter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            localVarPath = \"/system_profile/sap_sids\";\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (search !== undefined) {\n                                localVarQueryParameter['search'] = search;\n                            }\n                            if (tags) {\n                                localVarQueryParameter['tags'] = tags;\n                            }\n                            if (perPage !== undefined) {\n                                localVarQueryParameter['per_page'] = perPage;\n                            }\n                            if (page !== undefined) {\n                                localVarQueryParameter['page'] = page;\n                            }\n                            if (staleness) {\n                                localVarQueryParameter['staleness'] = staleness;\n                            }\n                            if (registeredWith !== undefined) {\n                                localVarQueryParameter['registered_with'] = registeredWith;\n                            }\n                            if (filter !== undefined) {\n                                localVarQueryParameter['filter'] = filter;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary get sap system values\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileGetSapSystem: function (tags, perPage, page, staleness, registeredWith, filter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            localVarPath = \"/system_profile/sap_system\";\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (tags) {\n                                localVarQueryParameter['tags'] = tags;\n                            }\n                            if (perPage !== undefined) {\n                                localVarQueryParameter['per_page'] = perPage;\n                            }\n                            if (page !== undefined) {\n                                localVarQueryParameter['page'] = page;\n                            }\n                            if (staleness) {\n                                localVarQueryParameter['staleness'] = staleness;\n                            }\n                            if (registeredWith !== undefined) {\n                                localVarQueryParameter['registered_with'] = registeredWith;\n                            }\n                            if (filter !== undefined) {\n                                localVarQueryParameter['filter'] = filter;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * SapSystemApi - functional programming interface\n * @export\n */\nexports.SapSystemApiFp = function (configuration) {\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary get sap system values\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileGetSapSids: function (search, tags, perPage, page, staleness, registeredWith, filter, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SapSystemApiAxiosParamCreator(configuration).apiSystemProfileGetSapSids(search, tags, perPage, page, staleness, registeredWith, filter, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary get sap system values\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileGetSapSystem: function (tags, perPage, page, staleness, registeredWith, filter, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.SapSystemApiAxiosParamCreator(configuration).apiSystemProfileGetSapSystem(tags, perPage, page, staleness, registeredWith, filter, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * SapSystemApi - factory interface\n * @export\n */\nexports.SapSystemApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary get sap system values\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileGetSapSids: function (search, tags, perPage, page, staleness, registeredWith, filter, options) {\n            return exports.SapSystemApiFp(configuration).apiSystemProfileGetSapSids(search, tags, perPage, page, staleness, registeredWith, filter, options).then(function (request) { return request(axios, basePath); });\n        },\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary get sap system values\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiSystemProfileGetSapSystem: function (tags, perPage, page, staleness, registeredWith, filter, options) {\n            return exports.SapSystemApiFp(configuration).apiSystemProfileGetSapSystem(tags, perPage, page, staleness, registeredWith, filter, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * SapSystemApi - object-oriented interface\n * @export\n * @class SapSystemApi\n * @extends {BaseAPI}\n */\nvar SapSystemApi = /** @class */ (function (_super) {\n    __extends(SapSystemApi, _super);\n    function SapSystemApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Required permissions: inventory:hosts:read\n     * @summary get sap system values\n     * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n     * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n     * @param {number} [perPage] A number of items to return per page.\n     * @param {number} [page] A page number of the items to return.\n     * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n     * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n     * @param {object} [filter] Filters hosts based on system_profile fields\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SapSystemApi\n     */\n    SapSystemApi.prototype.apiSystemProfileGetSapSids = function (search, tags, perPage, page, staleness, registeredWith, filter, options) {\n        var _this = this;\n        return exports.SapSystemApiFp(this.configuration).apiSystemProfileGetSapSids(search, tags, perPage, page, staleness, registeredWith, filter, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    /**\n     * Required permissions: inventory:hosts:read\n     * @summary get sap system values\n     * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n     * @param {number} [perPage] A number of items to return per page.\n     * @param {number} [page] A page number of the items to return.\n     * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n     * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n     * @param {object} [filter] Filters hosts based on system_profile fields\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof SapSystemApi\n     */\n    SapSystemApi.prototype.apiSystemProfileGetSapSystem = function (tags, perPage, page, staleness, registeredWith, filter, options) {\n        var _this = this;\n        return exports.SapSystemApiFp(this.configuration).apiSystemProfileGetSapSystem(tags, perPage, page, staleness, registeredWith, filter, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return SapSystemApi;\n}(base_1.BaseAPI));\nexports.SapSystemApi = SapSystemApi;\n/**\n * TagsApi - axios parameter creator\n * @export\n */\nexports.TagsApiAxiosParamCreator = function (configuration) {\n    var _this = this;\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary Get the active host tags for a given account\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {'tag' | 'count'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering. Default to ASC\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiTagGetTags: function (tags, orderBy, orderHow, perPage, page, staleness, search, registeredWith, filter, options) {\n            if (options === void 0) { options = {}; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var localVarPath, localVarUrlObj, baseOptions, localVarRequestOptions, localVarHeaderParameter, localVarQueryParameter, localVarApiKeyValue, _a, headersFromBaseOptions;\n                return __generator(this, function (_b) {\n                    switch (_b.label) {\n                        case 0:\n                            localVarPath = \"/tags\";\n                            localVarUrlObj = globalImportUrl.parse(localVarPath, true);\n                            if (configuration) {\n                                baseOptions = configuration.baseOptions;\n                            }\n                            localVarRequestOptions = __assign(__assign({ method: 'GET' }, baseOptions), options);\n                            localVarHeaderParameter = {};\n                            localVarQueryParameter = {};\n                            if (!(configuration && configuration.apiKey)) return [3 /*break*/, 5];\n                            if (!(typeof configuration.apiKey === 'function')) return [3 /*break*/, 2];\n                            return [4 /*yield*/, configuration.apiKey(\"x-rh-identity\")];\n                        case 1:\n                            _a = _b.sent();\n                            return [3 /*break*/, 4];\n                        case 2: return [4 /*yield*/, configuration.apiKey];\n                        case 3:\n                            _a = _b.sent();\n                            _b.label = 4;\n                        case 4:\n                            localVarApiKeyValue = _a;\n                            localVarHeaderParameter[\"x-rh-identity\"] = localVarApiKeyValue;\n                            _b.label = 5;\n                        case 5:\n                            if (tags) {\n                                localVarQueryParameter['tags'] = tags;\n                            }\n                            if (orderBy !== undefined) {\n                                localVarQueryParameter['order_by'] = orderBy;\n                            }\n                            if (orderHow !== undefined) {\n                                localVarQueryParameter['order_how'] = orderHow;\n                            }\n                            if (perPage !== undefined) {\n                                localVarQueryParameter['per_page'] = perPage;\n                            }\n                            if (page !== undefined) {\n                                localVarQueryParameter['page'] = page;\n                            }\n                            if (staleness) {\n                                localVarQueryParameter['staleness'] = staleness;\n                            }\n                            if (search !== undefined) {\n                                localVarQueryParameter['search'] = search;\n                            }\n                            if (registeredWith !== undefined) {\n                                localVarQueryParameter['registered_with'] = registeredWith;\n                            }\n                            if (filter !== undefined) {\n                                localVarQueryParameter['filter'] = filter;\n                            }\n                            localVarUrlObj.query = __assign(__assign(__assign({}, localVarUrlObj.query), localVarQueryParameter), options.query);\n                            // fix override query string Detail: https://stackoverflow.com/a/7517673/1077943\n                            delete localVarUrlObj.search;\n                            headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n                            localVarRequestOptions.headers = __assign(__assign(__assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n                            return [2 /*return*/, {\n                                    url: globalImportUrl.format(localVarUrlObj),\n                                    options: localVarRequestOptions,\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * TagsApi - functional programming interface\n * @export\n */\nexports.TagsApiFp = function (configuration) {\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary Get the active host tags for a given account\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {'tag' | 'count'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering. Default to ASC\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiTagGetTags: function (tags, orderBy, orderHow, perPage, page, staleness, search, registeredWith, filter, options) {\n            return __awaiter(this, void 0, void 0, function () {\n                var localVarAxiosArgs;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4 /*yield*/, exports.TagsApiAxiosParamCreator(configuration).apiTagGetTags(tags, orderBy, orderHow, perPage, page, staleness, search, registeredWith, filter, options)];\n                        case 1:\n                            localVarAxiosArgs = _a.sent();\n                            return [2 /*return*/, function (axios, basePath) {\n                                    if (axios === void 0) { axios = axios_1.default; }\n                                    if (basePath === void 0) { basePath = base_1.BASE_PATH; }\n                                    var axiosRequestArgs = __assign(__assign({}, localVarAxiosArgs.options), { url: basePath + localVarAxiosArgs.url });\n                                    return axios.request(axiosRequestArgs);\n                                }];\n                    }\n                });\n            });\n        },\n    };\n};\n/**\n * TagsApi - factory interface\n * @export\n */\nexports.TagsApiFactory = function (configuration, basePath, axios) {\n    return {\n        /**\n         * Required permissions: inventory:hosts:read\n         * @summary Get the active host tags for a given account\n         * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n         * @param {'tag' | 'count'} [orderBy] Ordering field name\n         * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering. Default to ASC\n         * @param {number} [perPage] A number of items to return per page.\n         * @param {number} [page] A page number of the items to return.\n         * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n         * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n         * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n         * @param {object} [filter] Filters hosts based on system_profile fields\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        apiTagGetTags: function (tags, orderBy, orderHow, perPage, page, staleness, search, registeredWith, filter, options) {\n            return exports.TagsApiFp(configuration).apiTagGetTags(tags, orderBy, orderHow, perPage, page, staleness, search, registeredWith, filter, options).then(function (request) { return request(axios, basePath); });\n        },\n    };\n};\n/**\n * TagsApi - object-oriented interface\n * @export\n * @class TagsApi\n * @extends {BaseAPI}\n */\nvar TagsApi = /** @class */ (function (_super) {\n    __extends(TagsApi, _super);\n    function TagsApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Required permissions: inventory:hosts:read\n     * @summary Get the active host tags for a given account\n     * @param {Array<string>} [tags] filters out hosts not tagged by the given tags\n     * @param {'tag' | 'count'} [orderBy] Ordering field name\n     * @param {'ASC' | 'DESC'} [orderHow] Direction of the ordering. Default to ASC\n     * @param {number} [perPage] A number of items to return per page.\n     * @param {number} [page] A page number of the items to return.\n     * @param {Array<'fresh' | 'stale' | 'stale_warning' | 'unknown'>} [staleness] Culling states of the hosts. Default: fresh,stale,unknown\n     * @param {string} [search] Only include tags that match the given search string. The value is matched against namespace, key and value.\n     * @param {'insights'} [registeredWith] Filters out any host not registered with the specified service\n     * @param {object} [filter] Filters hosts based on system_profile fields\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof TagsApi\n     */\n    TagsApi.prototype.apiTagGetTags = function (tags, orderBy, orderHow, perPage, page, staleness, search, registeredWith, filter, options) {\n        var _this = this;\n        return exports.TagsApiFp(this.configuration).apiTagGetTags(tags, orderBy, orderHow, perPage, page, staleness, search, registeredWith, filter, options).then(function (request) { return request(_this.axios, _this.basePath); });\n    };\n    return TagsApi;\n}(base_1.BaseAPI));\nexports.TagsApi = TagsApi;\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Host Inventory REST Interface\n * REST interface for the Insights Platform Host Inventory application.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Some imports not used depending on template conditions\n// @ts-ignore\nvar axios_1 = require(\"axios\");\nexports.BASE_PATH = \"http://localhost\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nvar BaseAPI = /** @class */ (function () {\n    function BaseAPI(configuration, basePath, axios) {\n        if (basePath === void 0) { basePath = exports.BASE_PATH; }\n        if (axios === void 0) { axios = axios_1.default; }\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n    return BaseAPI;\n}());\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nvar RequiredError = /** @class */ (function (_super) {\n    __extends(RequiredError, _super);\n    function RequiredError(field, msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.field = field;\n        _this.name = \"RequiredError\";\n        return _this;\n    }\n    return RequiredError;\n}(Error));\nexports.RequiredError = RequiredError;\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Host Inventory REST Interface\n * REST interface for the Insights Platform Host Inventory application.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration = /** @class */ (function () {\n    function Configuration(param) {\n        if (param === void 0) { param = {}; }\n        this.apiKey = param.apiKey;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n    }\n    return Configuration;\n}());\nexports.Configuration = Configuration;\n","\"use strict\";\n// tslint:disable\n/**\n * Insights Host Inventory REST Interface\n * REST interface for the Insights Platform Host Inventory application.\n *\n * The version of the OpenAPI document: 1.0.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./api\"));\n__export(require(\"./configuration\"));\n","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nexport function applyReducerHash(reducerHash) {\n  var initialState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return function () {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n    var action = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (Object.prototype.hasOwnProperty.call(reducerHash, action.type)) {\n      return reducerHash[action.type](state, action);\n    }\n\n    return state;\n  };\n}\nexport function dispatchActionsToStore(actions, store) {\n  return Object.keys(actions).reduce(function (acc, curr) {\n    return _objectSpread({}, acc, _defineProperty({}, curr, function () {\n      return store && store.dispatch(actions[curr].apply(actions, arguments));\n    }));\n  }, {});\n}\n/**\n * Class used to added reducers to the store during runtime.\n *\n * http://nicolasgallagher.com/redux-modules-and-code-splitting/\n */\n\nexport var ReducerRegistry = /*#__PURE__*/function () {\n  function ReducerRegistry() {\n    var initState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var middlewares = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var composeEnhancersDefault = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : compose;\n\n    _classCallCheck(this, ReducerRegistry);\n\n    var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || composeEnhancersDefault;\n    this.store = createStore(function () {\n      var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n      return state;\n    }, initState, composeEnhancers(applyMiddleware.apply(void 0, _toConsumableArray(middlewares))));\n    this.reducers = {};\n  }\n\n  _createClass(ReducerRegistry, [{\n    key: \"getStore\",\n    value: function getStore() {\n      return this.store;\n    }\n    /**\n     * Adds new reducers to the store\n     *\n     * @param newReducers the object of new reducers.\n     */\n\n  }, {\n    key: \"register\",\n    value: function register(newReducers) {\n      var _this = this;\n\n      this.reducers = _objectSpread({}, this.reducers, {}, newReducers);\n      this.store.replaceReducer(combineReducers(_objectSpread({}, this.reducers)));\n      return function () {\n        _this.reducers = Object.entries(_this.reducers).filter(function (reducer) {\n          return !Object.keys(newReducers).includes(reducer);\n        }).reduce(function (acc, _ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              key = _ref2[0],\n              val = _ref2[1];\n\n          return _objectSpread({}, acc, _defineProperty({}, key, val));\n        }, {});\n\n        _this.store.replaceReducer(combineReducers(_objectSpread({}, _this.reducers)));\n      };\n    }\n  }]);\n\n  return ReducerRegistry;\n}();\nexport var reduxRegistry = new ReducerRegistry();\nexport default ReducerRegistry;","import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport { configureScope, captureException } from '@sentry/browser';\nexport var HttpError = /*#__PURE__*/function (_Error) {\n  _inherits(HttpError, _Error);\n\n  var _super = _createSuper(HttpError);\n\n  function HttpError(description) {\n    var _this;\n\n    _classCallCheck(this, HttpError);\n\n    _this = _super.call(this, 'Error communicating with the server');\n    _this.description = description;\n    return _this;\n  }\n\n  return HttpError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nexport function authInterceptor(_x) {\n  return _authInterceptor.apply(this, arguments);\n}\n\nfunction _authInterceptor() {\n  _authInterceptor = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(config) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return window.insights.chrome.auth.getUser();\n\n          case 2:\n            return _context.abrupt(\"return\", config);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _authInterceptor.apply(this, arguments);\n}\n\nexport function responseDataInterceptor(response) {\n  if (response.data) {\n    return response.data;\n  }\n\n  return response;\n}\nexport function interceptor401(error) {\n  if (error.response && error.response.status === 401) {\n    window.insights.chrome.auth.logout();\n    return false;\n  }\n\n  throw error;\n}\nexport function interceptor500(error) {\n  if (error.response && error.response.status >= 500 && error.response.status < 600) {\n    configureScope(function (scope) {\n      scope.setTag('request_id', error.response.req_id);\n    });\n  }\n\n  throw error;\n}\nexport function errorInterceptor(err) {\n  if (!axios.isCancel(err)) {\n    var requestId;\n\n    try {\n      var _errObject$response, _errObject$response$h;\n\n      var errObject = _objectSpread({}, err);\n\n      requestId = (_errObject$response = errObject.response) === null || _errObject$response === void 0 ? void 0 : (_errObject$response$h = _errObject$response.headers) === null || _errObject$response$h === void 0 ? void 0 : _errObject$response$h['x-rh-insights-request-id'];\n\n      if (errObject.response && errObject.response.data) {\n        throw _objectSpread({}, errObject.response.data, {\n          statusText: errObject.response.statusText\n        });\n      }\n\n      throw err;\n    } catch (customError) {\n      if (!requestId) {\n        customError.sentryId = captureException(customError);\n      }\n\n      customError.requestId = requestId;\n      throw customError;\n    }\n  }\n}\nexport var instance = axios.create();\ninstance.interceptors.request.use(authInterceptor);\ninstance.interceptors.response.use(responseDataInterceptor);\ninstance.interceptors.response.use(null, interceptor401);\ninstance.interceptors.response.use(null, interceptor500);\ninstance.interceptors.response.use(null, errorInterceptor);\nexport default instance;","(function (factory) {\n  typeof define === 'function' && define.amd ? define(factory) :\n  factory();\n}((function () { 'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n          result;\n\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n\n        result = Reflect.construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n\n  function _superPropBase(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n      object = _getPrototypeOf(object);\n      if (object === null) break;\n    }\n\n    return object;\n  }\n\n  function _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n      _get = Reflect.get;\n    } else {\n      _get = function _get(target, property, receiver) {\n        var base = _superPropBase(target, property);\n\n        if (!base) return;\n        var desc = Object.getOwnPropertyDescriptor(base, property);\n\n        if (desc.get) {\n          return desc.get.call(receiver);\n        }\n\n        return desc.value;\n      };\n    }\n\n    return _get(target, property, receiver || target);\n  }\n\n  var Emitter = /*#__PURE__*/function () {\n    function Emitter() {\n      _classCallCheck(this, Emitter);\n\n      Object.defineProperty(this, 'listeners', {\n        value: {},\n        writable: true,\n        configurable: true\n      });\n    }\n\n    _createClass(Emitter, [{\n      key: \"addEventListener\",\n      value: function addEventListener(type, callback, options) {\n        if (!(type in this.listeners)) {\n          this.listeners[type] = [];\n        }\n\n        this.listeners[type].push({\n          callback: callback,\n          options: options\n        });\n      }\n    }, {\n      key: \"removeEventListener\",\n      value: function removeEventListener(type, callback) {\n        if (!(type in this.listeners)) {\n          return;\n        }\n\n        var stack = this.listeners[type];\n\n        for (var i = 0, l = stack.length; i < l; i++) {\n          if (stack[i].callback === callback) {\n            stack.splice(i, 1);\n            return;\n          }\n        }\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        if (!(event.type in this.listeners)) {\n          return;\n        }\n\n        var stack = this.listeners[event.type];\n        var stackToCall = stack.slice();\n\n        for (var i = 0, l = stackToCall.length; i < l; i++) {\n          var listener = stackToCall[i];\n\n          try {\n            listener.callback.call(this, event);\n          } catch (e) {\n            Promise.resolve().then(function () {\n              throw e;\n            });\n          }\n\n          if (listener.options && listener.options.once) {\n            this.removeEventListener(event.type, listener.callback);\n          }\n        }\n\n        return !event.defaultPrevented;\n      }\n    }]);\n\n    return Emitter;\n  }();\n\n  var AbortSignal = /*#__PURE__*/function (_Emitter) {\n    _inherits(AbortSignal, _Emitter);\n\n    var _super = _createSuper(AbortSignal);\n\n    function AbortSignal() {\n      var _this;\n\n      _classCallCheck(this, AbortSignal);\n\n      _this = _super.call(this); // Some versions of babel does not transpile super() correctly for IE <= 10, if the parent\n      // constructor has failed to run, then \"this.listeners\" will still be undefined and then we call\n      // the parent constructor directly instead as a workaround. For general details, see babel bug:\n      // https://github.com/babel/babel/issues/3041\n      // This hack was added as a fix for the issue described here:\n      // https://github.com/Financial-Times/polyfill-library/pull/59#issuecomment-477558042\n\n      if (!_this.listeners) {\n        Emitter.call(_assertThisInitialized(_this));\n      } // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n      // we want Object.keys(new AbortController().signal) to be [] for compat with the native impl\n\n\n      Object.defineProperty(_assertThisInitialized(_this), 'aborted', {\n        value: false,\n        writable: true,\n        configurable: true\n      });\n      Object.defineProperty(_assertThisInitialized(_this), 'onabort', {\n        value: null,\n        writable: true,\n        configurable: true\n      });\n      return _this;\n    }\n\n    _createClass(AbortSignal, [{\n      key: \"toString\",\n      value: function toString() {\n        return '[object AbortSignal]';\n      }\n    }, {\n      key: \"dispatchEvent\",\n      value: function dispatchEvent(event) {\n        if (event.type === 'abort') {\n          this.aborted = true;\n\n          if (typeof this.onabort === 'function') {\n            this.onabort.call(this, event);\n          }\n        }\n\n        _get(_getPrototypeOf(AbortSignal.prototype), \"dispatchEvent\", this).call(this, event);\n      }\n    }]);\n\n    return AbortSignal;\n  }(Emitter);\n  var AbortController = /*#__PURE__*/function () {\n    function AbortController() {\n      _classCallCheck(this, AbortController);\n\n      // Compared to assignment, Object.defineProperty makes properties non-enumerable by default and\n      // we want Object.keys(new AbortController()) to be [] for compat with the native impl\n      Object.defineProperty(this, 'signal', {\n        value: new AbortSignal(),\n        writable: true,\n        configurable: true\n      });\n    }\n\n    _createClass(AbortController, [{\n      key: \"abort\",\n      value: function abort() {\n        var event;\n\n        try {\n          event = new Event('abort');\n        } catch (e) {\n          if (typeof document !== 'undefined') {\n            if (!document.createEvent) {\n              // For Internet Explorer 8:\n              event = document.createEventObject();\n              event.type = 'abort';\n            } else {\n              // For Internet Explorer 11:\n              event = document.createEvent('Event');\n              event.initEvent('abort', false, false);\n            }\n          } else {\n            // Fallback where document isn't available:\n            event = {\n              type: 'abort',\n              bubbles: false,\n              cancelable: false\n            };\n          }\n        }\n\n        this.signal.dispatchEvent(event);\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        return '[object AbortController]';\n      }\n    }]);\n\n    return AbortController;\n  }();\n\n  if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n    // These are necessary to make sure that we get correct output for:\n    // Object.prototype.toString.call(new AbortController())\n    AbortController.prototype[Symbol.toStringTag] = 'AbortController';\n    AbortSignal.prototype[Symbol.toStringTag] = 'AbortSignal';\n  }\n\n  function polyfillNeeded(self) {\n    if (self.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n      console.log('__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill');\n      return true;\n    } // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n    // defining window.Request, and this polyfill need to work on top of unfetch\n    // so the below feature detection needs the !self.AbortController part.\n    // The Request.prototype check is also needed because Safari versions 11.1.2\n    // up to and including 12.1.x has a window.AbortController present but still\n    // does NOT correctly implement abortable fetch:\n    // https://bugs.webkit.org/show_bug.cgi?id=174980#c2\n\n\n    return typeof self.Request === 'function' && !self.Request.prototype.hasOwnProperty('signal') || !self.AbortController;\n  }\n\n  /**\n   * Note: the \"fetch.Request\" default value is available for fetch imported from\n   * the \"node-fetch\" package and not in browsers. This is OK since browsers\n   * will be importing umd-polyfill.js from that path \"self\" is passed the\n   * decorator so the default value will not be used (because browsers that define\n   * fetch also has Request). One quirky setup where self.fetch exists but\n   * self.Request does not is when the \"unfetch\" minimal fetch polyfill is used\n   * on top of IE11; for this case the browser will try to use the fetch.Request\n   * default value which in turn will be undefined but then then \"if (Request)\"\n   * will ensure that you get a patched fetch but still no Request (as expected).\n   * @param {fetch, Request = fetch.Request}\n   * @returns {fetch: abortableFetch, Request: AbortableRequest}\n   */\n\n  function abortableFetchDecorator(patchTargets) {\n    if ('function' === typeof patchTargets) {\n      patchTargets = {\n        fetch: patchTargets\n      };\n    }\n\n    var _patchTargets = patchTargets,\n        fetch = _patchTargets.fetch,\n        _patchTargets$Request = _patchTargets.Request,\n        NativeRequest = _patchTargets$Request === void 0 ? fetch.Request : _patchTargets$Request,\n        NativeAbortController = _patchTargets.AbortController,\n        _patchTargets$__FORCE = _patchTargets.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL,\n        __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL = _patchTargets$__FORCE === void 0 ? false : _patchTargets$__FORCE;\n\n    if (!polyfillNeeded({\n      fetch: fetch,\n      Request: NativeRequest,\n      AbortController: NativeAbortController,\n      __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL: __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL\n    })) {\n      return {\n        fetch: fetch,\n        Request: Request\n      };\n    }\n\n    var Request = NativeRequest; // Note that the \"unfetch\" minimal fetch polyfill defines fetch() without\n    // defining window.Request, and this polyfill need to work on top of unfetch\n    // hence we only patch it if it's available. Also we don't patch it if signal\n    // is already available on the Request prototype because in this case support\n    // is present and the patching below can cause a crash since it assigns to\n    // request.signal which is technically a read-only property. This latter error\n    // happens when you run the main5.js node-fetch example in the repo\n    // \"abortcontroller-polyfill-examples\". The exact error is:\n    //   request.signal = init.signal;\n    //   ^\n    // TypeError: Cannot set property signal of #<Request> which has only a getter\n\n    if (Request && !Request.prototype.hasOwnProperty('signal') || __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL) {\n      Request = function Request(input, init) {\n        var signal;\n\n        if (init && init.signal) {\n          signal = init.signal; // Never pass init.signal to the native Request implementation when the polyfill has\n          // been installed because if we're running on top of a browser with a\n          // working native AbortController (i.e. the polyfill was installed due to\n          // __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL being set), then passing our\n          // fake AbortSignal to the native fetch will trigger:\n          // TypeError: Failed to construct 'Request': member signal is not of type AbortSignal.\n\n          delete init.signal;\n        }\n\n        var request = new NativeRequest(input, init);\n\n        if (signal) {\n          Object.defineProperty(request, 'signal', {\n            writable: false,\n            enumerable: false,\n            configurable: true,\n            value: signal\n          });\n        }\n\n        return request;\n      };\n\n      Request.prototype = NativeRequest.prototype;\n    }\n\n    var realFetch = fetch;\n\n    var abortableFetch = function abortableFetch(input, init) {\n      var signal = Request && Request.prototype.isPrototypeOf(input) ? input.signal : init ? init.signal : undefined;\n\n      if (signal) {\n        var abortError;\n\n        try {\n          abortError = new DOMException('Aborted', 'AbortError');\n        } catch (err) {\n          // IE 11 does not support calling the DOMException constructor, use a\n          // regular error object on it instead.\n          abortError = new Error('Aborted');\n          abortError.name = 'AbortError';\n        } // Return early if already aborted, thus avoiding making an HTTP request\n\n\n        if (signal.aborted) {\n          return Promise.reject(abortError);\n        } // Turn an event into a promise, reject it once `abort` is dispatched\n\n\n        var cancellation = new Promise(function (_, reject) {\n          signal.addEventListener('abort', function () {\n            return reject(abortError);\n          }, {\n            once: true\n          });\n        });\n\n        if (init && init.signal) {\n          // Never pass .signal to the native implementation when the polyfill has\n          // been installed because if we're running on top of a browser with a\n          // working native AbortController (i.e. the polyfill was installed due to\n          // __FORCE_INSTALL_ABORTCONTROLLER_POLYFILL being set), then passing our\n          // fake AbortSignal to the native fetch will trigger:\n          // TypeError: Failed to execute 'fetch' on 'Window': member signal is not of type AbortSignal.\n          delete init.signal;\n        } // Return the fastest promise (don't need to wait for request to finish)\n\n\n        return Promise.race([cancellation, realFetch(input, init)]);\n      }\n\n      return realFetch(input, init);\n    };\n\n    return {\n      fetch: abortableFetch,\n      Request: Request\n    };\n  }\n\n  (function (self) {\n\n    if (!polyfillNeeded(self)) {\n      return;\n    }\n\n    if (!self.fetch) {\n      console.warn('fetch() is not available, cannot install abortcontroller-polyfill');\n      return;\n    }\n\n    var _abortableFetch = abortableFetchDecorator(self),\n        fetch = _abortableFetch.fetch,\n        Request = _abortableFetch.Request;\n\n    self.fetch = fetch;\n    self.Request = Request;\n    Object.defineProperty(self, 'AbortController', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: AbortController\n    });\n    Object.defineProperty(self, 'AbortSignal', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: AbortSignal\n    });\n  })(typeof self !== 'undefined' ? self : global);\n\n})));\n"],"sourceRoot":""}