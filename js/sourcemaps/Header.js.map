{"version":3,"sources":["webpack:///./static/images/logo.svg","webpack:///./src/js/App/Header/Brand.js","webpack:///./src/js/App/Header/Logo.js","webpack:///./src/js/App/Header/Tools.js","webpack:///./src/js/App/Header/UserToggle.js","webpack:///./src/js/App/Header/UserIcon.js","webpack:///./src/js/App/Header/ToolbarToggle.js","webpack:///./src/js/App/Header/InsightsAbout.js","webpack:///./src/js/App/Header/InsightsAbout.scss?5381","webpack:///./src/js/App/Header/InsightsAbout.scss","webpack:///./src/js/App/Header/index.js"],"names":["Brand","toggleNav","navHidden","className","hidden","variant","aria-label","widget-type","onClick","size","href","propTypes","PropTypes","bool","func","connect","chrome","dispatch","onToggle","Logo","src","logo","alt","Tools","useState","isSettingsDisabled","setIsSettingsDisabled","isModalOpen","setIsModalOpen","useEffect","window","insights","auth","getUser","then","user","identity","account_number","SettingsButton","document","baseURI","component","aboutMenuDropdownItems","title","url","mobileDropdownItems","AboutButton","key","icon","QuestionCircleIcon","id","hasToggleIndicator","dropdownItems","visibility","default","sm","isSelected","getBundle","isSmall","extraItems","map","action","Fragment","target","rel","onClose","buildItems","username","isOrgAdmin","accountNumber","isDisabled","isProd","logout","UserToggle","props","state","isOpen","onSelect","bind","this","setState","account","toggle","name","position","DropdownPosition","right","isPlain","number","Component","shape","oneOfType","string","arrayOf","node","defaultProps","first_name","last_name","is_org_admin","UserIcon","img","width","avatar","Image","onload","getImage","ToolbarToggle","ev","preventDefault","location","widgetType","iconComponent","toggleIndicator","elementType","array","Copyright","InsightsAbout","app","globalNav","find","item","active","subItems","subApp","subItem","activeApp","reload","appDetails","apps","path","version","showCopyAlert","showCopyAlertError","currentApp","hideCopyAlert","updateAppVersion","term","details","buildId","appDetail","debugDetails","Username","CurrentApp","ApplicationPath","pathname","navigator","clipboard","writeText","JSON","stringify","setTimeout","err","Sentry","forEach","fetch","response","json","catch","travis","data","src_hash","build_id","brandImageSrc","brandImageAlt","gutter","trigger","content","entryDelay","exitDelay","copyDetails","getItem","any","object","appId","api","__esModule","module","i","options","exports","locals","___CSS_LOADER_API_IMPORT___","push","Header"],"mappings":"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","file":"Header.d4a14eb014bded6890d6.js","sourcesContent":["export default __webpack_public_path__ + \"fonts/logo.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { onToggle } from '../../redux/actions';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport Logo from './Logo';\n\nexport const Brand = ({ toggleNav, navHidden }) => (\n    <div className=\"pf-c-page__header-brand\">\n        <div hidden={navHidden} className='pf-c-page__header-brand-toggle'>\n            <Button\n                variant=\"plain\"\n                aria-label=\"Toggle primary navigation\"\n                widget-type=\"InsightsNavToggle\"\n                onClick={() => toggleNav && toggleNav()}\n            >\n                <BarsIcon size=\"md\"/>\n            </Button>\n        </div>\n        <a className=\"pf-c-page__header-brand-link\" href=\"./\">\n            <Logo />\n        </a>\n    </div>\n);\n\nBrand.propTypes = {\n    navHidden: PropTypes.bool,\n    toggleNav: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleNav: () => {\n            dispatch(onToggle());\n        }\n    };\n}\n\nexport default connect(({ chrome: { navHidden } }) => ({ navHidden }), mapDispatchToProps)(Brand);\n","import React from 'react';\nimport logo from '../../../../static/images/logo.svg';\n\nconst Logo = () => <img src={logo} alt=\"Red Hat Logo\" />;\n\nexport default Logo;\n","import React, { useState, useEffect } from 'react';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { PageHeaderTools } from '@patternfly/react-core/dist/js/components/Page/PageHeaderTools';\nimport { PageHeaderToolsGroup } from '@patternfly/react-core/dist/js/components/Page/PageHeaderToolsGroup';\nimport { PageHeaderToolsItem } from '@patternfly/react-core/dist/js/components/Page/PageHeaderToolsItem';\nimport { Divider } from '@patternfly/react-core/dist/js/components/Divider/Divider';\n\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/question-circle-icon';\nimport CogIcon from '@patternfly/react-icons/dist/js/icons/cog-icon';\n\nimport UserToggle from './UserToggle';\nimport UserIcon from './UserIcon';\nimport ToolbarToggle from './ToolbarToggle';\nimport InsightsAbout from './InsightsAbout';\n\nconst Tools = () => {\n\n    {/* Set the state */}\n    const [isSettingsDisabled, setIsSettingsDisabled] = useState(true);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    {/* Disable settings/cog icon when a user doesn't have an account number */}\n    useEffect(() => {\n        window.insights.chrome.auth.getUser().then((user)=> user.identity.account_number && setIsSettingsDisabled(false));\n    }, []);\n\n    {/* button that should redirect a user to RBAC with an account */}\n    const SettingsButton = () => (\n        <Button\n            variant=\"plain\"\n            aria-label=\"Go to settings\"\n            widget-type='SettingsButton'\n            className='ins-c-toolbar__button-settings'\n            href={`${document.baseURI}settings/rbac/`}\n            component=\"a\"\n        >\n            <CogIcon/>\n        </Button>\n    );\n\n    {/* list out the items for the about menu */}\n    const aboutMenuDropdownItems = [\n        {\n            title: 'Customer support',\n            url: 'https://access.redhat.com/support'\n        }, {\n            title: 'Training',\n            url: 'https://www.redhat.com/en/services/training-and-certification'\n        }, {\n            title: 'API documentation',\n            url: `${document.baseURI}docs/api`\n        }, {\n            title: 'About',\n            onClick: () => setIsModalOpen(true)\n        }\n    ];\n\n    {/* Combine aboutMenuItems with a settings link on mobile */}\n    const mobileDropdownItems = [\n        { title: 'separator' },\n        {\n            title: 'Settings',\n            url: `${document.baseURI}settings/rbac/`\n        },\n        { title: 'separator' },\n        ...aboutMenuDropdownItems\n    ];\n\n    {/* QuestionMark icon that should be used for \"help/support\" things */}\n    const AboutButton = () => (\n        <ToolbarToggle\n            key='Help menu'\n            icon={ QuestionCircleIcon }\n            id='HelpMenu'\n            className='ins-c-toolbar__menu-help'\n            hasToggleIndicator={ null }\n            widget-type='HelpMenu'\n            dropdownItems={ aboutMenuDropdownItems }\n        />\n    );\n\n    return (\n        <PageHeaderTools widget-type=\"InsightsToolbar\">\n\n            {/* Show tools on medium and above screens */}\n            <PageHeaderToolsGroup visibility={{ default: 'hidden', sm: 'visible' }}>\n                { !isSettingsDisabled &&\n                    <PageHeaderToolsItem isSelected={ window.insights.chrome.getBundle() === 'settings' }>\n                        { <SettingsButton/> }\n                    </PageHeaderToolsItem>\n                }\n                <PageHeaderToolsItem>\n                    { <AboutButton/> }\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* Show full user dropdown on medium and above screens */}\n            <PageHeaderToolsGroup visibility={{ default: 'hidden', sm: 'visible' }}>\n                <PageHeaderToolsItem>\n                    <UserToggle className='ins-c-dropdown__user'/>\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* Collapse tools and user dropdown to kebab on small screens  */}\n            <PageHeaderToolsGroup visibility={{ sm: 'hidden' }}>\n                <PageHeaderToolsItem>\n                    <UserToggle isSmall extraItems={mobileDropdownItems.map((action, key) => (\n                        <React.Fragment key={key}>\n                            { action.title === 'separator'\n                                ? <Divider component=\"li\"/>\n                                : (<DropdownItem\n                                    {...(action.onClick\n                                        ? {\n                                            component: 'button',\n                                            onClick: action.onClick\n                                        } : {\n                                            href: action.url,\n                                            component: 'a',\n                                            target: '_blank',\n                                            rel: 'noopener noreferrer'\n                                        }\n                                    )}\n                                >\n                                    {action.title}\n                                </DropdownItem>)\n                            }\n                        </React.Fragment>\n                    ))} />\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* User icon always visible */}\n            <UserIcon/>\n\n            {/* Render About Modal */}\n            { isModalOpen && <InsightsAbout isModalOpen={isModalOpen} onClose={() => setIsModalOpen(!isModalOpen)} /> }\n        </PageHeaderTools>\n    );\n};\n\nexport default Tools;\n","import React, { Component } from 'react';\nimport { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport { KebabToggle } from '@patternfly/react-core/dist/js/components/Dropdown/KebabToggle';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownSeparator';\nimport { DropdownPosition } from '@patternfly/react-core/dist/js/components/Dropdown/dropdownConstants';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction buildItems(username, isOrgAdmin, accountNumber = -1, extraItems) {\n    return [\n        <DropdownItem key=\"Username\" isDisabled>\n            <dl className='ins-c-dropdown-item__stack'>\n                <dt className=\"ins-c-dropdown-item__stack--header\">Username:</dt>\n                <dd className=\"ins-c-dropdown-item__stack--value\">{username}</dd>\n                { isOrgAdmin &&\n                    <dd className=\"ins-c-dropdown-item__stack--subValue\">Org. Administrator</dd>\n                }\n            </dl>\n        </DropdownItem>,\n        <React.Fragment key=\"account wrapper\">\n            { accountNumber > -1 &&\n                <DropdownItem key=\"Account\" isDisabled>\n                    <dl className='ins-c-dropdown-item__stack'>\n                        <dt className=\"ins-c-dropdown-item__stack--header\">Account number:</dt>\n                        <dd className=\"ins-c-dropdown-item__stack--value\">{accountNumber}</dd>\n                    </dl>\n                </DropdownItem>\n            }\n        </React.Fragment>,\n        <DropdownSeparator key=\"separator\" />,\n        <DropdownItem\n            key=\"My Profile\"\n            href={`https://www.${window.insights.chrome.isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/personalInfo.html`}\n            target=\"_blank\"\n            rel='noopener noreferrer'>\n                My profile\n        </DropdownItem>,\n        <React.Fragment key=\"user prefs wrapper\">\n            { accountNumber > -1 &&\n                <DropdownItem\n                    key=\"User preferences\"\n                    href=\"./user-preferences/email\">\n                    User Preferences\n                </DropdownItem>\n            }\n        </React.Fragment>,\n        <DropdownItem\n            key=\"logout\"\n            component=\"button\"\n            onClick={() => window.insights.chrome.auth.logout(true)}>\n                Log out\n        </DropdownItem>,\n        [...extraItems]\n    ];\n}\n\nexport class UserToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    }\n\n    render() {\n        const { isOpen } = this.state;\n        const { account, isSmall, extraItems } = this.props;\n        const toggle = isSmall ?\n            <KebabToggle onToggle={this.onToggle} /> :\n            <DropdownToggle\n                id='UserMenu'\n                className='ins-c-toolbar__menu-user'\n                widget-type='UserMenu'\n                onToggle={this.onToggle}>\n                {account.name}\n            </DropdownToggle>;\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                aria-label=\"Overflow actions\"\n                widget-type=\"InsightsOverflowActions\"\n                onSelect={this.onSelect}\n                toggle={toggle}\n                isPlain\n                isOpen={isOpen}\n                dropdownItems={buildItems(account.username, account.isOrgAdmin, account.number, extraItems)}\n            />\n        );\n    }\n}\n\nUserToggle.propTypes = {\n    account: PropTypes.shape({\n        number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        name: PropTypes.string,\n        username: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        isOrgAdmin: PropTypes.bool\n    }),\n    isSmall: PropTypes.bool,\n    extraItems: PropTypes.arrayOf(PropTypes.node)\n};\n\nUserToggle.defaultProps = {\n    account: {\n        number: 1,\n        name: 'Foo'\n    },\n    isSmall: false,\n    extraItems: []\n};\n\n/* eslint-disable camelcase */\n// TODO update this to use account_id\nexport default connect(({\n    chrome: {\n        user: {\n            identity: {\n                account_number: accountNumber,\n                user: {\n                    username,\n                    first_name,\n                    last_name,\n                    is_org_admin\n                }\n            }\n        }\n    } }) => ({\n    account: {\n        number: accountNumber,\n        username: username,\n        isOrgAdmin: is_org_admin,\n        name: `${first_name} ${last_name}`\n    }\n}))(UserToggle);\n\n/* eslint-enable camelcase */\n","import React, { Component } from 'react';\nimport { Avatar } from '@patternfly/react-core/dist/js/components/Avatar/Avatar';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport class UserIcon extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: this.props.account,\n            avatar: 'apps/chrome/assets/images/img_avatar.svg'\n        };\n    }\n\n    getImage = (img) => {\n        if (img.width === 140) {\n            this.setState({ avatar: img.src });\n        }\n    }\n\n    componentDidMount() {\n        const img = new Image();\n        img.src = `https://access.redhat.com/api/users/avatar/${this.state.account.username}/`;\n        img.onload = (() => this.getImage(img));\n    }\n\n    render() {\n        const { avatar } = this.state;\n\n        return (\n            <Avatar src={ avatar } alt='User Avatar'/>\n        );\n    }\n}\n\nUserIcon.propTypes = {\n    account: PropTypes.shape({\n        username: PropTypes.string\n    })\n};\n\nexport default connect(({ chrome: { user: { identity: { user: { username } } } } }) => ({\n    account: {\n        username: username\n    }\n}))(UserIcon);\n","import React, { Component } from 'react';\n\nimport  { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport  { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport  { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport  { DropdownPosition } from '@patternfly/react-core/dist/js/components/Dropdown/dropdownConstants';\nimport PropTypes from 'prop-types';\n\nclass ToolbarToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    onClick(ev, url, onClick) {\n        ev.preventDefault();\n        if (url) {\n            window.location.href = `${url}`;\n        }\n\n        if (onClick) {\n            onClick(ev);\n        }\n    }\n\n    render() {\n        // Render the questionmark icon items\n        const dropdownItems = this.props.dropdownItems.map(({ url, title, onClick }) =>\n            <DropdownItem\n                key={title}\n                component={ url ? 'a' : 'button' }\n                // Because the urls are using 'a', don't use onClick for accessibility\n                // If it is a button, use the onClick prop\n                {\n                    ...url ? {\n                        href: url,\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    } : { onClick: (ev => this.onClick(ev, url, onClick)) }\n                }\n            >\n                { title }\n            </DropdownItem>\n        );\n\n        const toggle = <DropdownToggle\n            widget-type={this.props.widgetType}\n            className={this.props.className}\n            id={this.props.id}\n            iconComponent={null}\n            toggleIndicator={ this.props.hasToggleIndicator }\n            onToggle={this.onToggle}>\n            <this.props.icon />\n        </DropdownToggle>;\n\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                toggle={toggle}\n                isOpen={this.state.isOpen}\n                dropdownItems={dropdownItems}\n                onSelect={this.onSelect}\n                isPlain\n            />\n        );\n    }\n}\n\nToolbarToggle.propTypes = {\n    icon: PropTypes.elementType,\n    dropdownItems: PropTypes.array,\n    widgetType: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    className: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    hasToggleIndicator: PropTypes.bool\n};\n\nexport default ToolbarToggle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AboutModal } from '@patternfly/react-core/dist/js/components/AboutModal/AboutModal';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Tooltip } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { TextList } from '@patternfly/react-core/dist/js/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/js/components/Text/TextListItem';\nimport { Stack } from '@patternfly/react-core/dist/js/layouts/Stack/Stack';\nimport { StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/StackItem';\n\nimport CopyIcon from '@patternfly/react-icons/dist/js/icons/copy-icon';\n\nimport logo from '../../../../static/images/logo.svg';\nimport { connect } from 'react-redux';\nimport './InsightsAbout.scss';\nimport * as Sentry from '@sentry/browser';\n\nexport const Copyright = () => (\n    <div className='ins-c-footer__traditional-nav ins-c-page__about--modal-footer'>\n        <p className='copyright'>Copyright © 2020 Red Hat, Inc.</p>\n        <nav>\n            <ul>\n                <li>\n                    <a className='nav-link'\n                        href='https://www.redhat.com/en/about/privacy-policy'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        Privacy Policy\n                    </a>\n                </li>\n                <li>\n                    <a className='nav-link'\n                        href='https://access.redhat.com/help/terms/'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        Terms of Use\n                    </a>\n                </li>\n                <li>\n                    <a className='nav-link'\n                        href='https://www.redhat.com/en/about/all-policies-guidelines'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        All Policies and Guidelines\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n);\n\nexport class InsightsAbout extends Component {\n    constructor(props) {\n        super(props);\n\n        let app;\n        if (this.props.globalNav) {\n            app = this.props.globalNav.find(item => item.active);\n            if (app && app.subItems) {\n                const subApp = app.subItems.find(subItem => subItem.id === this.props.activeApp);\n                app = subApp && subApp.reload ? subApp : app;\n            }\n        }\n\n        this.state = {\n            appDetails: { apps: [\n                { name: 'Chrome', path: 'apps/chrome/app.info.json', version: 'N/A' },\n                { name: 'Dashboard', path: `apps/dashboard/app.info.json`, version: 'N/A' },\n                { name: 'Inventory', path: `apps/inventory/app.info.json`, version: 'N/A' },\n                { name: 'Remediations', path: `apps/remediations/app.info.json`, version: 'N/A' },\n                { name: 'Vulnerability', path: 'apps/vulnerability/app.info.json', version: 'N/A' },\n                { name: 'Compliance', path: 'apps/compliance/app.info.json', version: 'N/A' },\n                { name: 'Cost Management', path: 'apps/cost-management/app.info.json', version: 'N/A' },\n                { name: 'Advisor', path: 'apps/advisor/app.info.json', version: 'N/A' },\n                { name: 'Drift', path: 'apps/drift/app.info.json', version: 'N/A' },\n                { name: 'Migration Analytics', path: 'apps/migration-analytics/app.info.json', version: 'N/A' },\n                { name: 'Automation Hub', path: 'apps/automation-hub/app.info.json', version: 'N/A' },\n                { name: 'Automation Analytics', path: 'apps/automation-analytics/app.info.json', version: 'N/A' },\n                { name: 'Policies', path: 'apps/policies/app.info.json', version: 'N/A' },\n                { name: 'Patch', path: 'apps/patch/app.info.json', version: 'N/A' },\n                { name: 'Automation Services Catalog', path: 'apps/catalog/app.info.json', version: 'N/A' },\n                { name: 'Approval', path: 'apps/approval/app.info.json', version: 'N/A' },\n                { name: 'Sources', path: 'apps/sources/app.info.json', version: 'N/A' }\n            ] },\n            showCopyAlert: false,\n            showCopyAlertError: false,\n            currentApp: app && app.title\n        };\n        this.hideCopyAlert = () => this.setState({ showCopyAlert: false });\n        this.updateAppVersion = this.updateAppVersion.bind(this);\n    }\n\n    getItem(term, details) {\n        return <React.Fragment key={term}>\n            <TextListItem component=\"dt\">{term}:</TextListItem>\n            <TextListItem component=\"dd\">\n                {\n                    (typeof details === 'function') ? details() : details\n                }\n            </TextListItem>\n        </React.Fragment>;\n    }\n\n    updateAppVersion(app, version, buildId) {\n        const { appDetails } = this.state;\n        let currentApp = appDetails.apps.find(appDetail => appDetail.name === app.name);\n\n        if (currentApp) {\n            if (buildId) {\n                version = `${version}.${buildId}`;\n            }\n\n            currentApp.version = version;\n        }\n\n        this.setState(appDetails);\n    }\n\n    copyDetails(username) {\n\n        const debugDetails = {\n            Username: username,\n            CurrentApp: this.state.currentApp || 'Landing',\n            ApplicationPath: window.location.pathname,\n            ...this.state.appDetails\n        };\n\n        // If the text is successfully copied, change the tooltip\n        // The tooltip exit delay is 1000ms, but the fade out is 200ms\n        // Set the timeout to 1200 so the text doesn't change while it is fading\n        navigator.clipboard.writeText(JSON.stringify(debugDetails, null, 2))\n        .then(() => {\n            this.setState({ showCopyAlert: true }, () => {\n                setTimeout(() => { this.setState({ showCopyAlert: false }); }, 1200);\n            });\n        }, (err) => {\n            Sentry.captureException(err);\n        });\n    }\n\n    componentDidMount() {\n        this.state.appDetails.apps.forEach((app) => {\n            fetch(app.path)\n            .then(response => response.json())\n            .catch(() => ({ travis: {} }))\n            .then(data => this.updateAppVersion(app, data.src_hash, data.build_id));\n        });\n    }\n\n    render() {\n        const { isModalOpen, onClose, user } = this.props;\n        const { showCopyAlert } = this.state;\n\n        return (\n            <AboutModal\n                isOpen={isModalOpen}\n                onClose={onClose}\n                brandImageSrc={logo}\n                brandImageAlt=\"Red Hat Logo\"\n                className='ins-c-about-modal'\n            >\n                <Stack gutter='sm'>\n                    <StackItem>\n                        Please include these details when opening a support case.\n                        <Tooltip\n                            trigger=\"mouseenter focus click\"\n                            position='top'\n                            content={\n                                showCopyAlert\n                                    ? <span> Successfully copied to clipboard</span>\n                                    : <span> Copy to clipboard </span>\n                            }\n                            entryDelay={ 100 }\n                            exitDelay={ 1000 }>\n                            <Button variant='plain'\n                                onClick={() => this.copyDetails(user.username)}\n                                aria-label='Copy details'>\n                                <CopyIcon/>\n                            </Button>\n                        </Tooltip>\n                    </StackItem>\n                    <StackItem>\n                        <TextContent className=\"ins-c-page__about--modal\">\n                            <TextList component=\"dl\" className='ins-debug-info'>\n                                {this.getItem('User Name', user && user.username)}\n                                {this.getItem('Current Application', this.state.currentApp || 'Landing')}\n                                {this.getItem('Application Path', window.location.pathname)}\n                                {this.state.appDetails.apps.map((app) => {\n                                    return this.getItem(app.name + ' Version', app.version);\n                                })}\n                            </TextList>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem>\n                        <Copyright />\n                    </StackItem>\n                </Stack>\n            </AboutModal>\n        );\n    }\n}\n\nInsightsAbout.propTypes = {\n    globalNav: PropTypes.any,\n    activeApp: PropTypes.string,\n    isModalOpen: PropTypes.bool,\n    onClose: PropTypes.func,\n    user: PropTypes.object\n};\n\nfunction mapStateToProps({ chrome: { user: { identity: { user } }, appId, globalNav, activeApp } }) {\n    return { appId, globalNav, user, activeApp };\n}\n\nexport default connect(mapStateToProps)(InsightsAbout);\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./InsightsAbout.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}.pf-c-about-modal-box__content{--pf-c-about-modal-box__content--MarginTop: var(--pf-global--spacer--md);--pf-c-about-modal-box__content--MarginBottom: var(--pf-global--spacer--md)}.pf-c-about-modal-box__hero{--pf-c-about-modal-box__hero--sm--BackgroundImage: url('/../../build/assets/images/fedora-background.svg')}.ins-c-page__about--modal dl{--pf-c-content--dl--RowGap: var(--pf-global--spacer--sm)}.ins-c-page__about--modal-footer .copyright{color:var(--pf-global--Color--200);margin-right:30px;margin-right:1.875rem}.ins-c-page__about--modal-footer *{font-size:var(--pf-global--FontSize--sm)}.ins-c-page__about--modal-footer ul{margin:0;padding:0;display:flex;flex-direction:column}@media screen and (min-width: 992px){.ins-c-page__about--modal-footer ul{flex-direction:row}}.ins-c-page__about--modal-footer li{list-style:none}.ins-c-page__about--modal-footer li+li{margin-top:0}@media screen and (min-width: 992px){.ins-c-page__about--modal-footer li+li::before{content:'|';color:var(--pf-global--Color--200);margin:0 var(--pf-global--spacer--md)}}.ins-c-about-modal .pf-c-alert.ins-c-alert__copied .pf-c-alert__title{margin:0}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { Fragment } from 'react';\nimport Brand from './Brand';\nimport Tools from './Tools';\n\nconst Header = () => {\n    return (\n        <Fragment>\n            <Brand />\n            <Tools />\n        </Fragment>\n    );};\n\nexport default Header;\n"],"sourceRoot":""}