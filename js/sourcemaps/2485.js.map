{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Button/Button.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Spinner/Spinner.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/TextInput/TextInput.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/FocusTrap/FocusTrap.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/htmlConstants.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/ouia.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/util.js"],"names":["ButtonVariant","ButtonType","Button","_a","children","className","component","isActive","isBlock","isDisabled","isAriaDisabled","isLoading","spinnerAriaValueText","isSmall","isLarge","inoperableEvents","isInline","type","button","variant","primary","iconPosition","ariaLabel","icon","ouiaId","ouiaSafe","tabIndex","props","__rest","ouiaProps","useOUIAProps","displayName","Component","isButtonElement","isInlineSpan","preventedEvents","reduce","handlers","eventToPrevent","Object","assign","event","preventDefault","css","link","disabled","role","size","plain","spinnerSize","Spinner","ariaValueText","TextInputTypes","TextInputBase","super","this","inputRef","handleChange","onChange","currentTarget","value","handleResize","innerRef","current","String","restoreText","scrollLeft","scrollWidth","onFocus","isLeftTruncated","onBlur","id","console","error","window","addEventListener","removeEventListener","validated","isReadOnly","isRequired","iconVariant","customIconUrl","customIconDimensions","customIconStyle","backgroundImage","backgroundSize","required","readOnly","ref","style","defaultProps","text","TextInput","FocusTrap","divRef","document","previouslyFocusedElement","activeElement","focusTrap","createFocusTrap","focusTrapOptions","returnFocusOnDeactivate","active","activate","paused","pause","prevProps","deactivate","unpause","focus","preventScroll","preventScrollOnDeactivate","rest","currentId","GenerateId","arguments","prefix","ASTERISK","uid","ouiaPrefix","ouiaIdByRoute","getOUIAProps","componentType","useOUIAId","undefined","useMemo","getDefaultOUIAId","key","location","href","exception","capitalize","input","toUpperCase","substring","getUniqueId","Date","getTime","Math","random","toString","slice","debounce","func","wait","timeout","args","clearTimeout","setTimeout","apply","isElementInView","container","element","partial","containerBounds","getBoundingClientRect","elementBounds","containerBoundsLeft","floor","left","containerBoundsRight","right","elementBoundsLeft","elementBoundsRight","sideElementIsOutOfView","isOffLeft","isOffRight","side","fillTemplate","templateString","templateVars","replace","_","match","keyHandler","index","innerIndex","position","refsCollection","kids","custom","Array","isArray","isMultiDimensional","filter","constructor","nextIndex","nextInnerIndex","length","getNextIndex","collection","pluralize","i","singular","plural","formatBreakpointMods","mods","styles","entries","map","breakpoint","mod","toCamel","_res","group","modifierKey","modifiers","Boolean","join","camelize","s","canUseDOM","createElement","getTextWidth","node","computedStyle","getComputedStyle","context","getContext","font","computedFont","fontStretchLookupTable","fontStretch","fontStyle","fontVariant","fontWeight","fontSize","lineHeight","fontFamily","getFontFromComputedStyle","measureText","width","innerDimensions","clientWidth","height","clientHeight","parseFloat","paddingTop","paddingBottom","paddingLeft","paddingRight","trimLeft","availableWidth","newValue","innerText","events"],"mappings":"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","file":"2485.dced0630c880cefffaac.js","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport { Spinner, spinnerSize } from '../Spinner';\nimport { useOUIAProps } from '../../helpers';\nexport var ButtonVariant;\n(function (ButtonVariant) {\n    ButtonVariant[\"primary\"] = \"primary\";\n    ButtonVariant[\"secondary\"] = \"secondary\";\n    ButtonVariant[\"tertiary\"] = \"tertiary\";\n    ButtonVariant[\"danger\"] = \"danger\";\n    ButtonVariant[\"warning\"] = \"warning\";\n    ButtonVariant[\"link\"] = \"link\";\n    ButtonVariant[\"plain\"] = \"plain\";\n    ButtonVariant[\"control\"] = \"control\";\n})(ButtonVariant || (ButtonVariant = {}));\nexport var ButtonType;\n(function (ButtonType) {\n    ButtonType[\"button\"] = \"button\";\n    ButtonType[\"submit\"] = \"submit\";\n    ButtonType[\"reset\"] = \"reset\";\n})(ButtonType || (ButtonType = {}));\nexport const Button = (_a) => {\n    var { children = null, className = '', component = 'button', isActive = false, isBlock = false, isDisabled = false, isAriaDisabled = false, isLoading = null, spinnerAriaValueText, isSmall = false, isLarge = false, inoperableEvents = ['onClick', 'onKeyPress'], isInline = false, type = ButtonType.button, variant = ButtonVariant.primary, iconPosition = 'left', 'aria-label': ariaLabel = null, icon = null, ouiaId, ouiaSafe = true, tabIndex = null } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isActive\", \"isBlock\", \"isDisabled\", \"isAriaDisabled\", \"isLoading\", \"spinnerAriaValueText\", \"isSmall\", \"isLarge\", \"inoperableEvents\", \"isInline\", \"type\", \"variant\", \"iconPosition\", 'aria-label', \"icon\", \"ouiaId\", \"ouiaSafe\", \"tabIndex\"]);\n    const ouiaProps = useOUIAProps(Button.displayName, ouiaId, ouiaSafe, variant);\n    const Component = component;\n    const isButtonElement = Component === 'button';\n    const isInlineSpan = isInline && Component === 'span';\n    if (isAriaDisabled && process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.warn('You are using a beta component feature (isAriaDisabled). These api parts are subject to change in the future.');\n    }\n    const preventedEvents = inoperableEvents.reduce((handlers, eventToPrevent) => (Object.assign(Object.assign({}, handlers), { [eventToPrevent]: (event) => {\n            event.preventDefault();\n        } })), {});\n    const getDefaultTabIdx = () => {\n        if (isDisabled) {\n            return isButtonElement ? null : -1;\n        }\n        else if (isAriaDisabled) {\n            return null;\n        }\n        else if (isInlineSpan) {\n            return 0;\n        }\n    };\n    return (React.createElement(Component, Object.assign({}, props, (isAriaDisabled ? preventedEvents : null), { \"aria-disabled\": isDisabled || isAriaDisabled, \"aria-label\": ariaLabel, className: css(styles.button, styles.modifiers[variant], isBlock && styles.modifiers.block, isDisabled && styles.modifiers.disabled, isAriaDisabled && styles.modifiers.ariaDisabled, isActive && styles.modifiers.active, isInline && variant === ButtonVariant.link && styles.modifiers.inline, isLoading !== null && styles.modifiers.progress, isLoading && styles.modifiers.inProgress, isSmall && styles.modifiers.small, isLarge && styles.modifiers.displayLg, className), disabled: isButtonElement ? isDisabled : null, tabIndex: tabIndex !== null ? tabIndex : getDefaultTabIdx(), type: isButtonElement || isInlineSpan ? type : null, role: isInlineSpan ? 'button' : null }, ouiaProps),\n        isLoading && (React.createElement(\"span\", { className: css(styles.buttonProgress) },\n            React.createElement(Spinner, { size: spinnerSize.md, \"aria-valuetext\": spinnerAriaValueText }))),\n        variant !== ButtonVariant.plain && icon && iconPosition === 'left' && (React.createElement(\"span\", { className: css(styles.buttonIcon, styles.modifiers.start) }, icon)),\n        children,\n        variant !== ButtonVariant.plain && icon && iconPosition === 'right' && (React.createElement(\"span\", { className: css(styles.buttonIcon, styles.modifiers.end) }, icon))));\n};\nButton.displayName = 'Button';\n//# sourceMappingURL=Button.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Spinner/spinner';\nimport { css } from '@patternfly/react-styles';\nexport var spinnerSize;\n(function (spinnerSize) {\n    spinnerSize[\"sm\"] = \"sm\";\n    spinnerSize[\"md\"] = \"md\";\n    spinnerSize[\"lg\"] = \"lg\";\n    spinnerSize[\"xl\"] = \"xl\";\n})(spinnerSize || (spinnerSize = {}));\nexport const Spinner = (_a) => {\n    var { \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '', size = 'xl', 'aria-valuetext': ariaValueText = 'Loading...' } = _a, props = __rest(_a, [\"className\", \"size\", 'aria-valuetext']);\n    return (React.createElement(\"span\", Object.assign({ className: css(styles.spinner, styles.modifiers[size], className), role: \"progressbar\", \"aria-valuetext\": ariaValueText }, props),\n        React.createElement(\"span\", { className: css(styles.spinnerClipper) }),\n        React.createElement(\"span\", { className: css(styles.spinnerLeadBall) }),\n        React.createElement(\"span\", { className: css(styles.spinnerTailBall) })));\n};\nSpinner.displayName = 'Spinner';\n//# sourceMappingURL=Spinner.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { debounce, trimLeft } from '../../helpers/util';\nexport var TextInputTypes;\n(function (TextInputTypes) {\n    TextInputTypes[\"text\"] = \"text\";\n    TextInputTypes[\"date\"] = \"date\";\n    TextInputTypes[\"datetimeLocal\"] = \"datetime-local\";\n    TextInputTypes[\"email\"] = \"email\";\n    TextInputTypes[\"month\"] = \"month\";\n    TextInputTypes[\"number\"] = \"number\";\n    TextInputTypes[\"password\"] = \"password\";\n    TextInputTypes[\"search\"] = \"search\";\n    TextInputTypes[\"tel\"] = \"tel\";\n    TextInputTypes[\"time\"] = \"time\";\n    TextInputTypes[\"url\"] = \"url\";\n})(TextInputTypes || (TextInputTypes = {}));\nexport class TextInputBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.handleChange = (event) => {\n            if (this.props.onChange) {\n                this.props.onChange(event.currentTarget.value, event);\n            }\n        };\n        this.handleResize = () => {\n            const inputRef = this.props.innerRef || this.inputRef;\n            if (inputRef && inputRef.current) {\n                trimLeft(inputRef.current, String(this.props.value));\n            }\n        };\n        this.restoreText = () => {\n            const inputRef = this.props.innerRef || this.inputRef;\n            // restore the value\n            inputRef.current.value = String(this.props.value);\n            // make sure we still see the rightmost value to preserve cursor click position\n            inputRef.current.scrollLeft = inputRef.current.scrollWidth;\n        };\n        this.onFocus = (event) => {\n            const { isLeftTruncated, onFocus } = this.props;\n            if (isLeftTruncated) {\n                this.restoreText();\n            }\n            onFocus && onFocus(event);\n        };\n        this.onBlur = (event) => {\n            const { isLeftTruncated, onBlur } = this.props;\n            if (isLeftTruncated) {\n                this.handleResize();\n            }\n            onBlur && onBlur(event);\n        };\n        if (!props.id && !props['aria-label'] && !props['aria-labelledby']) {\n            // eslint-disable-next-line no-console\n            console.error('Text input:', 'Text input requires either an id or aria-label to be specified');\n        }\n    }\n    componentDidMount() {\n        if (this.props.isLeftTruncated) {\n            this.handleResize();\n            window.addEventListener('resize', debounce(this.handleResize, 250));\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.isLeftTruncated) {\n            window.removeEventListener('resize', debounce(this.handleResize, 250));\n        }\n    }\n    render() {\n        const _a = this.props, { innerRef, className, type, value, validated, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, onFocus, onBlur, isLeftTruncated, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        isReadOnly, isRequired, isDisabled, iconVariant, customIconUrl, customIconDimensions } = _a, props = __rest(_a, [\"innerRef\", \"className\", \"type\", \"value\", \"validated\", \"onChange\", \"onFocus\", \"onBlur\", \"isLeftTruncated\", \"isReadOnly\", \"isRequired\", \"isDisabled\", \"iconVariant\", \"customIconUrl\", \"customIconDimensions\"]);\n        const customIconStyle = {};\n        if (customIconUrl) {\n            customIconStyle.backgroundImage = `url('${customIconUrl}')`;\n        }\n        if (customIconDimensions) {\n            customIconStyle.backgroundSize = customIconDimensions;\n        }\n        return (React.createElement(\"input\", Object.assign({}, props, { onFocus: this.onFocus, onBlur: this.onBlur, className: css(styles.formControl, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, ((iconVariant && iconVariant !== 'search') || customIconUrl) && styles.modifiers.icon, iconVariant && styles.modifiers[iconVariant], className), onChange: this.handleChange, type: type, value: value, \"aria-invalid\": validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled, readOnly: isReadOnly, ref: innerRef || this.inputRef }, ((customIconUrl || customIconDimensions) && { style: customIconStyle }))));\n    }\n}\nTextInputBase.displayName = 'TextInputBase';\nTextInputBase.defaultProps = {\n    'aria-label': null,\n    className: '',\n    isRequired: false,\n    validated: 'default',\n    isDisabled: false,\n    isReadOnly: false,\n    type: TextInputTypes.text,\n    isLeftTruncated: false,\n    onChange: () => undefined\n};\nexport const TextInput = React.forwardRef((props, ref) => (React.createElement(TextInputBase, Object.assign({}, props, { innerRef: ref }))));\nTextInput.displayName = 'TextInput';\n//# sourceMappingURL=TextInput.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { createFocusTrap } from 'focus-trap';\nexport class FocusTrap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.divRef = React.createRef();\n        if (typeof document !== 'undefined') {\n            this.previouslyFocusedElement = document.activeElement;\n        }\n    }\n    componentDidMount() {\n        // We need to hijack the returnFocusOnDeactivate option,\n        // because React can move focus into the element before we arrived at\n        // this lifecycle hook (e.g. with autoFocus inputs). So the component\n        // captures the previouslyFocusedElement in componentWillMount,\n        // then (optionally) returns focus to it in componentWillUnmount.\n        this.focusTrap = createFocusTrap(this.divRef.current, Object.assign(Object.assign({}, this.props.focusTrapOptions), { returnFocusOnDeactivate: false }));\n        if (this.props.active) {\n            this.focusTrap.activate();\n        }\n        if (this.props.paused) {\n            this.focusTrap.pause();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.active && !this.props.active) {\n            this.focusTrap.deactivate();\n        }\n        else if (!prevProps.active && this.props.active) {\n            this.focusTrap.activate();\n        }\n        if (prevProps.paused && !this.props.paused) {\n            this.focusTrap.unpause();\n        }\n        else if (!prevProps.paused && this.props.paused) {\n            this.focusTrap.pause();\n        }\n    }\n    componentWillUnmount() {\n        this.focusTrap.deactivate();\n        if (this.props.focusTrapOptions.returnFocusOnDeactivate !== false &&\n            this.previouslyFocusedElement &&\n            this.previouslyFocusedElement.focus) {\n            this.previouslyFocusedElement.focus({ preventScroll: this.props.preventScrollOnDeactivate });\n        }\n    }\n    render() {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _a = this.props, { children, className, focusTrapOptions, active, paused, preventScrollOnDeactivate } = _a, rest = __rest(_a, [\"children\", \"className\", \"focusTrapOptions\", \"active\", \"paused\", \"preventScrollOnDeactivate\"]);\n        return (React.createElement(\"div\", Object.assign({ ref: this.divRef, className: className }, rest), children));\n    }\n}\nFocusTrap.displayName = 'FocusTrap';\nFocusTrap.defaultProps = {\n    active: true,\n    paused: false,\n    focusTrapOptions: {},\n    preventScrollOnDeactivate: false\n};\n//# sourceMappingURL=FocusTrap.js.map","/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\nimport * as React from 'react';\nlet currentId = 0;\nexport class GenerateId extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.id = `${this.props.prefix}${currentId++}`;\n    }\n    render() {\n        return this.props.children(this.id);\n    }\n}\nGenerateId.displayName = 'GenerateId';\nGenerateId.defaultProps = {\n    prefix: 'pf-random-id-'\n};\n//# sourceMappingURL=GenerateId.js.map","export const ASTERISK = '*';\n//# sourceMappingURL=htmlConstants.js.map","import { useMemo } from 'react';\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute = {};\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType, id, ouiaSafe = true) {\n    return {\n        'data-ouia-component-type': `PF4/${componentType}`,\n        'data-ouia-safe': ouiaSafe,\n        'data-ouia-component-id': id\n    };\n}\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType, id, ouiaSafe = true, variant) => ({\n    'data-ouia-component-type': `PF4/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType, id, variant) => {\n    if (id !== undefined) {\n        return id;\n    }\n    return useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n};\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType, variant) {\n    /*\n    ouiaIdByRoute = {\n      [route+componentType]: [number]\n    }\n    */\n    try {\n        const key = `${window.location.href}-${componentType}-${variant || ''}`;\n        if (!ouiaIdByRoute[key]) {\n            ouiaIdByRoute[key] = 0;\n        }\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n    }\n    catch (exception) {\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n    }\n}\n//# sourceMappingURL=ouia.js.map","import * as ReactDOM from 'react-dom';\nimport { SIDE } from './constants';\n/**\n * @param {string} input - String to capitalize first letter\n */\nexport function capitalize(input) {\n    return input[0].toUpperCase() + input.substring(1);\n}\n/**\n * @param {string} prefix - String to prefix ID with\n */\nexport function getUniqueId(prefix = 'pf') {\n    const uid = new Date().getTime() +\n        Math.random()\n            .toString(36)\n            .slice(2);\n    return `${prefix}-${uid}`;\n}\n/**\n * @param { any } this - \"This\" reference\n * @param { Function } func - Function to debounce\n * @param { number } wait - Debounce amount\n */\nexport function debounce(func, wait) {\n    let timeout;\n    return (...args) => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => func.apply(this, args), wait);\n    };\n}\n/** This function returns whether or not an element is within the viewable area of a container. If partial is true,\n * then this function will return true even if only part of the element is in view.\n *\n * @param {HTMLElement} container  The container to check if the element is in view of.\n * @param {HTMLElement} element    The element to check if it is view\n * @param {boolean} partial   true if partial view is allowed\n *\n * @returns { boolean } True if the component is in View.\n */\nexport function isElementInView(container, element, partial) {\n    if (!container || !element) {\n        return false;\n    }\n    const containerBounds = container.getBoundingClientRect();\n    const elementBounds = element.getBoundingClientRect();\n    const containerBoundsLeft = Math.floor(containerBounds.left);\n    const containerBoundsRight = Math.floor(containerBounds.right);\n    const elementBoundsLeft = Math.floor(elementBounds.left);\n    const elementBoundsRight = Math.floor(elementBounds.right);\n    // Check if in view\n    const isTotallyInView = elementBoundsLeft >= containerBoundsLeft && elementBoundsRight <= containerBoundsRight;\n    const isPartiallyInView = partial &&\n        ((elementBoundsLeft < containerBoundsLeft && elementBoundsRight > containerBoundsLeft) ||\n            (elementBoundsRight > containerBoundsRight && elementBoundsLeft < containerBoundsRight));\n    // Return outcome\n    return isTotallyInView || isPartiallyInView;\n}\n/** This function returns the side the element is out of view on (right, left or both)\n *\n * @param {HTMLElement} container    The container to check if the element is in view of.\n * @param {HTMLElement} element      The element to check if it is view\n *\n * @returns {string} right if the element is of the right, left if element is off the left or both if it is off on both sides.\n */\nexport function sideElementIsOutOfView(container, element) {\n    const containerBounds = container.getBoundingClientRect();\n    const elementBounds = element.getBoundingClientRect();\n    const containerBoundsLeft = Math.floor(containerBounds.left);\n    const containerBoundsRight = Math.floor(containerBounds.right);\n    const elementBoundsLeft = Math.floor(elementBounds.left);\n    const elementBoundsRight = Math.floor(elementBounds.right);\n    // Check if in view\n    const isOffLeft = elementBoundsLeft < containerBoundsLeft;\n    const isOffRight = elementBoundsRight > containerBoundsRight;\n    let side = SIDE.NONE;\n    if (isOffRight && isOffLeft) {\n        side = SIDE.BOTH;\n    }\n    else if (isOffRight) {\n        side = SIDE.RIGHT;\n    }\n    else if (isOffLeft) {\n        side = SIDE.LEFT;\n    }\n    // Return outcome\n    return side;\n}\n/** Interpolates a parameterized templateString using values from a templateVars object.\n * The templateVars object should have keys and values which match the templateString's parameters.\n * Example:\n *    const templateString: 'My name is ${firstName} ${lastName}';\n *    const templateVars: {\n *      firstName: 'Jon'\n *      lastName: 'Dough'\n *    };\n *    const result = fillTemplate(templateString, templateVars);\n *    // \"My name is Jon Dough\"\n *\n * @param {string} templateString  The string passed by the consumer\n * @param {object} templateVars The variables passed to the string\n *\n * @returns {string} The template string literal result\n */\nexport function fillTemplate(templateString, templateVars) {\n    return templateString.replace(/\\${(.*?)}/g, (_, match) => templateVars[match] || '');\n}\n/**\n * This function allows for keyboard navigation through dropdowns. The custom argument is optional.\n *\n * @param {number} index The index of the element you're on\n * @param {number} innerIndex Inner index number\n * @param {string} position The orientation of the dropdown\n * @param {string[]} refsCollection Array of refs to the items in the dropdown\n * @param {object[]} kids Array of items in the dropdown\n * @param {boolean} [custom] Allows for handling of flexible content\n */\nexport function keyHandler(index, innerIndex, position, refsCollection, kids, custom = false) {\n    if (!Array.isArray(kids)) {\n        return;\n    }\n    const isMultiDimensional = refsCollection.filter(ref => ref)[0].constructor === Array;\n    let nextIndex = index;\n    let nextInnerIndex = innerIndex;\n    if (position === 'up') {\n        if (index === 0) {\n            // loop back to end\n            nextIndex = kids.length - 1;\n        }\n        else {\n            nextIndex = index - 1;\n        }\n    }\n    else if (position === 'down') {\n        if (index === kids.length - 1) {\n            // loop back to beginning\n            nextIndex = 0;\n        }\n        else {\n            nextIndex = index + 1;\n        }\n    }\n    else if (position === 'left') {\n        if (innerIndex === 0) {\n            nextInnerIndex = refsCollection[index].length - 1;\n        }\n        else {\n            nextInnerIndex = innerIndex - 1;\n        }\n    }\n    else if (position === 'right') {\n        if (innerIndex === refsCollection[index].length - 1) {\n            nextInnerIndex = 0;\n        }\n        else {\n            nextInnerIndex = innerIndex + 1;\n        }\n    }\n    if (refsCollection[nextIndex] === null ||\n        refsCollection[nextIndex] === undefined ||\n        (isMultiDimensional &&\n            (refsCollection[nextIndex][nextInnerIndex] === null || refsCollection[nextIndex][nextInnerIndex] === undefined))) {\n        keyHandler(nextIndex, nextInnerIndex, position, refsCollection, kids, custom);\n    }\n    else if (custom) {\n        if (refsCollection[nextIndex].focus) {\n            refsCollection[nextIndex].focus();\n        }\n        // eslint-disable-next-line react/no-find-dom-node\n        const element = ReactDOM.findDOMNode(refsCollection[nextIndex]);\n        element.focus();\n    }\n    else if (position !== 'tab') {\n        if (isMultiDimensional) {\n            refsCollection[nextIndex][nextInnerIndex].focus();\n        }\n        else {\n            refsCollection[nextIndex].focus();\n        }\n    }\n}\n/** This function is a helper for keyboard navigation through dropdowns.\n *\n * @param {number} index The index of the element you're on\n * @param {string} position The orientation of the dropdown\n * @param {string[]} collection Array of refs to the items in the dropdown\n */\nexport function getNextIndex(index, position, collection) {\n    let nextIndex;\n    if (position === 'up') {\n        if (index === 0) {\n            // loop back to end\n            nextIndex = collection.length - 1;\n        }\n        else {\n            nextIndex = index - 1;\n        }\n    }\n    else if (index === collection.length - 1) {\n        // loop back to beginning\n        nextIndex = 0;\n    }\n    else {\n        nextIndex = index + 1;\n    }\n    if (collection[nextIndex] === undefined || collection[nextIndex][0] === null) {\n        return getNextIndex(nextIndex, position, collection);\n    }\n    else {\n        return nextIndex;\n    }\n}\n/** This function is a helper for pluralizing strings.\n *\n * @param {number} i The quantity of the string you want to pluralize\n * @param {string} singular The singular version of the string\n * @param {string} plural The change to the string that should occur if the quantity is not equal to 1.\n *                 Defaults to adding an 's'.\n */\nexport function pluralize(i, singular, plural) {\n    if (!plural) {\n        plural = `${singular}s`;\n    }\n    return `${i || 0} ${i === 1 ? singular : plural}`;\n}\n/**\n * This function is a helper for turning arrays of breakpointMod objects for data toolbar and flex into classes\n *\n * @param {object} mods The modifiers object\n * @param {any} styles The appropriate styles object for the component\n */\nexport const formatBreakpointMods = (mods, styles) => Object.entries(mods || {})\n    .map(([breakpoint, mod]) => `${mod}${breakpoint !== 'default' ? `-on-${breakpoint}` : ''}`)\n    .map(toCamel)\n    .map(mod => mod.replace(/-?(\\dxl)/gi, (_res, group) => `_${group}`))\n    .map(modifierKey => styles.modifiers[modifierKey])\n    .filter(Boolean)\n    .join(' ');\nconst camelize = (s) => s\n    .toUpperCase()\n    .replace('-', '')\n    .replace('_', '');\n/**\n *\n * @param {string} s string to make camelCased\n */\nexport const toCamel = (s) => s.replace(/([-_][a-z])/gi, camelize);\n/**\n * Copied from exenv\n */\nexport const canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n/**\n * Calculate the width of the text\n * Example:\n * getTextWidth('my text', node)\n *\n * @param {string} text The text to calculate the width for\n * @param {HTMLElement} node The HTML element\n */\nexport const getTextWidth = (text, node) => {\n    const computedStyle = getComputedStyle(node);\n    // Firefox returns the empty string for .font, so this function creates the .font property manually\n    const getFontFromComputedStyle = () => {\n        let computedFont = '';\n        // Firefox uses percentages for font-stretch, but Canvas does not accept percentages\n        // so convert to keywords, as listed at:\n        // https://developer.mozilla.org/en-US/docs/Web/CSS/font-stretch\n        const fontStretchLookupTable = {\n            '50%': 'ultra-condensed',\n            '62.5%': 'extra-condensed',\n            '75%': 'condensed',\n            '87.5%': 'semi-condensed',\n            '100%': 'normal',\n            '112.5%': 'semi-expanded',\n            '125%': 'expanded',\n            '150%': 'extra-expanded',\n            '200%': 'ultra-expanded'\n        };\n        // If the retrieved font-stretch percentage isn't found in the lookup table, use\n        // 'normal' as a last resort.\n        let fontStretch;\n        if (computedStyle.fontStretch in fontStretchLookupTable) {\n            fontStretch = fontStretchLookupTable[computedStyle.fontStretch];\n        }\n        else {\n            fontStretch = 'normal';\n        }\n        computedFont =\n            computedStyle.fontStyle +\n                ' ' +\n                computedStyle.fontVariant +\n                ' ' +\n                computedStyle.fontWeight +\n                ' ' +\n                fontStretch +\n                ' ' +\n                computedStyle.fontSize +\n                '/' +\n                computedStyle.lineHeight +\n                ' ' +\n                computedStyle.fontFamily;\n        return computedFont;\n    };\n    const canvas = document.createElement('canvas');\n    const context = canvas.getContext('2d');\n    context.font = computedStyle.font || getFontFromComputedStyle();\n    return context.measureText(text).width;\n};\n/**\n * Get the inner dimensions of an element\n *\n * @param {HTMLElement} node HTML element to calculate the inner dimensions for\n */\nexport const innerDimensions = (node) => {\n    const computedStyle = getComputedStyle(node);\n    let width = node.clientWidth; // width with padding\n    let height = node.clientHeight; // height with padding\n    height -= parseFloat(computedStyle.paddingTop) + parseFloat(computedStyle.paddingBottom);\n    width -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n    return { height, width };\n};\n/**\n * This function is a helper for truncating text content on the left, leaving the right side of the content in view\n *\n * @param {HTMLElement} node HTML element\n * @param {string} value The original text value\n */\nexport const trimLeft = (node, value) => {\n    const availableWidth = innerDimensions(node).width;\n    let newValue = value;\n    if (getTextWidth(value, node) > availableWidth) {\n        // we have text overflow, trim the text to the left and add ... in the front until it fits\n        while (getTextWidth(`...${newValue}`, node) > availableWidth) {\n            newValue = newValue.substring(1);\n        }\n        // replace text with our truncated text\n        if (node.value) {\n            node.value = `...${newValue}`;\n        }\n        else {\n            node.innerText = `...${newValue}`;\n        }\n    }\n    else {\n        if (node.value) {\n            node.value = value;\n        }\n        else {\n            node.innerText = value;\n        }\n    }\n};\n/**\n * @param {string[]} events - Operations to prevent when disabled\n */\nexport const preventedEvents = (events) => events.reduce((handlers, eventToPrevent) => (Object.assign(Object.assign({}, handlers), { [eventToPrevent]: (event) => {\n        event.preventDefault();\n    } })), {});\n//# sourceMappingURL=util.js.map"],"sourceRoot":""}