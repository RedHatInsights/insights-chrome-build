{"version":3,"sources":["webpack:///./node_modules/intl-messageformat-parser/lib/src/types.js","webpack:///./node_modules/react-intl/lib/src/components/createFormattedComponent.js","webpack:///./node_modules/react-intl/lib/src/components/useIntl.js","webpack:///./node_modules/react-intl/lib/src/components/plural.js","webpack:///./node_modules/react-intl/lib/src/components/message.js","webpack:///./node_modules/react-intl/lib/index.js","webpack:///./node_modules/react-intl/lib/src/formatters/number.js","webpack:///./node_modules/react-intl/lib/src/formatters/relativeTime.js","webpack:///./node_modules/react-intl/lib/src/formatters/dateTime.js","webpack:///./node_modules/react-intl/lib/src/formatters/plural.js","webpack:///./node_modules/react-intl/lib/src/formatters/message.js","webpack:///./node_modules/react-intl/lib/src/formatters/list.js","webpack:///./node_modules/react-intl/lib/src/formatters/displayName.js","webpack:///./node_modules/react-intl/lib/src/components/provider.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/parser.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/normalize.js","webpack:///./node_modules/intl-messageformat-parser/lib/index.js","webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/skeleton.js","webpack:///./node_modules/shallow-equal/objects/index.js","webpack:///./node_modules/react-intl/lib/src/components/relative.js","webpack:///./node_modules/intl-messageformat/lib/src/formatters.js","webpack:///./node_modules/intl-messageformat/lib/src/error.js","webpack:///./node_modules/@formatjs/intl-utils/lib/src/invariant.js","webpack:///./node_modules/intl-messageformat/lib/src/core.js","webpack:///./node_modules/react-intl/lib/src/utils.js","webpack:///./node_modules/react-intl/lib/src/error.js","webpack:///./node_modules/react-intl/lib/src/components/injectIntl.js"],"names":["TYPE","SKELETON_TYPE","isLiteralElement","el","type","literal","isArgumentElement","argument","isNumberElement","number","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","isPoundElement","pound","isTagElement","tag","isNumberSkeleton","isDateTimeSkeleton","DisplayName","DisplayNameParts","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","FormattedNumberParts","props","Consumer","intl","value","children","formatProps","formatNumberToParts","createFormattedDateTimePartsComponent","name","ComponentParts","Date","formatDateToParts","formatTimeToParts","displayName","createFormattedComponent","Component","formattedValue","Text","textComponent","useIntl","FormattedPlural","other","_a","formatPlural","formattedPlural","defaultProps","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","__","this","constructor","create","__spreadArrays","il","arguments","r","k","a","j","jl","shallowEquals","_super","FormattedMessage","apply","shouldComponentUpdate","nextProps","values","otherProps","nextValues","nextOtherProps","render","_this","formatMessage","_b","id","description","defaultMessage","_c","tagName","nodes","isArray","defineMessages","msgs","defineMessage","msg","FormattedDate","FormattedTime","FormattedNumber","FormattedList","FormattedDisplayName","FormattedDateParts","FormattedTimeParts","NUMBER_FORMAT_OPTIONS","getFormatter","getNumberFormat","options","locale","formats","onError","format","defaults","formatNumber","config","String","formatToParts","RELATIVE_TIME_FORMAT_OPTIONS","formatRelativeTime","getRelativeTimeFormat","unit","Intl","RelativeTimeFormat","__assign","assign","n","DATE_TIME_FORMAT_OPTIONS","getDateTimeFormat","timeZone","filteredOptions","hour","minute","second","formatDate","formatTime","PLURAL_FORMAT_OPTIONS","getPluralRules","PluralRules","setTimeZoneInOptions","opts","keys","reduce","all","deepMergeOptions","opts1","opts2","deepMergeFormatsAndSetTimeZone","f1","mfFormats","prepareIntlMessageFormatHtmlOutput","chunks","shouldWrap","state","messageDescriptor","messages","defaultLocale","defaultFormats","wrapRichTextChunksInFragment","msgId","invariant","message","replace","patchedValues","acc","v","assignUniqueKeysToFormatXMLElementFnArgument","toLowerCase","getMessageFormat","formatters","LIST_FORMAT_OPTIONS","now","formatList","getListFormat","ListFormat","richValues_1","serializedValues","map","generateToken","val","push","DISPLAY_NAMES_OPTONS","formatDisplayName","getDisplayNames","DisplayNames","of","processIntlConfig","createIntl","cache","resolvedConfig","NumberFormat","supportedLocalesOf","DateTimeFormat","bind","IntlProvider","prevConfig","getDerivedStateFromProps","SyntaxError","expected","found","location","Error","captureStackTrace","buildMessage","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","classEscape","describeExpectation","expectation","text","escapedParts","parts","part","inverted","expected1","descriptions","sort","slice","join","describeExpected","found1","pegParse","input","undefined","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","peg$c4","peg$literalExpectation","peg$c5","peg$c9","peg$c11","peg$otherExpectation","peg$c14","peg$c17","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c27","peg$c28","peg$c29","peg$classExpectation","peg$c30","peg$c31","peg$c33","peg$c35","peg$c38","peg$c39","peg$c42","style","messageCtx","pop","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","insertLocation","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c69","peg$c70","peg$c73","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c90","peg$c91","peg$c92","peg$c95","x","isInPluralOption","peg$c97","peg$c99","peg$c100","peg$c101","peg$c103","peg$c105","peg$c106","peg$c107","peg$c108","peg$c110","peg$c111","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","error","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","peg$buildStructuredError","peg$parsemessage","s0","s1","peg$parsemessageElement","s2","ignoreTag","s3","peg$parseselfClosingTag","peg$parseopeningTag","peg$parseclosingTag","open","close","peg$parsetagElement","peg$parsemessageText","messageText","peg$parseliteralElement","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","peg$parsenumberSkeletonToken","tokens","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","pattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","pluralType","optionLocation","peg$c68","peg$parsepluralElement","peg$parseselectOption","peg$c71","peg$parseselectElement","peg$parsepoundElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenonTagStartingAngleBracket","s4","peg$parsevalidTag","peg$parsenumberSkeletonId","peg$parsewhiteSpace","test","charAt","peg$parsenumberSkeletonTokenOption","stem","peg$c36","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","peg$parseescapedChar","peg$parsetagName","parseInt","captureLocation","PLURAL_HASHTAG_REGEX","normalizeHashtagInPlural","els","forEach","opt","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","parse","monadic","fn","serializer","arg","cacheKey","computedValue","get","set","variadic","args","assemble","context","strategy","serialize","strategyDefault","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","has","key","cacheDefault","module","exports","strategies","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","result","match","len","era","year","RangeError","month","day","weekday","hour12","hourCycle","timeZoneName","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","parseSignificantPrecision","str","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseNotationOptions","signOpts","convertNumberSkeletonToNumberFormatOptions","_i","tokens_1","token","currency","useGrouping","maximumFractionDigits","notation","compactDisplay","currencyDisplay","unitDisplay","g3","g4","g5","minimumFractionDigits","objA","objB","aKeys","bKeys","HOUR","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","valueToSeconds","INCREMENTABLE_UNITS","canIncrement","includes","FormattedRelativeTime","_updateTimer","prevUnit","prevValue","currentValueInSeconds","updateIntervalInSeconds","scheduleNextUpdate","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","setState","componentDidMount","componentDidUpdate","componentWillUnmount","currentValue","currentUnit","round","formattedRelativeTime","PART_TYPE","isFormatXMLElementFn","locales","currentPluralValue","originalMessage","els_1","varName","value_1","formatFn","c","rule","lastPart","mergeLiteral","ErrorCode","FormatError","code","InvalidValueError","variableId","InvalidValueTypeError","MissingValueError","condition","Err","mergeConfigs","defaultConfig","configs","c1","c2","createFastMemoizeCache","store","memoizeIntl","IntlMessageFormat","overrideFormats","formatterCache","dateTime","pluralRules","ast","resolvedOptions","getAst","__parse","TypeError","defineProperty","memoizedDefaultLocale","enumerable","configurable","percent","short","medium","long","full","filterProps","whitelist","filtered","invariantIntlContext","DEFAULT_INTL_CONFIG","createIntlCache","relativeTime","list","displayNames","createFormatters","getNamedFormat","formatType","assignUniqueKeysToParts","formatXMLElementFn","toArray","ReactIntlErrorCode","ReactIntlError","exception","stack","UnsupportedFormatterError","InvalidConfigError","MissingDataError","MessageFormatError","descriptor","MissingTranslationError","hoistNonReactStatics","IntlContext","IntlConsumer","Provider","Context","injectIntl","WrappedComponent","intlPropName","forwardRef","_d","enforceContext","WithIntl","intlProp","ref","forwardedRef"],"mappings":"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","file":"vendors~inventory-compliance~inventory-vuln.e29ae13ce477e527395e.js","sourcesContent":["export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n    invariantIntlContext(intl);\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n})); };\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    })); };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    })); };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nvar FormattedPlural = function (props) {\n    var value = props.value, other = props.other, children = props.children, _a = props.intl, formatPlural = _a.formatPlural, Text = _a.textComponent;\n    var pluralCategory = formatPlural(value, props);\n    var formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\n// Explicitly annotate type here to workaround API extractor's inability to handle `import('./someModule')`\n// type annotations when rolling up DTS file.\nvar FormattedPluralWithIntl = withIntl(FormattedPlural);\nexport default FormattedPluralWithIntl;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nvar FormattedMessage = /** @class */ (function (_super) {\n    __extends(FormattedMessage, _super);\n    function FormattedMessage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormattedMessage.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, values = _a.values, otherProps = __rest(_a, [\"values\"]);\n        var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    };\n    FormattedMessage.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n            var _b = _this.props, id = _b.id, description = _b.description, defaultMessage = _b.defaultMessage, values = _b.values, children = _b.children, _c = _b.tagName, Component = _c === void 0 ? Text : _c;\n            var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n            var nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement.apply(React, __spreadArrays([Component, null], nodes));\n            }\n            return nodes;\n        }));\n    };\n    FormattedMessage.displayName = 'FormattedMessage';\n    return FormattedMessage;\n}(React.Component));\nexport default FormattedMessage;\n","import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\nexport function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\nexport { default as useIntl } from './src/components/useIntl';\nexport { default as IntlProvider, createIntl } from './src/components/provider';\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedList = createFormattedComponent('formatList');\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './src/components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './src/components/relative';\nexport { default as FormattedPlural } from './src/components/plural';\nexport { default as FormattedMessage } from './src/components/message';\nexport { createIntlCache } from './src/utils';\nexport * from './src/error';\n","import { getNamedFormat, filterProps } from '../utils';\nimport { ReactIntlError } from '../error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return [];\n}\n","import { getNamedFormat, filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { MessageFormatError } from '../error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new MessageFormatError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { filterProps, getNamedFormat } from '../utils';\nimport { ReactIntlError } from '../error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'fractionalSecondDigits',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatDateToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return [];\n}\n","import { filterProps } from '../utils';\nimport { MessageFormatError } from '../error';\nimport { FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new MessageFormatError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { invariant } from '@formatjs/intl-utils';\nimport { assignUniqueKeysToParts } from '../utils';\nimport { IntlMessageFormat, isFormatXMLElementFn, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from '../error';\nimport { TYPE } from 'intl-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport function assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nfunction prepareIntlMessageFormatHtmlOutput(chunks, shouldWrap) {\n    return Array.isArray(chunks) && shouldWrap\n        ? React.createElement.apply(React, __spreadArrays([React.Fragment, null], chunks)) : chunks;\n}\nexport function formatMessage(_a, state, messageDescriptor, values) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, onError = _a.onError, timeZone = _a.timeZone, wrapRichTextChunksInFragment = _a.wrapRichTextChunksInFragment;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, '[React Intl] An `id` must be provided to format a message.');\n    var id = String(msgId);\n    var message = messages && messages.hasOwnProperty(id) && messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values && message && typeof message === 'string') {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    var patchedValues = values && assignUniqueKeysToFormatXMLElementFnArgument(values);\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n                return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\" + id + \"\\\", rendering default message verbatim\", locale, messageDescriptor, e));\n                return defaultMessage;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, {\n            formatters: state,\n        });\n        return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\" + id + \"\\\", using \" + (defaultMessage ? 'default message' : 'id') + \" as fallback.\", locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\" + id + \"\\\", rendering message verbatim\", locale, messageDescriptor, e));\n        }\n    }\n    return message || defaultMessage || id;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nvar LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return now + \"_\" + i + \"_\" + now;\n}\nexport function formatList(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        if (!Object.keys(richValues_1).length) {\n            return getListFormat(locale, filteredOptions).format(serializedValues);\n        }\n        var parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n        return parts.reduce(function (all, el) {\n            var val = el.value;\n            if (richValues_1[val]) {\n                all.push(richValues_1[val]);\n            }\n            else if (typeof all[all.length - 1] === 'string') {\n                all[all.length - 1] += val;\n            }\n            else {\n                all.push(val);\n            }\n            return all;\n        }, []);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting list.', e));\n    }\n    return values;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nvar DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting display name.', e));\n    }\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts, } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { InvalidConfigError, MissingDataError } from '../error';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","// @ts-nocheck\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function () { return !ignoreTag; };\n    var peg$c1 = function (x) { return x; };\n    var peg$c2 = function () { return ignoreTag; };\n    var peg$c3 = \"<\";\n    var peg$c4 = peg$literalExpectation(\"<\", false);\n    var peg$c5 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c6 = function () { return '<'; };\n    var peg$c7 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c8 = \"#\";\n    var peg$c9 = peg$literalExpectation(\"#\", false);\n    var peg$c10 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c11 = peg$otherExpectation(\"tagElement\");\n    var peg$c12 = function (open, children, close) {\n        if (open !== close) {\n            error(\"Mismatch tag \\\"\" + open + \"\\\" !== \\\"\" + close + \"\\\"\", location());\n        }\n        return __assign({ type: TYPE.tag, value: open, children: children }, insertLocation());\n    };\n    var peg$c13 = \"/>\";\n    var peg$c14 = peg$literalExpectation(\"/>\", false);\n    var peg$c15 = function (value) {\n        return __assign({ type: TYPE.literal, value: value.join('') }, insertLocation());\n    };\n    var peg$c16 = \">\";\n    var peg$c17 = peg$literalExpectation(\">\", false);\n    var peg$c18 = function (tag) { return tag; };\n    var peg$c19 = \"</\";\n    var peg$c20 = peg$literalExpectation(\"</\", false);\n    var peg$c21 = peg$otherExpectation(\"argumentElement\");\n    var peg$c22 = \"{\";\n    var peg$c23 = peg$literalExpectation(\"{\", false);\n    var peg$c24 = \"}\";\n    var peg$c25 = peg$literalExpectation(\"}\", false);\n    var peg$c26 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c27 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c28 = /^['\\/{}]/;\n    var peg$c29 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c30 = peg$anyExpectation();\n    var peg$c31 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c32 = \"/\";\n    var peg$c33 = peg$literalExpectation(\"/\", false);\n    var peg$c34 = function (option) { return option; };\n    var peg$c35 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c36 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c37 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c38 = \"::\";\n    var peg$c39 = peg$literalExpectation(\"::\", false);\n    var peg$c40 = function (skeleton) { return skeleton; };\n    var peg$c41 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c42 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c43 = \",\";\n    var peg$c44 = peg$literalExpectation(\",\", false);\n    var peg$c45 = \"number\";\n    var peg$c46 = peg$literalExpectation(\"number\", false);\n    var peg$c47 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c48 = \"'\";\n    var peg$c49 = peg$literalExpectation(\"'\", false);\n    var peg$c50 = /^[^']/;\n    var peg$c51 = peg$classExpectation([\"'\"], true, false);\n    var peg$c52 = /^[^a-zA-Z'{}]/;\n    var peg$c53 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c54 = /^[a-zA-Z]/;\n    var peg$c55 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c56 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c57 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c58 = \"date\";\n    var peg$c59 = peg$literalExpectation(\"date\", false);\n    var peg$c60 = \"time\";\n    var peg$c61 = peg$literalExpectation(\"time\", false);\n    var peg$c62 = \"plural\";\n    var peg$c63 = peg$literalExpectation(\"plural\", false);\n    var peg$c64 = \"selectordinal\";\n    var peg$c65 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c66 = \"offset:\";\n    var peg$c67 = peg$literalExpectation(\"offset:\", false);\n    var peg$c68 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c69 = \"select\";\n    var peg$c70 = peg$literalExpectation(\"select\", false);\n    var peg$c71 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c72 = \"=\";\n    var peg$c73 = peg$literalExpectation(\"=\", false);\n    var peg$c74 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c75 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c76 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c77 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c78 = peg$otherExpectation(\"whitespace\");\n    var peg$c79 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c80 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c81 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c82 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c83 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c84 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c85 = peg$otherExpectation(\"number\");\n    var peg$c86 = \"-\";\n    var peg$c87 = peg$literalExpectation(\"-\", false);\n    var peg$c88 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c89 = peg$otherExpectation(\"apostrophe\");\n    var peg$c90 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c91 = \"''\";\n    var peg$c92 = peg$literalExpectation(\"''\", false);\n    var peg$c93 = function () { return \"'\"; };\n    var peg$c94 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c95 = function (x) {\n        return (x !== '<' &&\n            x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}'));\n    };\n    var peg$c96 = \"\\n\";\n    var peg$c97 = peg$literalExpectation(\"\\n\", false);\n    var peg$c98 = function (x) {\n        return x === '<' || x === '>' || x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c99 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c100 = peg$otherExpectation(\"validTag\");\n    var peg$c101 = peg$otherExpectation(\"argNumber\");\n    var peg$c102 = \"0\";\n    var peg$c103 = peg$literalExpectation(\"0\", false);\n    var peg$c104 = function () { return 0; };\n    var peg$c105 = /^[1-9]/;\n    var peg$c106 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c107 = /^[0-9]/;\n    var peg$c108 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c109 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c110 = peg$otherExpectation(\"argName\");\n    var peg$c111 = peg$otherExpectation(\"tagName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c0();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsetagElement();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c1(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseliteralElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parseargumentElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsesimpleFormatElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parsepluralElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parseselectElement();\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$parsepoundElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c2();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                s3 = peg$parsequotedString();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parseunquotedString();\n                    if (s3 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 60) {\n                            s3 = peg$c3;\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c4);\n                            }\n                        }\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        s3 = peg$parsequotedString();\n                        if (s3 === peg$FAILED) {\n                            s3 = peg$parseunquotedString();\n                            if (s3 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 60) {\n                                    s3 = peg$c3;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s3 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c4);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = [];\n            s2 = peg$parsedoubleApostrophes();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parsequotedString();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parseunquotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsenonTagStartingAngleBracket();\n                    }\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    s2 = peg$parsedoubleApostrophes();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsequotedString();\n                        if (s2 === peg$FAILED) {\n                            s2 = peg$parseunquotedString();\n                            if (s2 === peg$FAILED) {\n                                s2 = peg$parsenonTagStartingAngleBracket();\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenonTagStartingAngleBracket() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        s2 = peg$parseopeningTag();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parseclosingTag();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseselfClosingTag();\n            }\n        }\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n            s1 = undefined;\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 60) {\n                s2 = peg$c3;\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c4);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c6();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c8;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c9);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsetagElement() {\n        var s0, s1, s2, s3;\n        peg$silentFails++;\n        s0 = peg$parseselfClosingTag();\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseopeningTag();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessage();\n                if (s2 !== peg$FAILED) {\n                    s3 = peg$parseclosingTag();\n                    if (s3 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c12(s1, s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c11);\n            }\n        }\n        return s0;\n    }\n    function peg$parseselfClosingTag() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsevalidTag();\n            if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c13) {\n                        s5 = peg$c13;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5];\n                        s1 = s2;\n                    }\n                    else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseopeningTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseclosingTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c24;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c25);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c26(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c21);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c29);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c28.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c27);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c31);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c36(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c35);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c41();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c45) {\n                                    s7 = peg$c45;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c46);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c50.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c51);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c48;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c49);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c52.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c53);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c54.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c54.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c55);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c56(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c57();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c58) {\n                                    s7 = peg$c58;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c59);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c60) {\n                                        s7 = peg$c60;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c61);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c62) {\n                                    s7 = peg$c62;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c63);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c64) {\n                                        s7 = peg$c64;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c65);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c66) {\n                                                    s12 = peg$c66;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c67);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c24;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c25);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c68(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c69) {\n                                    s7 = peg$c69;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c70);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c24;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c25);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c71(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c72;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c73);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c74(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c75(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c76(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c77(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c79.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c78);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c82.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c81);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c88(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c85);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c89);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c91) {\n            s1 = peg$c91;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c92);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c90);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c91) {\n                    s5 = peg$c91;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c92);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c50.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c51);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c91) {\n                        s5 = peg$c91;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c92);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c48;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c49);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c94(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c95(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c96;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c97);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c98(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c99);\n            }\n        }\n        return s0;\n    }\n    function peg$parsevalidTag() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsetagName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c100);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c102;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c103);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c104();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c105.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c106);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c107.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c108);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c107.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c108);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c109(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c101);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c110);\n            }\n        }\n        return s0;\n    }\n    function peg$parsetagName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s2 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsewhiteSpace();\n            if (s4 === peg$FAILED) {\n                s4 = peg$parsepatternSyntax();\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n                s3 = undefined;\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c30);\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = [s3, s4];\n                    s2 = s3;\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 45) {\n                    s2 = peg$c86;\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c87);\n                    }\n                }\n                if (s2 === peg$FAILED) {\n                    s2 = peg$currPos;\n                    s3 = peg$currPos;\n                    peg$silentFails++;\n                    s4 = peg$parsewhiteSpace();\n                    if (s4 === peg$FAILED) {\n                        s4 = peg$parsepatternSyntax();\n                    }\n                    peg$silentFails--;\n                    if (s4 === peg$FAILED) {\n                        s3 = undefined;\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                        if (input.length > peg$currPos) {\n                            s4 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s4 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c30);\n                            }\n                        }\n                        if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                        }\n                        else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c111);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    var ignoreTag = options && options.ignoreTag;\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","import { pegParse } from './src/parser';\nimport { normalizeHashtagInPlural } from './src/normalize';\nexport * from './src/types';\nexport * from './src/parser';\nexport * from './src/skeleton';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) pattenrs are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) pattenrs are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function convertNumberSkeletonToNumberFormatOptions(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        // precision-integer case\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n","'use strict';\n\nfunction shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualObjects;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport { invariant } from '@formatjs/intl-utils';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    var absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nvar INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit) {\n    if (unit === void 0) { unit = 'second'; }\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nvar FormattedRelativeTime = /** @class */ (function (_super) {\n    __extends(FormattedRelativeTime, _super);\n    function FormattedRelativeTime(props) {\n        var _this = _super.call(this, props) || this;\n        // Public for testing\n        _this._updateTimer = null;\n        _this.state = {\n            prevUnit: _this.props.unit,\n            prevValue: _this.props.value,\n            currentValueInSeconds: canIncrement(_this.props.unit)\n                ? valueToSeconds(_this.props.value, _this.props.unit)\n                : 0,\n        };\n        invariant(!props.updateIntervalInSeconds ||\n            !!(props.updateIntervalInSeconds && canIncrement(props.unit)), 'Cannot schedule update with unit longer than hour');\n        return _this;\n    }\n    FormattedRelativeTime.prototype.scheduleNextUpdate = function (_a, _b) {\n        var _this = this;\n        var updateIntervalInSeconds = _a.updateIntervalInSeconds, unit = _a.unit;\n        var currentValueInSeconds = _b.currentValueInSeconds;\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        var nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        var unitDuration = getDurationInSeconds(nextUnit);\n        var remainder = nextValueInSeconds % unitDuration;\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(function () {\n            return _this.setState({\n                currentValueInSeconds: nextInterestingValueInSeconds,\n            });\n        }, delayInSeconds * 1e3);\n    };\n    FormattedRelativeTime.prototype.componentDidMount = function () {\n        this.scheduleNextUpdate(this.props, this.state);\n    };\n    FormattedRelativeTime.prototype.componentDidUpdate = function () {\n        this.scheduleNextUpdate(this.props, this.state);\n    };\n    FormattedRelativeTime.prototype.componentWillUnmount = function () {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    };\n    FormattedRelativeTime.getDerivedStateFromProps = function (props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    };\n    FormattedRelativeTime.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatRelativeTime = intl.formatRelativeTime, Text = intl.textComponent;\n            var _a = _this.props, children = _a.children, value = _a.value, unit = _a.unit, updateIntervalInSeconds = _a.updateIntervalInSeconds;\n            var currentValueInSeconds = _this.state.currentValueInSeconds;\n            var currentValue = value || 0;\n            var currentUnit = unit;\n            if (canIncrement(unit) &&\n                typeof currentValueInSeconds === 'number' &&\n                updateIntervalInSeconds) {\n                currentUnit = selectUnit(currentValueInSeconds);\n                var unitDuration = getDurationInSeconds(currentUnit);\n                currentValue = Math.round(currentValueInSeconds / unitDuration);\n            }\n            var formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, __assign({}, _this.props));\n            if (typeof children === 'function') {\n                return children(formattedRelativeTime);\n            }\n            if (Text) {\n                return React.createElement(Text, null, formattedRelativeTime);\n            }\n            return formattedRelativeTime;\n        }));\n    };\n    FormattedRelativeTime.displayName = 'FormattedRelativeTime';\n    FormattedRelativeTime.defaultProps = {\n        value: 0,\n        unit: 'second',\n    };\n    return FormattedRelativeTime;\n}(React.PureComponent));\nexport { FormattedRelativeTime };\nexport default FormattedRelativeTime;\n","import { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, isTagElement, } from 'intl-messageformat-parser';\nimport { MissingValueError, InvalidValueError, FormatError, InvalidValueTypeError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? 0 /* literal */ : 1 /* object */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? 0 /* literal */ : 1 /* object */,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","export function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { parse } from 'intl-messageformat-parser';\nimport * as memoize from 'fast-memoize';\nimport { formatToParts, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDateTimeFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== 0 /* literal */ ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport * as memoize from 'fast-memoize';\nimport { invariant } from '@formatjs/intl-utils';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return whitelist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var defaultErrorHandler = function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getNumberFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getPluralRules = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoizeIntl(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDisplayNames: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ReactIntlErrorCode;\n(function (ReactIntlErrorCode) {\n    ReactIntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    ReactIntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    ReactIntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    ReactIntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    ReactIntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(ReactIntlErrorCode || (ReactIntlErrorCode = {}));\nvar ReactIntlError = /** @class */ (function (_super) {\n    __extends(ReactIntlError, _super);\n    function ReactIntlError(code, message, exception) {\n        var _this = _super.call(this, \"[React Intl Error \" + code + \"] \" + message + \" \\n\" + (exception ? \"\\n\" + exception.message + \"\\n\" + exception.stack : '')) || this;\n        _this.code = code;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ReactIntlError);\n        }\n        return _this;\n    }\n    return ReactIntlError;\n}(Error));\nexport { ReactIntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, \"UNSUPPORTED_FORMATTER\" /* UNSUPPORTED_FORMATTER */, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(ReactIntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, \"INVALID_CONFIG\" /* INVALID_CONFIG */, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(ReactIntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, \"MISSING_DATA\" /* MISSING_DATA */, message, exception) || this;\n    }\n    return MissingDataError;\n}(ReactIntlError));\nexport { MissingDataError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"FORMAT_ERROR\" /* FORMAT_ERROR */, message + \" \\nLocale: \" + locale + \"\\nMessageID: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.id) + \"\\nDefault Message: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage) + \"\\nDescription: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.description) + \" \\n\", exception) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MessageFormatError;\n}(ReactIntlError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, \"MISSING_TRANSLATION\" /* MISSING_TRANSLATION */, \"Missing message: \\\"\" + descriptor.id + \"\\\" for locale \\\"\" + locale + \"\\\", using \" + (descriptor.defaultMessage ? 'default message' : 'id') + \" as fallback.\") || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(ReactIntlError));\nexport { MissingTranslationError };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n"],"sourceRoot":""}