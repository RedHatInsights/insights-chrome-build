{"version":3,"sources":["webpack:///./node_modules/intl-messageformat-parser/lib/index.js","webpack:///./node_modules/react-intl/lib/src/components/provider.js","webpack:///./node_modules/react-intl/lib/src/components/createFormattedComponent.js","webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/skeleton.js","webpack:///./node_modules/react-intl/lib/src/components/useIntl.js","webpack:///./node_modules/shallow-equal/objects/index.js","webpack:///./node_modules/react-intl/lib/src/components/relative.js","webpack:///./node_modules/react-intl/lib/src/components/plural.js","webpack:///./node_modules/react-intl/lib/src/components/message.js","webpack:///./node_modules/intl-messageformat/lib/src/formatters.js","webpack:///./node_modules/intl-messageformat/lib/src/error.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/normalize.js","webpack:///./node_modules/react-intl/lib/src/formatters/number.js","webpack:///./node_modules/react-intl/lib/src/formatters/relativeTime.js","webpack:///./node_modules/react-intl/lib/src/formatters/dateTime.js","webpack:///./node_modules/react-intl/lib/src/formatters/plural.js","webpack:///./node_modules/react-intl/lib/src/formatters/message.js","webpack:///./node_modules/react-intl/lib/src/formatters/list.js","webpack:///./node_modules/react-intl/lib/src/formatters/displayName.js","webpack:///./node_modules/@formatjs/intl-utils/lib/src/invariant.js","webpack:///./node_modules/intl-messageformat/lib/src/core.js","webpack:///./node_modules/react-intl/lib/src/utils.js","webpack:///./node_modules/react-intl/lib/src/error.js","webpack:///./node_modules/react-intl/lib/src/components/injectIntl.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./node_modules/react-intl/lib/index.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/types.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/parser.js"],"names":["parse","input","opts","els","normalizeHashtagInPlural","extendStatics","__extends","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","shallowEquals","processIntlConfig","config","locale","timeZone","formats","textComponent","messages","defaultLocale","defaultFormats","onError","wrapRichTextChunksInFragment","createIntl","cache","formatters","resolvedConfig","Intl","NumberFormat","supportedLocalesOf","DateTimeFormat","formatNumber","bind","getNumberFormat","formatNumberToParts","formatRelativeTime","getRelativeTimeFormat","formatDate","getDateTimeFormat","formatDateToParts","formatTime","formatTimeToParts","formatPlural","getPluralRules","formatMessage","formatList","getListFormat","formatDisplayName","getDisplayNames","IntlProvider","_super","_this","state","intl","props","prevConfig","getDerivedStateFromProps","_a","render","value","children","displayName","defaultProps","DisplayName","DisplayNameParts","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","FormattedNumberParts","Consumer","formatProps","createFormattedDateTimePartsComponent","name","ComponentParts","date","Date","createFormattedComponent","Component","formattedValue","Text","monadic","fn","serializer","arg","cacheKey","computedValue","get","set","variadic","args","slice","assemble","context","strategy","serialize","strategyDefault","options","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","has","key","cacheDefault","module","exports","strategies","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","result","replace","match","len","era","year","RangeError","month","day","weekday","hour12","hourCycle","hour","minute","second","timeZoneName","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","parseSignificantPrecision","str","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseNotationOptions","opt","signOpts","convertNumberSkeletonToNumberFormatOptions","tokens","_i","tokens_1","token","stem","style","currency","useGrouping","maximumFractionDigits","unit","notation","compactDisplay","reduce","all","currencyDisplay","unitDisplay","test","g3","g4","g5","minimumFractionDigits","useIntl","objA","objB","aKeys","keys","bKeys","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","valueToSeconds","INCREMENTABLE_UNITS","canIncrement","includes","FormattedRelativeTime","_updateTimer","prevUnit","prevValue","currentValueInSeconds","updateIntervalInSeconds","scheduleNextUpdate","_b","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","setState","componentDidMount","componentDidUpdate","componentWillUnmount","currentValue","currentUnit","round","formattedRelativeTime","FormattedPlural","other","formattedPlural","type","FormattedPluralWithIntl","__spreadArrays","il","r","k","a","j","jl","FormattedMessage","shouldComponentUpdate","nextProps","values","otherProps","nextValues","nextOtherProps","id","description","defaultMessage","_c","tagName","nodes","isArray","PART_TYPE","isFormatXMLElementFn","el","formatToParts","locales","currentPluralValue","originalMessage","els_1","push","format","varName","String","pattern","undefined","time","number","value_1","formatFn","chunks","map","c","PluralRules","rule","pluralType","select","offset","parts","part","lastPart","mergeLiteral","ErrorCode","FormatError","msg","code","toString","message","Error","InvalidValueError","variableId","join","InvalidValueTypeError","MissingValueError","PLURAL_HASHTAG_REGEX","forEach","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","NUMBER_FORMAT_OPTIONS","getFormatter","defaults","RELATIVE_TIME_FORMAT_OPTIONS","RelativeTimeFormat","DATE_TIME_FORMAT_OPTIONS","filteredOptions","PLURAL_FORMAT_OPTIONS","setTimeZoneInOptions","deepMergeOptions","opts1","opts2","deepMergeFormatsAndSetTimeZone","f1","mfFormats","prepareIntlMessageFormatHtmlOutput","shouldWrap","messageDescriptor","msgId","literal","patchedValues","acc","v","assignUniqueKeysToFormatXMLElementFnArgument","toLowerCase","getMessageFormat","LIST_FORMAT_OPTIONS","now","ListFormat","richValues_1","serializedValues","generateToken","val","DISPLAY_NAMES_OPTONS","DisplayNames","of","invariant","condition","Err","mergeConfigs","defaultConfig","configs","c1","c2","createFastMemoizeCache","store","memoizeIntl","IntlMessageFormat","overrideFormats","formatterCache","dateTime","pluralRules","ast","resolvedOptions","getAst","__parse","TypeError","ignoreTag","defineProperty","memoizedDefaultLocale","enumerable","configurable","percent","short","medium","long","full","filterProps","whitelist","filtered","invariantIntlContext","DEFAULT_INTL_CONFIG","error","createIntlCache","relativeTime","list","displayNames","createFormatters","getNamedFormat","formatType","assignUniqueKeysToParts","formatXMLElementFn","toArray","ReactIntlErrorCode","ReactIntlError","exception","stack","captureStackTrace","UnsupportedFormatterError","InvalidConfigError","MissingDataError","MessageFormatError","descriptor","MissingTranslationError","hoistNonReactStatics","IntlContext","IntlConsumer","Provider","Context","injectIntl","WrappedComponent","intlPropName","forwardRef","_d","enforceContext","WithIntl","intlProp","ref","forwardedRef","__esModule","OutlinedQuestionCircleIconConfig","height","width","svgPath","yOffset","xOffset","transform","OutlinedQuestionCircleIcon","createIcon","defineMessages","msgs","defineMessage","FormattedDate","FormattedTime","FormattedNumber","FormattedList","FormattedDisplayName","FormattedDateParts","FormattedTimeParts","TYPE","SKELETON_TYPE","isLiteralElement","isArgumentElement","argument","isNumberElement","isDateElement","isTimeElement","isSelectElement","isPluralElement","plural","isPoundElement","pound","isTagElement","tag","isNumberSkeleton","isDateTimeSkeleton","SyntaxError","expected","found","location","buildMessage","hex","ch","charCodeAt","toUpperCase","literalEscape","classEscape","describeExpectation","expectation","text","escapedParts","inverted","expected1","descriptions","sort","describeExpected","found1","pegParse","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c4","peg$literalExpectation","peg$c5","peg$c9","peg$c11","peg$otherExpectation","peg$c14","peg$c17","peg$c20","peg$c21","peg$c23","peg$c25","peg$c27","peg$c28","peg$c29","peg$classExpectation","peg$c30","peg$c31","peg$c33","peg$c35","peg$c39","peg$c42","messageCtx","pop","peg$c44","peg$c46","peg$c47","insertLocation","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c70","peg$c73","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c87","peg$c90","peg$c92","peg$c95","x","isInPluralOption","peg$c97","peg$c99","peg$c100","peg$c101","peg$c103","peg$c105","peg$c106","peg$c107","peg$c108","peg$c110","peg$c111","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","end","peg$fail","peg$buildStructuredError","peg$parsemessage","s0","s1","peg$parsemessageElement","s2","s3","peg$parseselfClosingTag","peg$parseopeningTag","peg$parseclosingTag","open","close","peg$parsetagElement","peg$parsemessageText","messageText","peg$parseliteralElement","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","peg$parsenumberSkeletonToken","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","optionLocation","peg$c68","peg$parsepluralElement","peg$parseselectOption","peg$c71","peg$parseselectElement","peg$parsepoundElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenonTagStartingAngleBracket","s4","peg$parsevalidTag","peg$parsenumberSkeletonId","peg$parsewhiteSpace","charAt","peg$parsenumberSkeletonTokenOption","peg$c36","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","peg$parseescapedChar","peg$parsetagName","parseInt","captureLocation"],"mappings":"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","file":"vendors~inventory-compliance~inventory-vuln.d5650e53ee331dd9535d.js","sourcesContent":["import { pegParse } from './src/parser';\nimport { normalizeHashtagInPlural } from './src/normalize';\nexport * from './src/types';\nexport * from './src/parser';\nexport * from './src/skeleton';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts, } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { InvalidConfigError, MissingDataError } from '../error';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n    invariantIntlContext(intl);\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n})); };\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    })); };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    })); };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) pattenrs are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) pattenrs are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function convertNumberSkeletonToNumberFormatOptions(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        // precision-integer case\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","'use strict';\n\nfunction shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualObjects;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport { invariant } from '@formatjs/intl-utils';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    var absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nvar INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit) {\n    if (unit === void 0) { unit = 'second'; }\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nvar FormattedRelativeTime = /** @class */ (function (_super) {\n    __extends(FormattedRelativeTime, _super);\n    function FormattedRelativeTime(props) {\n        var _this = _super.call(this, props) || this;\n        // Public for testing\n        _this._updateTimer = null;\n        _this.state = {\n            prevUnit: _this.props.unit,\n            prevValue: _this.props.value,\n            currentValueInSeconds: canIncrement(_this.props.unit)\n                ? valueToSeconds(_this.props.value, _this.props.unit)\n                : 0,\n        };\n        invariant(!props.updateIntervalInSeconds ||\n            !!(props.updateIntervalInSeconds && canIncrement(props.unit)), 'Cannot schedule update with unit longer than hour');\n        return _this;\n    }\n    FormattedRelativeTime.prototype.scheduleNextUpdate = function (_a, _b) {\n        var _this = this;\n        var updateIntervalInSeconds = _a.updateIntervalInSeconds, unit = _a.unit;\n        var currentValueInSeconds = _b.currentValueInSeconds;\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        var nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        var unitDuration = getDurationInSeconds(nextUnit);\n        var remainder = nextValueInSeconds % unitDuration;\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(function () {\n            return _this.setState({\n                currentValueInSeconds: nextInterestingValueInSeconds,\n            });\n        }, delayInSeconds * 1e3);\n    };\n    FormattedRelativeTime.prototype.componentDidMount = function () {\n        this.scheduleNextUpdate(this.props, this.state);\n    };\n    FormattedRelativeTime.prototype.componentDidUpdate = function () {\n        this.scheduleNextUpdate(this.props, this.state);\n    };\n    FormattedRelativeTime.prototype.componentWillUnmount = function () {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    };\n    FormattedRelativeTime.getDerivedStateFromProps = function (props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    };\n    FormattedRelativeTime.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatRelativeTime = intl.formatRelativeTime, Text = intl.textComponent;\n            var _a = _this.props, children = _a.children, value = _a.value, unit = _a.unit, updateIntervalInSeconds = _a.updateIntervalInSeconds;\n            var currentValueInSeconds = _this.state.currentValueInSeconds;\n            var currentValue = value || 0;\n            var currentUnit = unit;\n            if (canIncrement(unit) &&\n                typeof currentValueInSeconds === 'number' &&\n                updateIntervalInSeconds) {\n                currentUnit = selectUnit(currentValueInSeconds);\n                var unitDuration = getDurationInSeconds(currentUnit);\n                currentValue = Math.round(currentValueInSeconds / unitDuration);\n            }\n            var formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, __assign({}, _this.props));\n            if (typeof children === 'function') {\n                return children(formattedRelativeTime);\n            }\n            if (Text) {\n                return React.createElement(Text, null, formattedRelativeTime);\n            }\n            return formattedRelativeTime;\n        }));\n    };\n    FormattedRelativeTime.displayName = 'FormattedRelativeTime';\n    FormattedRelativeTime.defaultProps = {\n        value: 0,\n        unit: 'second',\n    };\n    return FormattedRelativeTime;\n}(React.PureComponent));\nexport { FormattedRelativeTime };\nexport default FormattedRelativeTime;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nvar FormattedPlural = function (props) {\n    var value = props.value, other = props.other, children = props.children, _a = props.intl, formatPlural = _a.formatPlural, Text = _a.textComponent;\n    var pluralCategory = formatPlural(value, props);\n    var formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\n// Explicitly annotate type here to workaround API extractor's inability to handle `import('./someModule')`\n// type annotations when rolling up DTS file.\nvar FormattedPluralWithIntl = withIntl(FormattedPlural);\nexport default FormattedPluralWithIntl;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nvar FormattedMessage = /** @class */ (function (_super) {\n    __extends(FormattedMessage, _super);\n    function FormattedMessage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormattedMessage.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, values = _a.values, otherProps = __rest(_a, [\"values\"]);\n        var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    };\n    FormattedMessage.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n            var _b = _this.props, id = _b.id, description = _b.description, defaultMessage = _b.defaultMessage, values = _b.values, children = _b.children, _c = _b.tagName, Component = _c === void 0 ? Text : _c;\n            var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n            var nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement.apply(React, __spreadArrays([Component, null], nodes));\n            }\n            return nodes;\n        }));\n    };\n    FormattedMessage.displayName = 'FormattedMessage';\n    return FormattedMessage;\n}(React.Component));\nexport default FormattedMessage;\n","import { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, isTagElement, } from 'intl-messageformat-parser';\nimport { MissingValueError, InvalidValueError, FormatError, InvalidValueTypeError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? 0 /* literal */ : 1 /* object */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? 0 /* literal */ : 1 /* object */,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","import { getNamedFormat, filterProps } from '../utils';\nimport { ReactIntlError } from '../error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return [];\n}\n","import { getNamedFormat, filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { MessageFormatError } from '../error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new MessageFormatError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { filterProps, getNamedFormat } from '../utils';\nimport { ReactIntlError } from '../error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'fractionalSecondDigits',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatDateToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return [];\n}\n","import { filterProps } from '../utils';\nimport { MessageFormatError } from '../error';\nimport { FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new MessageFormatError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { invariant } from '@formatjs/intl-utils';\nimport { assignUniqueKeysToParts } from '../utils';\nimport { IntlMessageFormat, isFormatXMLElementFn, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from '../error';\nimport { TYPE } from 'intl-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport function assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nfunction prepareIntlMessageFormatHtmlOutput(chunks, shouldWrap) {\n    return Array.isArray(chunks) && shouldWrap\n        ? React.createElement.apply(React, __spreadArrays([React.Fragment, null], chunks)) : chunks;\n}\nexport function formatMessage(_a, state, messageDescriptor, values) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, onError = _a.onError, timeZone = _a.timeZone, wrapRichTextChunksInFragment = _a.wrapRichTextChunksInFragment;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, '[React Intl] An `id` must be provided to format a message.');\n    var id = String(msgId);\n    var message = messages && messages.hasOwnProperty(id) && messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values && message && typeof message === 'string') {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    var patchedValues = values && assignUniqueKeysToFormatXMLElementFnArgument(values);\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n                return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\" + id + \"\\\", rendering default message verbatim\", locale, messageDescriptor, e));\n                return defaultMessage;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, {\n            formatters: state,\n        });\n        return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\" + id + \"\\\", using \" + (defaultMessage ? 'default message' : 'id') + \" as fallback.\", locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\" + id + \"\\\", rendering message verbatim\", locale, messageDescriptor, e));\n        }\n    }\n    return message || defaultMessage || id;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nvar LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return now + \"_\" + i + \"_\" + now;\n}\nexport function formatList(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        if (!Object.keys(richValues_1).length) {\n            return getListFormat(locale, filteredOptions).format(serializedValues);\n        }\n        var parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n        return parts.reduce(function (all, el) {\n            var val = el.value;\n            if (richValues_1[val]) {\n                all.push(richValues_1[val]);\n            }\n            else if (typeof all[all.length - 1] === 'string') {\n                all[all.length - 1] += val;\n            }\n            else {\n                all.push(val);\n            }\n            return all;\n        }, []);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting list.', e));\n    }\n    return values;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nvar DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting display name.', e));\n    }\n}\n","export function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { parse } from 'intl-messageformat-parser';\nimport * as memoize from 'fast-memoize';\nimport { formatToParts, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDateTimeFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== 0 /* literal */ ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport * as memoize from 'fast-memoize';\nimport { invariant } from '@formatjs/intl-utils';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return whitelist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var defaultErrorHandler = function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getNumberFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getPluralRules = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoizeIntl(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDisplayNames: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ReactIntlErrorCode;\n(function (ReactIntlErrorCode) {\n    ReactIntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    ReactIntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    ReactIntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    ReactIntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    ReactIntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(ReactIntlErrorCode || (ReactIntlErrorCode = {}));\nvar ReactIntlError = /** @class */ (function (_super) {\n    __extends(ReactIntlError, _super);\n    function ReactIntlError(code, message, exception) {\n        var _this = _super.call(this, \"[React Intl Error \" + code + \"] \" + message + \" \\n\" + (exception ? \"\\n\" + exception.message + \"\\n\" + exception.stack : '')) || this;\n        _this.code = code;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ReactIntlError);\n        }\n        return _this;\n    }\n    return ReactIntlError;\n}(Error));\nexport { ReactIntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, \"UNSUPPORTED_FORMATTER\" /* UNSUPPORTED_FORMATTER */, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(ReactIntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, \"INVALID_CONFIG\" /* INVALID_CONFIG */, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(ReactIntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, \"MISSING_DATA\" /* MISSING_DATA */, message, exception) || this;\n    }\n    return MissingDataError;\n}(ReactIntlError));\nexport { MissingDataError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"FORMAT_ERROR\" /* FORMAT_ERROR */, message + \" \\nLocale: \" + locale + \"\\nMessageID: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.id) + \"\\nDefault Message: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage) + \"\\nDescription: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.description) + \" \\n\", exception) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MessageFormatError;\n}(ReactIntlError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, \"MISSING_TRANSLATION\" /* MISSING_TRANSLATION */, \"Missing message: \\\"\" + descriptor.id + \"\\\" for locale \\\"\" + locale + \"\\\", using \" + (descriptor.defaultMessage ? 'default message' : 'id') + \" as fallback.\") || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(ReactIntlError));\nexport { MissingTranslationError };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\nexport function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\nexport { default as useIntl } from './src/components/useIntl';\nexport { default as IntlProvider, createIntl } from './src/components/provider';\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedList = createFormattedComponent('formatList');\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './src/components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './src/components/relative';\nexport { default as FormattedPlural } from './src/components/plural';\nexport { default as FormattedMessage } from './src/components/message';\nexport { createIntlCache } from './src/utils';\nexport * from './src/error';\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// @ts-nocheck\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function () { return !ignoreTag; };\n    var peg$c1 = function (x) { return x; };\n    var peg$c2 = function () { return ignoreTag; };\n    var peg$c3 = \"<\";\n    var peg$c4 = peg$literalExpectation(\"<\", false);\n    var peg$c5 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c6 = function () { return '<'; };\n    var peg$c7 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c8 = \"#\";\n    var peg$c9 = peg$literalExpectation(\"#\", false);\n    var peg$c10 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c11 = peg$otherExpectation(\"tagElement\");\n    var peg$c12 = function (open, children, close) {\n        if (open !== close) {\n            error(\"Mismatch tag \\\"\" + open + \"\\\" !== \\\"\" + close + \"\\\"\", location());\n        }\n        return __assign({ type: TYPE.tag, value: open, children: children }, insertLocation());\n    };\n    var peg$c13 = \"/>\";\n    var peg$c14 = peg$literalExpectation(\"/>\", false);\n    var peg$c15 = function (value) {\n        return __assign({ type: TYPE.literal, value: value.join('') }, insertLocation());\n    };\n    var peg$c16 = \">\";\n    var peg$c17 = peg$literalExpectation(\">\", false);\n    var peg$c18 = function (tag) { return tag; };\n    var peg$c19 = \"</\";\n    var peg$c20 = peg$literalExpectation(\"</\", false);\n    var peg$c21 = peg$otherExpectation(\"argumentElement\");\n    var peg$c22 = \"{\";\n    var peg$c23 = peg$literalExpectation(\"{\", false);\n    var peg$c24 = \"}\";\n    var peg$c25 = peg$literalExpectation(\"}\", false);\n    var peg$c26 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c27 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c28 = /^['\\/{}]/;\n    var peg$c29 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c30 = peg$anyExpectation();\n    var peg$c31 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c32 = \"/\";\n    var peg$c33 = peg$literalExpectation(\"/\", false);\n    var peg$c34 = function (option) { return option; };\n    var peg$c35 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c36 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c37 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c38 = \"::\";\n    var peg$c39 = peg$literalExpectation(\"::\", false);\n    var peg$c40 = function (skeleton) { return skeleton; };\n    var peg$c41 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c42 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c43 = \",\";\n    var peg$c44 = peg$literalExpectation(\",\", false);\n    var peg$c45 = \"number\";\n    var peg$c46 = peg$literalExpectation(\"number\", false);\n    var peg$c47 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c48 = \"'\";\n    var peg$c49 = peg$literalExpectation(\"'\", false);\n    var peg$c50 = /^[^']/;\n    var peg$c51 = peg$classExpectation([\"'\"], true, false);\n    var peg$c52 = /^[^a-zA-Z'{}]/;\n    var peg$c53 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c54 = /^[a-zA-Z]/;\n    var peg$c55 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c56 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c57 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c58 = \"date\";\n    var peg$c59 = peg$literalExpectation(\"date\", false);\n    var peg$c60 = \"time\";\n    var peg$c61 = peg$literalExpectation(\"time\", false);\n    var peg$c62 = \"plural\";\n    var peg$c63 = peg$literalExpectation(\"plural\", false);\n    var peg$c64 = \"selectordinal\";\n    var peg$c65 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c66 = \"offset:\";\n    var peg$c67 = peg$literalExpectation(\"offset:\", false);\n    var peg$c68 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c69 = \"select\";\n    var peg$c70 = peg$literalExpectation(\"select\", false);\n    var peg$c71 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c72 = \"=\";\n    var peg$c73 = peg$literalExpectation(\"=\", false);\n    var peg$c74 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c75 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c76 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c77 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c78 = peg$otherExpectation(\"whitespace\");\n    var peg$c79 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c80 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c81 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c82 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c83 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c84 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c85 = peg$otherExpectation(\"number\");\n    var peg$c86 = \"-\";\n    var peg$c87 = peg$literalExpectation(\"-\", false);\n    var peg$c88 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c89 = peg$otherExpectation(\"apostrophe\");\n    var peg$c90 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c91 = \"''\";\n    var peg$c92 = peg$literalExpectation(\"''\", false);\n    var peg$c93 = function () { return \"'\"; };\n    var peg$c94 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c95 = function (x) {\n        return (x !== '<' &&\n            x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}'));\n    };\n    var peg$c96 = \"\\n\";\n    var peg$c97 = peg$literalExpectation(\"\\n\", false);\n    var peg$c98 = function (x) {\n        return x === '<' || x === '>' || x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c99 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c100 = peg$otherExpectation(\"validTag\");\n    var peg$c101 = peg$otherExpectation(\"argNumber\");\n    var peg$c102 = \"0\";\n    var peg$c103 = peg$literalExpectation(\"0\", false);\n    var peg$c104 = function () { return 0; };\n    var peg$c105 = /^[1-9]/;\n    var peg$c106 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c107 = /^[0-9]/;\n    var peg$c108 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c109 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c110 = peg$otherExpectation(\"argName\");\n    var peg$c111 = peg$otherExpectation(\"tagName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c0();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsetagElement();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c1(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseliteralElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parseargumentElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsesimpleFormatElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parsepluralElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parseselectElement();\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$parsepoundElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c2();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                s3 = peg$parsequotedString();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parseunquotedString();\n                    if (s3 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 60) {\n                            s3 = peg$c3;\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c4);\n                            }\n                        }\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        s3 = peg$parsequotedString();\n                        if (s3 === peg$FAILED) {\n                            s3 = peg$parseunquotedString();\n                            if (s3 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 60) {\n                                    s3 = peg$c3;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s3 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c4);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = [];\n            s2 = peg$parsedoubleApostrophes();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parsequotedString();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parseunquotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsenonTagStartingAngleBracket();\n                    }\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    s2 = peg$parsedoubleApostrophes();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsequotedString();\n                        if (s2 === peg$FAILED) {\n                            s2 = peg$parseunquotedString();\n                            if (s2 === peg$FAILED) {\n                                s2 = peg$parsenonTagStartingAngleBracket();\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenonTagStartingAngleBracket() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        s2 = peg$parseopeningTag();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parseclosingTag();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseselfClosingTag();\n            }\n        }\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n            s1 = undefined;\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 60) {\n                s2 = peg$c3;\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c4);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c6();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c8;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c9);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsetagElement() {\n        var s0, s1, s2, s3;\n        peg$silentFails++;\n        s0 = peg$parseselfClosingTag();\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseopeningTag();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessage();\n                if (s2 !== peg$FAILED) {\n                    s3 = peg$parseclosingTag();\n                    if (s3 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c12(s1, s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c11);\n            }\n        }\n        return s0;\n    }\n    function peg$parseselfClosingTag() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsevalidTag();\n            if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c13) {\n                        s5 = peg$c13;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5];\n                        s1 = s2;\n                    }\n                    else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseopeningTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseclosingTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c24;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c25);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c26(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c21);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c29);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c28.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c27);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c31);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c36(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c35);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c41();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c45) {\n                                    s7 = peg$c45;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c46);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c50.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c51);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c48;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c49);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c52.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c53);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c54.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c54.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c55);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c56(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c57();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c58) {\n                                    s7 = peg$c58;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c59);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c60) {\n                                        s7 = peg$c60;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c61);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c62) {\n                                    s7 = peg$c62;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c63);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c64) {\n                                        s7 = peg$c64;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c65);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c66) {\n                                                    s12 = peg$c66;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c67);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c24;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c25);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c68(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c69) {\n                                    s7 = peg$c69;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c70);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c24;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c25);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c71(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c72;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c73);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c74(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c75(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c76(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c77(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c79.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c78);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c82.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c81);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c88(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c85);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c89);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c91) {\n            s1 = peg$c91;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c92);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c90);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c91) {\n                    s5 = peg$c91;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c92);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c50.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c51);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c91) {\n                        s5 = peg$c91;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c92);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c48;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c49);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c94(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c95(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c96;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c97);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c98(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c99);\n            }\n        }\n        return s0;\n    }\n    function peg$parsevalidTag() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsetagName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c100);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c102;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c103);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c104();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c105.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c106);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c107.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c108);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c107.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c108);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c109(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c101);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c110);\n            }\n        }\n        return s0;\n    }\n    function peg$parsetagName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s2 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsewhiteSpace();\n            if (s4 === peg$FAILED) {\n                s4 = peg$parsepatternSyntax();\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n                s3 = undefined;\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c30);\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = [s3, s4];\n                    s2 = s3;\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 45) {\n                    s2 = peg$c86;\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c87);\n                    }\n                }\n                if (s2 === peg$FAILED) {\n                    s2 = peg$currPos;\n                    s3 = peg$currPos;\n                    peg$silentFails++;\n                    s4 = peg$parsewhiteSpace();\n                    if (s4 === peg$FAILED) {\n                        s4 = peg$parsepatternSyntax();\n                    }\n                    peg$silentFails--;\n                    if (s4 === peg$FAILED) {\n                        s3 = undefined;\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                        if (input.length > peg$currPos) {\n                            s4 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s4 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c30);\n                            }\n                        }\n                        if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                        }\n                        else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c111);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    var ignoreTag = options && options.ignoreTag;\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n"],"sourceRoot":""}