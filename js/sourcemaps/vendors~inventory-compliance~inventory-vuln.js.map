{"version":3,"sources":["webpack:///./node_modules/shallow-equal/objects/index.js","webpack:///./node_modules/react-intl/lib/src/components/relative.js","webpack:///./node_modules/intl-messageformat/lib/src/formatters.js","webpack:///./node_modules/intl-messageformat/lib/src/error.js","webpack:///./node_modules/@formatjs/intl-utils/lib/src/invariant.js","webpack:///./node_modules/intl-messageformat/lib/src/core.js","webpack:///./node_modules/react-intl/lib/src/utils.js","webpack:///./node_modules/react-intl/lib/src/error.js","webpack:///./node_modules/react-intl/lib/src/components/injectIntl.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/types.js","webpack:///./node_modules/react-intl/lib/src/components/createFormattedComponent.js","webpack:///./node_modules/react-intl/lib/src/components/useIntl.js","webpack:///./node_modules/react-intl/lib/src/components/plural.js","webpack:///./node_modules/react-intl/lib/src/components/message.js","webpack:///./node_modules/react-intl/lib/index.js","webpack:///./node_modules/react-intl/lib/src/formatters/number.js","webpack:///./node_modules/react-intl/lib/src/formatters/relativeTime.js","webpack:///./node_modules/react-intl/lib/src/formatters/dateTime.js","webpack:///./node_modules/react-intl/lib/src/formatters/plural.js","webpack:///./node_modules/react-intl/lib/src/formatters/message.js","webpack:///./node_modules/react-intl/lib/src/formatters/list.js","webpack:///./node_modules/react-intl/lib/src/formatters/displayName.js","webpack:///./node_modules/react-intl/lib/src/components/provider.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/parser.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/normalize.js","webpack:///./node_modules/intl-messageformat-parser/lib/index.js","webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/skeleton.js"],"names":["module","exports","objA","objB","aKeys","Object","keys","bKeys","len","length","i","key","prototype","hasOwnProperty","call","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","p","__","this","constructor","create","__assign","assign","t","s","n","arguments","apply","HOUR","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","unit","valueToSeconds","value","INCREMENTABLE_UNITS","canIncrement","includes","FormattedRelativeTime","_super","props","_this","_updateTimer","state","prevUnit","prevValue","currentValueInSeconds","updateIntervalInSeconds","scheduleNextUpdate","_a","_b","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","setState","componentDidMount","componentDidUpdate","componentWillUnmount","getDerivedStateFromProps","render","Consumer","intl","formatRelativeTime","Text","textComponent","children","currentValue","currentUnit","round","formattedRelativeTime","displayName","defaultProps","PART_TYPE","isFormatXMLElementFn","el","formatToParts","els","locales","formatters","formats","values","currentPluralValue","originalMessage","type","result","_i","els_1","push","getNumberFormat","format","varName","String","style","date","pattern","undefined","getDateTimeFormat","time","number","tokens","value_1","formatFn","chunks","map","isArray","c","opt","options","other","Intl","PluralRules","rule","getPluralRules","pluralType","select","offset","parts","reduce","all","part","lastPart","mergeLiteral","ErrorCode","FormatError","msg","code","toString","message","Error","InvalidValueError","variableId","join","InvalidValueTypeError","MissingValueError","invariant","condition","Err","__spreadArrays","il","r","k","a","j","jl","mergeConfigs","defaultConfig","configs","c1","c2","createFastMemoizeCache","store","has","get","set","memoizeIntl","IntlMessageFormat","overrideFormats","opts","cache","defaultLocale","formatterCache","dateTime","pluralRules","ast","resolvedOptions","locale","NumberFormat","supportedLocalesOf","getAst","__parse","TypeError","normalizeHashtagInPlural","ignoreTag","args","bind","strategy","strategies","variadic","DateTimeFormat","defineProperty","memoizedDefaultLocale","enumerable","configurable","currency","percent","short","month","day","year","medium","long","full","weekday","hour","minute","second","timeZoneName","filterProps","whitelist","defaults","filtered","name","invariantIntlContext","DEFAULT_INTL_CONFIG","messages","timeZone","defaultFormats","onError","error","createIntlCache","relativeTime","list","displayNames","createFormatters","RelativeTimeFormat","ListFormat","DisplayNames","getMessageFormat","getRelativeTimeFormat","getListFormat","getDisplayNames","getNamedFormat","formatType","assignUniqueKeysToParts","formatXMLElementFn","toArray","ReactIntlErrorCode","ReactIntlError","exception","stack","captureStackTrace","UnsupportedFormatterError","InvalidConfigError","MissingDataError","MessageFormatError","descriptor","id","defaultMessage","description","MissingTranslationError","hoistNonReactStatics","IntlContext","IntlConsumer","Provider","Context","injectIntl","WrappedComponent","Component","intlPropName","_c","forwardRef","_d","enforceContext","WithIntl","intlProp","ref","forwardedRef","__esModule","ExclamationTriangleIconConfig","height","width","svgPath","yOffset","xOffset","transform","ExclamationTriangleIcon","createIcon","ExclamationCircleIconConfig","ExclamationCircleIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","TYPE","SKELETON_TYPE","isLiteralElement","literal","isArgumentElement","argument","isNumberElement","isDateElement","isTimeElement","isSelectElement","isPluralElement","plural","isPoundElement","pound","isTagElement","tag","isNumberSkeleton","isDateTimeSkeleton","DisplayName","DisplayNameParts","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","FormattedNumberParts","formatProps","formatNumberToParts","createFormattedDateTimePartsComponent","ComponentParts","Date","formatDateToParts","formatTimeToParts","createFormattedComponent","formattedValue","useIntl","FormattedPlural","formatPlural","formattedPlural","shallowEquals","FormattedMessage","shouldComponentUpdate","nextProps","otherProps","nextValues","nextOtherProps","formatMessage","tagName","nodes","defineMessages","msgs","defineMessage","FormattedDate","FormattedTime","FormattedNumber","FormattedList","FormattedDisplayName","FormattedDateParts","FormattedTimeParts","NUMBER_FORMAT_OPTIONS","getFormatter","formatNumber","config","RELATIVE_TIME_FORMAT_OPTIONS","DATE_TIME_FORMAT_OPTIONS","filteredOptions","formatDate","formatTime","PLURAL_FORMAT_OPTIONS","setTimeZoneInOptions","deepMergeOptions","opts1","opts2","deepMergeFormatsAndSetTimeZone","f1","mfFormats","prepareIntlMessageFormatHtmlOutput","shouldWrap","messageDescriptor","wrapRichTextChunksInFragment","msgId","replace","patchedValues","acc","v","assignUniqueKeysToFormatXMLElementFnArgument","toLowerCase","LIST_FORMAT_OPTIONS","now","formatList","richValues_1","serializedValues","generateToken","val","DISPLAY_NAMES_OPTONS","formatDisplayName","of","processIntlConfig","createIntl","resolvedConfig","IntlProvider","prevConfig","SyntaxError","expected","found","location","buildMessage","hex","ch","charCodeAt","toUpperCase","literalEscape","classEscape","describeExpectation","expectation","text","escapedParts","inverted","expected1","descriptions","sort","slice","describeExpected","found1","pegParse","input","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c3","peg$c4","peg$literalExpectation","peg$c5","peg$c9","peg$c11","peg$otherExpectation","peg$c14","peg$c17","peg$c20","peg$c21","peg$c22","peg$c23","peg$c24","peg$c25","peg$c27","peg$c28","peg$c29","peg$classExpectation","peg$c30","peg$c31","peg$c33","peg$c35","peg$c38","peg$c39","peg$c42","messageCtx","pop","peg$c43","peg$c44","peg$c45","peg$c46","peg$c47","insertLocation","peg$c48","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c58","peg$c59","peg$c60","peg$c61","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c69","peg$c70","peg$c73","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c86","peg$c87","peg$c90","peg$c91","peg$c92","peg$c95","x","isInPluralOption","peg$c97","peg$c99","peg$c100","peg$c101","peg$c103","peg$c105","peg$c106","peg$c107","peg$c108","peg$c110","peg$c111","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","end","peg$fail","peg$buildStructuredError","peg$parsemessage","s0","s1","peg$parsemessageElement","s2","s3","peg$parseselfClosingTag","peg$parseopeningTag","peg$parseclosingTag","open","close","peg$parsetagElement","peg$parsemessageText","messageText","peg$parseliteralElement","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","peg$parsenumberSkeletonToken","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","optionLocation","peg$c68","peg$parsepluralElement","peg$parseselectOption","peg$c71","peg$parseselectElement","peg$parsepoundElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenonTagStartingAngleBracket","s4","peg$parsevalidTag","peg$parsenumberSkeletonId","peg$parsewhiteSpace","test","charAt","peg$parsenumberSkeletonTokenOption","stem","peg$c36","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","peg$parseescapedChar","peg$parsetagName","parseInt","captureLocation","PLURAL_HASHTAG_REGEX","parse","forEach","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","monadic","fn","serializer","arg","cacheKey","computedValue","assemble","context","serialize","strategyDefault","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","cacheDefault","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","match","era","RangeError","hour12","hourCycle","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","parseSignificantPrecision","str","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseNotationOptions","signOpts","convertNumberSkeletonToNumberFormatOptions","tokens_1","token","useGrouping","maximumFractionDigits","notation","compactDisplay","currencyDisplay","unitDisplay","g3","g4","g5","minimumFractionDigits"],"mappings":"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","file":"vendors~inventory-compliance~inventory-vuln.20179f6427c50a916c1a.js","sourcesContent":["'use strict';\n\nfunction shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualObjects;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport { invariant } from '@formatjs/intl-utils';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    var absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nvar INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit) {\n    if (unit === void 0) { unit = 'second'; }\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nvar FormattedRelativeTime = /** @class */ (function (_super) {\n    __extends(FormattedRelativeTime, _super);\n    function FormattedRelativeTime(props) {\n        var _this = _super.call(this, props) || this;\n        // Public for testing\n        _this._updateTimer = null;\n        _this.state = {\n            prevUnit: _this.props.unit,\n            prevValue: _this.props.value,\n            currentValueInSeconds: canIncrement(_this.props.unit)\n                ? valueToSeconds(_this.props.value, _this.props.unit)\n                : 0,\n        };\n        invariant(!props.updateIntervalInSeconds ||\n            !!(props.updateIntervalInSeconds && canIncrement(props.unit)), 'Cannot schedule update with unit longer than hour');\n        return _this;\n    }\n    FormattedRelativeTime.prototype.scheduleNextUpdate = function (_a, _b) {\n        var _this = this;\n        var updateIntervalInSeconds = _a.updateIntervalInSeconds, unit = _a.unit;\n        var currentValueInSeconds = _b.currentValueInSeconds;\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        var nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        var unitDuration = getDurationInSeconds(nextUnit);\n        var remainder = nextValueInSeconds % unitDuration;\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(function () {\n            return _this.setState({\n                currentValueInSeconds: nextInterestingValueInSeconds,\n            });\n        }, delayInSeconds * 1e3);\n    };\n    FormattedRelativeTime.prototype.componentDidMount = function () {\n        this.scheduleNextUpdate(this.props, this.state);\n    };\n    FormattedRelativeTime.prototype.componentDidUpdate = function () {\n        this.scheduleNextUpdate(this.props, this.state);\n    };\n    FormattedRelativeTime.prototype.componentWillUnmount = function () {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    };\n    FormattedRelativeTime.getDerivedStateFromProps = function (props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    };\n    FormattedRelativeTime.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatRelativeTime = intl.formatRelativeTime, Text = intl.textComponent;\n            var _a = _this.props, children = _a.children, value = _a.value, unit = _a.unit, updateIntervalInSeconds = _a.updateIntervalInSeconds;\n            var currentValueInSeconds = _this.state.currentValueInSeconds;\n            var currentValue = value || 0;\n            var currentUnit = unit;\n            if (canIncrement(unit) &&\n                typeof currentValueInSeconds === 'number' &&\n                updateIntervalInSeconds) {\n                currentUnit = selectUnit(currentValueInSeconds);\n                var unitDuration = getDurationInSeconds(currentUnit);\n                currentValue = Math.round(currentValueInSeconds / unitDuration);\n            }\n            var formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, __assign({}, _this.props));\n            if (typeof children === 'function') {\n                return children(formattedRelativeTime);\n            }\n            if (Text) {\n                return React.createElement(Text, null, formattedRelativeTime);\n            }\n            return formattedRelativeTime;\n        }));\n    };\n    FormattedRelativeTime.displayName = 'FormattedRelativeTime';\n    FormattedRelativeTime.defaultProps = {\n        value: 0,\n        unit: 'second',\n    };\n    return FormattedRelativeTime;\n}(React.PureComponent));\nexport { FormattedRelativeTime };\nexport default FormattedRelativeTime;\n","import { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, isTagElement, } from 'intl-messageformat-parser';\nimport { MissingValueError, InvalidValueError, FormatError, InvalidValueTypeError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? 0 /* literal */ : 1 /* object */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? 0 /* literal */ : 1 /* object */,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","export function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { parse } from 'intl-messageformat-parser';\nimport * as memoize from 'fast-memoize';\nimport { formatToParts, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDateTimeFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== 0 /* literal */ ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n","/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport * as memoize from 'fast-memoize';\nimport { invariant } from '@formatjs/intl-utils';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return whitelist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var defaultErrorHandler = function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getNumberFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getPluralRules = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoizeIntl(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDisplayNames: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ReactIntlErrorCode;\n(function (ReactIntlErrorCode) {\n    ReactIntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    ReactIntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    ReactIntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    ReactIntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    ReactIntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(ReactIntlErrorCode || (ReactIntlErrorCode = {}));\nvar ReactIntlError = /** @class */ (function (_super) {\n    __extends(ReactIntlError, _super);\n    function ReactIntlError(code, message, exception) {\n        var _this = _super.call(this, \"[React Intl Error \" + code + \"] \" + message + \" \\n\" + (exception ? \"\\n\" + exception.message + \"\\n\" + exception.stack : '')) || this;\n        _this.code = code;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ReactIntlError);\n        }\n        return _this;\n    }\n    return ReactIntlError;\n}(Error));\nexport { ReactIntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, \"UNSUPPORTED_FORMATTER\" /* UNSUPPORTED_FORMATTER */, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(ReactIntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, \"INVALID_CONFIG\" /* INVALID_CONFIG */, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(ReactIntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, \"MISSING_DATA\" /* MISSING_DATA */, message, exception) || this;\n    }\n    return MissingDataError;\n}(ReactIntlError));\nexport { MissingDataError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"FORMAT_ERROR\" /* FORMAT_ERROR */, message + \" \\nLocale: \" + locale + \"\\nMessageID: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.id) + \"\\nDefault Message: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage) + \"\\nDescription: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.description) + \" \\n\", exception) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MessageFormatError;\n}(ReactIntlError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, \"MISSING_TRANSLATION\" /* MISSING_TRANSLATION */, \"Missing message: \\\"\" + descriptor.id + \"\\\" for locale \\\"\" + locale + \"\\\", using \" + (descriptor.defaultMessage ? 'default message' : 'id') + \" as fallback.\") || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(ReactIntlError));\nexport { MissingTranslationError };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n    invariantIntlContext(intl);\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n})); };\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    })); };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    })); };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nvar FormattedPlural = function (props) {\n    var value = props.value, other = props.other, children = props.children, _a = props.intl, formatPlural = _a.formatPlural, Text = _a.textComponent;\n    var pluralCategory = formatPlural(value, props);\n    var formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\n// Explicitly annotate type here to workaround API extractor's inability to handle `import('./someModule')`\n// type annotations when rolling up DTS file.\nvar FormattedPluralWithIntl = withIntl(FormattedPlural);\nexport default FormattedPluralWithIntl;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nvar FormattedMessage = /** @class */ (function (_super) {\n    __extends(FormattedMessage, _super);\n    function FormattedMessage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormattedMessage.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, values = _a.values, otherProps = __rest(_a, [\"values\"]);\n        var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    };\n    FormattedMessage.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n            var _b = _this.props, id = _b.id, description = _b.description, defaultMessage = _b.defaultMessage, values = _b.values, children = _b.children, _c = _b.tagName, Component = _c === void 0 ? Text : _c;\n            var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n            var nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement.apply(React, __spreadArrays([Component, null], nodes));\n            }\n            return nodes;\n        }));\n    };\n    FormattedMessage.displayName = 'FormattedMessage';\n    return FormattedMessage;\n}(React.Component));\nexport default FormattedMessage;\n","import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\nexport function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\nexport { default as useIntl } from './src/components/useIntl';\nexport { default as IntlProvider, createIntl } from './src/components/provider';\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedList = createFormattedComponent('formatList');\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './src/components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './src/components/relative';\nexport { default as FormattedPlural } from './src/components/plural';\nexport { default as FormattedMessage } from './src/components/message';\nexport { createIntlCache } from './src/utils';\nexport * from './src/error';\n","import { getNamedFormat, filterProps } from '../utils';\nimport { ReactIntlError } from '../error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return [];\n}\n","import { getNamedFormat, filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { MessageFormatError } from '../error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new MessageFormatError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { filterProps, getNamedFormat } from '../utils';\nimport { ReactIntlError } from '../error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'fractionalSecondDigits',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatDateToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return [];\n}\n","import { filterProps } from '../utils';\nimport { MessageFormatError } from '../error';\nimport { FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new MessageFormatError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { invariant } from '@formatjs/intl-utils';\nimport { assignUniqueKeysToParts } from '../utils';\nimport { IntlMessageFormat, isFormatXMLElementFn, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from '../error';\nimport { TYPE } from 'intl-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport function assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nfunction prepareIntlMessageFormatHtmlOutput(chunks, shouldWrap) {\n    return Array.isArray(chunks) && shouldWrap\n        ? React.createElement.apply(React, __spreadArrays([React.Fragment, null], chunks)) : chunks;\n}\nexport function formatMessage(_a, state, messageDescriptor, values) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, onError = _a.onError, timeZone = _a.timeZone, wrapRichTextChunksInFragment = _a.wrapRichTextChunksInFragment;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, '[React Intl] An `id` must be provided to format a message.');\n    var id = String(msgId);\n    var message = messages && messages.hasOwnProperty(id) && messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values && message && typeof message === 'string') {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    var patchedValues = values && assignUniqueKeysToFormatXMLElementFnArgument(values);\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n                return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\" + id + \"\\\", rendering default message verbatim\", locale, messageDescriptor, e));\n                return defaultMessage;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, {\n            formatters: state,\n        });\n        return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\" + id + \"\\\", using \" + (defaultMessage ? 'default message' : 'id') + \" as fallback.\", locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\" + id + \"\\\", rendering message verbatim\", locale, messageDescriptor, e));\n        }\n    }\n    return message || defaultMessage || id;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nvar LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return now + \"_\" + i + \"_\" + now;\n}\nexport function formatList(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        if (!Object.keys(richValues_1).length) {\n            return getListFormat(locale, filteredOptions).format(serializedValues);\n        }\n        var parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n        return parts.reduce(function (all, el) {\n            var val = el.value;\n            if (richValues_1[val]) {\n                all.push(richValues_1[val]);\n            }\n            else if (typeof all[all.length - 1] === 'string') {\n                all[all.length - 1] += val;\n            }\n            else {\n                all.push(val);\n            }\n            return all;\n        }, []);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting list.', e));\n    }\n    return values;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nvar DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting display name.', e));\n    }\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts, } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { InvalidConfigError, MissingDataError } from '../error';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","// @ts-nocheck\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function () { return !ignoreTag; };\n    var peg$c1 = function (x) { return x; };\n    var peg$c2 = function () { return ignoreTag; };\n    var peg$c3 = \"<\";\n    var peg$c4 = peg$literalExpectation(\"<\", false);\n    var peg$c5 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c6 = function () { return '<'; };\n    var peg$c7 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c8 = \"#\";\n    var peg$c9 = peg$literalExpectation(\"#\", false);\n    var peg$c10 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c11 = peg$otherExpectation(\"tagElement\");\n    var peg$c12 = function (open, children, close) {\n        if (open !== close) {\n            error(\"Mismatch tag \\\"\" + open + \"\\\" !== \\\"\" + close + \"\\\"\", location());\n        }\n        return __assign({ type: TYPE.tag, value: open, children: children }, insertLocation());\n    };\n    var peg$c13 = \"/>\";\n    var peg$c14 = peg$literalExpectation(\"/>\", false);\n    var peg$c15 = function (value) {\n        return __assign({ type: TYPE.literal, value: value.join('') }, insertLocation());\n    };\n    var peg$c16 = \">\";\n    var peg$c17 = peg$literalExpectation(\">\", false);\n    var peg$c18 = function (tag) { return tag; };\n    var peg$c19 = \"</\";\n    var peg$c20 = peg$literalExpectation(\"</\", false);\n    var peg$c21 = peg$otherExpectation(\"argumentElement\");\n    var peg$c22 = \"{\";\n    var peg$c23 = peg$literalExpectation(\"{\", false);\n    var peg$c24 = \"}\";\n    var peg$c25 = peg$literalExpectation(\"}\", false);\n    var peg$c26 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c27 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c28 = /^['\\/{}]/;\n    var peg$c29 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c30 = peg$anyExpectation();\n    var peg$c31 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c32 = \"/\";\n    var peg$c33 = peg$literalExpectation(\"/\", false);\n    var peg$c34 = function (option) { return option; };\n    var peg$c35 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c36 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c37 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c38 = \"::\";\n    var peg$c39 = peg$literalExpectation(\"::\", false);\n    var peg$c40 = function (skeleton) { return skeleton; };\n    var peg$c41 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c42 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c43 = \",\";\n    var peg$c44 = peg$literalExpectation(\",\", false);\n    var peg$c45 = \"number\";\n    var peg$c46 = peg$literalExpectation(\"number\", false);\n    var peg$c47 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c48 = \"'\";\n    var peg$c49 = peg$literalExpectation(\"'\", false);\n    var peg$c50 = /^[^']/;\n    var peg$c51 = peg$classExpectation([\"'\"], true, false);\n    var peg$c52 = /^[^a-zA-Z'{}]/;\n    var peg$c53 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c54 = /^[a-zA-Z]/;\n    var peg$c55 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c56 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c57 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c58 = \"date\";\n    var peg$c59 = peg$literalExpectation(\"date\", false);\n    var peg$c60 = \"time\";\n    var peg$c61 = peg$literalExpectation(\"time\", false);\n    var peg$c62 = \"plural\";\n    var peg$c63 = peg$literalExpectation(\"plural\", false);\n    var peg$c64 = \"selectordinal\";\n    var peg$c65 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c66 = \"offset:\";\n    var peg$c67 = peg$literalExpectation(\"offset:\", false);\n    var peg$c68 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c69 = \"select\";\n    var peg$c70 = peg$literalExpectation(\"select\", false);\n    var peg$c71 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c72 = \"=\";\n    var peg$c73 = peg$literalExpectation(\"=\", false);\n    var peg$c74 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c75 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c76 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c77 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c78 = peg$otherExpectation(\"whitespace\");\n    var peg$c79 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c80 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c81 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c82 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c83 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c84 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c85 = peg$otherExpectation(\"number\");\n    var peg$c86 = \"-\";\n    var peg$c87 = peg$literalExpectation(\"-\", false);\n    var peg$c88 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c89 = peg$otherExpectation(\"apostrophe\");\n    var peg$c90 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c91 = \"''\";\n    var peg$c92 = peg$literalExpectation(\"''\", false);\n    var peg$c93 = function () { return \"'\"; };\n    var peg$c94 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c95 = function (x) {\n        return (x !== '<' &&\n            x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}'));\n    };\n    var peg$c96 = \"\\n\";\n    var peg$c97 = peg$literalExpectation(\"\\n\", false);\n    var peg$c98 = function (x) {\n        return x === '<' || x === '>' || x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c99 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c100 = peg$otherExpectation(\"validTag\");\n    var peg$c101 = peg$otherExpectation(\"argNumber\");\n    var peg$c102 = \"0\";\n    var peg$c103 = peg$literalExpectation(\"0\", false);\n    var peg$c104 = function () { return 0; };\n    var peg$c105 = /^[1-9]/;\n    var peg$c106 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c107 = /^[0-9]/;\n    var peg$c108 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c109 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c110 = peg$otherExpectation(\"argName\");\n    var peg$c111 = peg$otherExpectation(\"tagName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c0();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsetagElement();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c1(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseliteralElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parseargumentElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsesimpleFormatElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parsepluralElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parseselectElement();\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$parsepoundElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c2();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                s3 = peg$parsequotedString();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parseunquotedString();\n                    if (s3 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 60) {\n                            s3 = peg$c3;\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c4);\n                            }\n                        }\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        s3 = peg$parsequotedString();\n                        if (s3 === peg$FAILED) {\n                            s3 = peg$parseunquotedString();\n                            if (s3 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 60) {\n                                    s3 = peg$c3;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s3 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c4);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = [];\n            s2 = peg$parsedoubleApostrophes();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parsequotedString();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parseunquotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsenonTagStartingAngleBracket();\n                    }\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    s2 = peg$parsedoubleApostrophes();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsequotedString();\n                        if (s2 === peg$FAILED) {\n                            s2 = peg$parseunquotedString();\n                            if (s2 === peg$FAILED) {\n                                s2 = peg$parsenonTagStartingAngleBracket();\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenonTagStartingAngleBracket() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        s2 = peg$parseopeningTag();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parseclosingTag();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseselfClosingTag();\n            }\n        }\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n            s1 = undefined;\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 60) {\n                s2 = peg$c3;\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c4);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c6();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c8;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c9);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsetagElement() {\n        var s0, s1, s2, s3;\n        peg$silentFails++;\n        s0 = peg$parseselfClosingTag();\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseopeningTag();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessage();\n                if (s2 !== peg$FAILED) {\n                    s3 = peg$parseclosingTag();\n                    if (s3 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c12(s1, s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c11);\n            }\n        }\n        return s0;\n    }\n    function peg$parseselfClosingTag() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsevalidTag();\n            if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c13) {\n                        s5 = peg$c13;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5];\n                        s1 = s2;\n                    }\n                    else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseopeningTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseclosingTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c24;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c25);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c26(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c21);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c29);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c28.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c27);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c31);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c36(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c35);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c41();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c45) {\n                                    s7 = peg$c45;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c46);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c50.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c51);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c48;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c49);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c52.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c53);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c54.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c54.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c55);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c56(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c57();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c58) {\n                                    s7 = peg$c58;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c59);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c60) {\n                                        s7 = peg$c60;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c61);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c62) {\n                                    s7 = peg$c62;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c63);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c64) {\n                                        s7 = peg$c64;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c65);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c66) {\n                                                    s12 = peg$c66;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c67);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c24;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c25);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c68(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c69) {\n                                    s7 = peg$c69;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c70);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c24;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c25);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c71(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c72;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c73);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c74(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c75(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c76(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c77(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c79.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c78);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c82.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c81);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c88(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c85);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c89);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c91) {\n            s1 = peg$c91;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c92);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c90);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c91) {\n                    s5 = peg$c91;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c92);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c50.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c51);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c91) {\n                        s5 = peg$c91;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c92);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c48;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c49);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c94(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c95(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c96;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c97);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c98(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c99);\n            }\n        }\n        return s0;\n    }\n    function peg$parsevalidTag() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsetagName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c100);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c102;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c103);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c104();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c105.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c106);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c107.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c108);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c107.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c108);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c109(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c101);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c110);\n            }\n        }\n        return s0;\n    }\n    function peg$parsetagName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s2 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsewhiteSpace();\n            if (s4 === peg$FAILED) {\n                s4 = peg$parsepatternSyntax();\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n                s3 = undefined;\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c30);\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = [s3, s4];\n                    s2 = s3;\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 45) {\n                    s2 = peg$c86;\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c87);\n                    }\n                }\n                if (s2 === peg$FAILED) {\n                    s2 = peg$currPos;\n                    s3 = peg$currPos;\n                    peg$silentFails++;\n                    s4 = peg$parsewhiteSpace();\n                    if (s4 === peg$FAILED) {\n                        s4 = peg$parsepatternSyntax();\n                    }\n                    peg$silentFails--;\n                    if (s4 === peg$FAILED) {\n                        s3 = undefined;\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                        if (input.length > peg$currPos) {\n                            s4 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s4 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c30);\n                            }\n                        }\n                        if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                        }\n                        else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c111);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    var ignoreTag = options && options.ignoreTag;\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","import { pegParse } from './src/parser';\nimport { normalizeHashtagInPlural } from './src/normalize';\nexport * from './src/types';\nexport * from './src/parser';\nexport * from './src/skeleton';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) pattenrs are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) pattenrs are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function convertNumberSkeletonToNumberFormatOptions(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        // precision-integer case\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n"],"sourceRoot":""}