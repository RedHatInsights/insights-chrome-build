{"version":3,"sources":["webpack:///./node_modules/react-intl/lib/src/utils.js","webpack:///./node_modules/react-intl/lib/src/error.js","webpack:///./node_modules/react-intl/lib/src/components/injectIntl.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./node_modules/react-intl/lib/index.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/types.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/parser.js","webpack:///./node_modules/intl-messageformat-parser/lib/index.js","webpack:///./node_modules/react-intl/lib/src/components/provider.js","webpack:///./node_modules/react-intl/lib/src/components/createFormattedComponent.js","webpack:///./node_modules/fast-memoize/src/index.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/skeleton.js","webpack:///./node_modules/react-intl/lib/src/components/useIntl.js","webpack:///./node_modules/shallow-equal/objects/index.js","webpack:///./node_modules/react-intl/lib/src/components/relative.js","webpack:///./node_modules/react-intl/lib/src/components/plural.js","webpack:///./node_modules/react-intl/lib/src/components/message.js","webpack:///./node_modules/intl-messageformat/lib/src/formatters.js","webpack:///./node_modules/intl-messageformat/lib/src/error.js","webpack:///./node_modules/intl-messageformat-parser/lib/src/normalize.js","webpack:///./node_modules/react-intl/lib/src/formatters/number.js","webpack:///./node_modules/react-intl/lib/src/formatters/relativeTime.js","webpack:///./node_modules/react-intl/lib/src/formatters/dateTime.js","webpack:///./node_modules/react-intl/lib/src/formatters/plural.js","webpack:///./node_modules/react-intl/lib/src/formatters/message.js","webpack:///./node_modules/react-intl/lib/src/formatters/list.js","webpack:///./node_modules/react-intl/lib/src/formatters/displayName.js","webpack:///./node_modules/@formatjs/intl-utils/lib/src/invariant.js","webpack:///./node_modules/intl-messageformat/lib/src/core.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__spreadArrays","il","r","Array","k","a","j","jl","filterProps","props","whitelist","defaults","reduce","filtered","name","invariantIntlContext","intl","DEFAULT_INTL_CONFIG","formats","messages","timeZone","undefined","textComponent","defaultLocale","defaultFormats","onError","error","createIntlCache","dateTime","number","message","relativeTime","pluralRules","list","displayNames","createFastMemoizeCache","store","create","has","key","get","set","value","memoizeIntl","createFormatters","cache","RelativeTimeFormat","Intl","ListFormat","DisplayNames","getDateTimeFormat","_a","args","_i","DateTimeFormat","bind","strategy","strategies","variadic","getNumberFormat","NumberFormat","getPluralRules","PluralRules","getMessageFormat","locales","overrideFormats","opts","formatters","getRelativeTimeFormat","getListFormat","getDisplayNames","getNamedFormat","type","format","formatType","assignUniqueKeysToParts","formatXMLElementFn","parts","toArray","extendStatics","ReactIntlErrorCode","__extends","d","b","setPrototypeOf","__proto__","__","constructor","ReactIntlError","_super","code","exception","_this","stack","Error","captureStackTrace","UnsupportedFormatterError","InvalidConfigError","MissingDataError","MessageFormatError","locale","descriptor","id","defaultMessage","description","MissingTranslationError","hoistNonReactStatics","IntlContext","IntlConsumer","Consumer","Provider","Context","injectIntl","WrappedComponent","options","Component","_b","intlPropName","_c","forwardRef","_d","enforceContext","WithIntl","intlProp","ref","forwardedRef","displayName","exports","__esModule","ExclamationCircleIconConfig","height","width","svgPath","yOffset","xOffset","transform","ExclamationCircleIcon","createIcon","OutlinedQuestionCircleIconConfig","OutlinedQuestionCircleIcon","defineMessages","msgs","defineMessage","msg","FormattedDate","FormattedTime","FormattedNumber","FormattedList","FormattedDisplayName","FormattedDateParts","FormattedTimeParts","TYPE","SKELETON_TYPE","isLiteralElement","el","literal","isArgumentElement","argument","isNumberElement","isDateElement","date","isTimeElement","time","isSelectElement","select","isPluralElement","plural","isPoundElement","pound","isTagElement","tag","isNumberSkeleton","isDateTimeSkeleton","SyntaxError","expected","found","location","buildMessage","hex","ch","charCodeAt","toString","toUpperCase","literalEscape","replace","classEscape","describeExpectation","expectation","text","escapedParts","map","part","isArray","inverted","expected1","descriptions","sort","slice","join","describeExpected","found1","pegParse","input","peg$result","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c4","peg$literalExpectation","peg$c5","peg$c9","peg$c11","peg$otherExpectation","peg$c14","peg$c17","peg$c20","peg$c21","peg$c23","peg$c25","peg$c27","peg$c28","peg$c29","peg$classExpectation","peg$c30","peg$c31","peg$c33","peg$c35","peg$c39","peg$c42","style","messageCtx","pop","peg$c44","peg$c46","peg$c47","insertLocation","peg$c49","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","peg$c59","peg$c61","peg$c63","peg$c65","peg$c67","peg$c70","peg$c73","peg$c78","peg$c79","peg$c80","peg$c81","peg$c82","peg$c83","peg$c84","peg$c85","peg$c87","peg$c90","peg$c92","peg$c95","x","isInPluralOption","peg$c97","peg$c99","peg$c100","peg$c101","peg$c103","peg$c105","peg$c106","peg$c107","peg$c108","peg$c110","peg$c111","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","startRule","substring","peg$computeLocation","location1","peg$buildSimpleError","text1","ignoreCase","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","end","peg$fail","push","peg$buildStructuredError","peg$parsemessage","s0","s1","peg$parsemessageElement","s2","ignoreTag","s3","peg$parseselfClosingTag","peg$parseopeningTag","peg$parseclosingTag","children","open","close","peg$parsetagElement","peg$parsemessageText","messageText","peg$parseliteralElement","s5","peg$parse_","peg$parseargNameOrNumber","peg$parseargumentElement","s7","s9","s10","s11","s12","substr","peg$parsenumberSkeletonToken","tokens","peg$parsenumberSkeleton","peg$parsenumberArgStyle","peg$parsenumberFormatElement","peg$parsedateTimeSkeletonLiteral","peg$parsedateTimeSkeletonPattern","pattern","peg$parsedateTimeSkeleton","peg$parsedateOrTimeArgStyle","peg$parsedateOrTimeFormatElement","peg$parsesimpleFormatElement","s13","s14","s15","peg$parsenumber","peg$parsepluralOption","pluralType","all","optionLocation","peg$c68","peg$parsepluralElement","peg$parseselectOption","peg$c71","peg$parseselectElement","peg$parsepoundElement","peg$parsedoubleApostrophes","peg$parsequotedString","peg$parseunquotedString","peg$parsenonTagStartingAngleBracket","s4","peg$parsevalidTag","peg$parsenumberSkeletonId","peg$parsewhiteSpace","test","charAt","peg$parsenumberSkeletonTokenOption","stem","peg$c36","s6","peg$parseargName","peg$parsepluralRuleSelectValue","peg$parsepatternSyntax","negative","num","peg$parseargNumber","peg$parseescapedChar","peg$parsetagName","parseInt","captureLocation","parse","els","normalizeHashtagInPlural","shallowEquals","processIntlConfig","config","wrapRichTextChunksInFragment","createIntl","resolvedConfig","supportedLocalesOf","formatNumber","formatNumberToParts","formatRelativeTime","formatDate","formatDateToParts","formatTime","formatTimeToParts","formatPlural","formatMessage","formatList","formatDisplayName","IntlProvider","state","prevConfig","getDerivedStateFromProps","render","defaultProps","DisplayName","DisplayNameParts","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","FormattedNumberParts","formatProps","createFormattedDateTimePartsComponent","ComponentParts","Date","createFormattedComponent","formattedValue","Text","monadic","fn","serializer","arg","cacheKey","computedValue","assemble","context","serialize","strategyDefault","serializerDefault","JSON","stringify","ObjectWithoutPrototypeCache","cacheDefault","module","DATE_TIME_REGEX","parseDateTimeSkeleton","skeleton","result","match","len","era","year","RangeError","month","day","weekday","hour12","hourCycle","hour","minute","second","timeZoneName","FRACTION_PRECISION_REGEX","SIGNIFICANT_PRECISION_REGEX","parseSignificantPrecision","str","_","g1","g2","minimumSignificantDigits","maximumSignificantDigits","parseSign","signDisplay","currencySign","parseNotationOptions","opt","signOpts","convertNumberSkeletonToNumberFormatOptions","tokens_1","token","currency","useGrouping","maximumFractionDigits","unit","notation","compactDisplay","currencyDisplay","unitDisplay","g3","g4","g5","minimumFractionDigits","useIntl","objA","objB","aKeys","keys","bKeys","selectUnit","seconds","absValue","Math","abs","getDurationInSeconds","valueToSeconds","INCREMENTABLE_UNITS","canIncrement","includes","FormattedRelativeTime","_updateTimer","prevUnit","prevValue","currentValueInSeconds","updateIntervalInSeconds","scheduleNextUpdate","clearTimeout","nextValueInSeconds","nextUnit","unitDuration","prevInterestingValueInSeconds","nextInterestingValueInSeconds","delayInSeconds","setTimeout","setState","componentDidMount","componentDidUpdate","componentWillUnmount","currentValue","currentUnit","round","formattedRelativeTime","FormattedPlural","other","formattedPlural","FormattedPluralWithIntl","FormattedMessage","shouldComponentUpdate","nextProps","values","otherProps","nextValues","nextOtherProps","tagName","nodes","PART_TYPE","isFormatXMLElementFn","formatToParts","currentPluralValue","originalMessage","els_1","varName","String","value_1","formatFn","chunks","c","rule","lastPart","mergeLiteral","ErrorCode","FormatError","InvalidValueError","variableId","InvalidValueTypeError","MissingValueError","PLURAL_HASHTAG_REGEX","forEach","matchingLiteralElIndex","literalEl","el_1","newValue","newEls","splice","NUMBER_FORMAT_OPTIONS","getFormatter","RELATIVE_TIME_FORMAT_OPTIONS","DATE_TIME_FORMAT_OPTIONS","filteredOptions","PLURAL_FORMAT_OPTIONS","setTimeZoneInOptions","deepMergeOptions","opts1","opts2","deepMergeFormatsAndSetTimeZone","f1","mfFormats","prepareIntlMessageFormatHtmlOutput","shouldWrap","messageDescriptor","msgId","patchedValues","acc","v","assignUniqueKeysToFormatXMLElementFnArgument","toLowerCase","LIST_FORMAT_OPTIONS","now","richValues_1","serializedValues","generateToken","val","DISPLAY_NAMES_OPTONS","of","invariant","condition","Err","mergeConfigs","defaultConfig","configs","c1","c2","IntlMessageFormat","formatterCache","ast","resolvedOptions","getAst","__parse","TypeError","defineProperty","memoizedDefaultLocale","enumerable","configurable","percent","short","medium","long","full"],"mappings":"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","file":"vendors~inventory-compliance~inventory-vuln.593199280baca2fdb1bc.js","sourcesContent":["/*\nHTML escaping is the same as React's\n(on purpose.) Therefore, it has the following Copyright and Licensing:\n\nCopyright 2013-2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the LICENSE\nfile in the root directory of React's source tree.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { IntlMessageFormat } from 'intl-messageformat';\nimport * as memoize from 'fast-memoize';\nimport { invariant } from '@formatjs/intl-utils';\nimport { UnsupportedFormatterError } from './error';\nexport function filterProps(props, whitelist, defaults) {\n    if (defaults === void 0) { defaults = {}; }\n    return whitelist.reduce(function (filtered, name) {\n        if (name in props) {\n            filtered[name] = props[name];\n        }\n        else if (name in defaults) {\n            filtered[name] = defaults[name];\n        }\n        return filtered;\n    }, {});\n}\nexport function invariantIntlContext(intl) {\n    invariant(intl, '[React Intl] Could not find required `intl` object. ' +\n        '<IntlProvider> needs to exist in the component ancestry.');\n}\nexport var defaultErrorHandler = function (error) {\n    if (process.env.NODE_ENV !== 'production') {\n        console.error(error);\n    }\n};\nexport var DEFAULT_INTL_CONFIG = {\n    formats: {},\n    messages: {},\n    timeZone: undefined,\n    textComponent: React.Fragment,\n    defaultLocale: 'en',\n    defaultFormats: {},\n    onError: defaultErrorHandler,\n};\nexport function createIntlCache() {\n    return {\n        dateTime: {},\n        number: {},\n        message: {},\n        relativeTime: {},\n        pluralRules: {},\n        list: {},\n        displayNames: {},\n    };\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\n/**\n * Create intl formatters and populate cache\n * @param cache explicit cache to prevent leaking memory\n */\nexport function createFormatters(cache) {\n    if (cache === void 0) { cache = createIntlCache(); }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    var ListFormat = Intl.ListFormat;\n    var DisplayNames = Intl.DisplayNames;\n    var getDateTimeFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.dateTime),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getNumberFormat = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.number),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    var getPluralRules = memoizeIntl(function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n    }, {\n        cache: createFastMemoizeCache(cache.pluralRules),\n        strategy: memoizeIntl.strategies.variadic,\n    });\n    return {\n        getDateTimeFormat: getDateTimeFormat,\n        getNumberFormat: getNumberFormat,\n        getMessageFormat: memoizeIntl(function (message, locales, overrideFormats, opts) {\n            return new IntlMessageFormat(message, locales, overrideFormats, __assign({ formatters: {\n                    getNumberFormat: getNumberFormat,\n                    getDateTimeFormat: getDateTimeFormat,\n                    getPluralRules: getPluralRules,\n                } }, (opts || {})));\n        }, {\n            cache: createFastMemoizeCache(cache.message),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getRelativeTimeFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (RelativeTimeFormat.bind.apply(RelativeTimeFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.relativeTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: getPluralRules,\n        getListFormat: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (ListFormat.bind.apply(ListFormat, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.list),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDisplayNames: memoizeIntl(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new (DisplayNames.bind.apply(DisplayNames, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.displayNames),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nexport function getNamedFormat(formats, type, name, onError) {\n    var formatType = formats && formats[type];\n    var format;\n    if (formatType) {\n        format = formatType[name];\n    }\n    if (format) {\n        return format;\n    }\n    onError(new UnsupportedFormatterError(\"No \" + type + \" format named: \" + name));\n}\n/**\n * Takes a `formatXMLElementFn`, and composes it in function, which passes\n * argument `parts` through, assigning unique key to each part, to prevent\n * \"Each child in a list should have a unique \"key\"\" React error.\n * @param formatXMLElementFn\n */\nexport function assignUniqueKeysToParts(formatXMLElementFn) {\n    return function (parts) {\n        // eslint-disable-next-line prefer-rest-params\n        return formatXMLElementFn(React.Children.toArray(parts));\n    };\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ReactIntlErrorCode;\n(function (ReactIntlErrorCode) {\n    ReactIntlErrorCode[\"FORMAT_ERROR\"] = \"FORMAT_ERROR\";\n    ReactIntlErrorCode[\"UNSUPPORTED_FORMATTER\"] = \"UNSUPPORTED_FORMATTER\";\n    ReactIntlErrorCode[\"INVALID_CONFIG\"] = \"INVALID_CONFIG\";\n    ReactIntlErrorCode[\"MISSING_DATA\"] = \"MISSING_DATA\";\n    ReactIntlErrorCode[\"MISSING_TRANSLATION\"] = \"MISSING_TRANSLATION\";\n})(ReactIntlErrorCode || (ReactIntlErrorCode = {}));\nvar ReactIntlError = /** @class */ (function (_super) {\n    __extends(ReactIntlError, _super);\n    function ReactIntlError(code, message, exception) {\n        var _this = _super.call(this, \"[React Intl Error \" + code + \"] \" + message + \" \\n\" + (exception ? \"\\n\" + exception.message + \"\\n\" + exception.stack : '')) || this;\n        _this.code = code;\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(_this, ReactIntlError);\n        }\n        return _this;\n    }\n    return ReactIntlError;\n}(Error));\nexport { ReactIntlError };\nvar UnsupportedFormatterError = /** @class */ (function (_super) {\n    __extends(UnsupportedFormatterError, _super);\n    function UnsupportedFormatterError(message, exception) {\n        return _super.call(this, \"UNSUPPORTED_FORMATTER\" /* UNSUPPORTED_FORMATTER */, message, exception) || this;\n    }\n    return UnsupportedFormatterError;\n}(ReactIntlError));\nexport { UnsupportedFormatterError };\nvar InvalidConfigError = /** @class */ (function (_super) {\n    __extends(InvalidConfigError, _super);\n    function InvalidConfigError(message, exception) {\n        return _super.call(this, \"INVALID_CONFIG\" /* INVALID_CONFIG */, message, exception) || this;\n    }\n    return InvalidConfigError;\n}(ReactIntlError));\nexport { InvalidConfigError };\nvar MissingDataError = /** @class */ (function (_super) {\n    __extends(MissingDataError, _super);\n    function MissingDataError(message, exception) {\n        return _super.call(this, \"MISSING_DATA\" /* MISSING_DATA */, message, exception) || this;\n    }\n    return MissingDataError;\n}(ReactIntlError));\nexport { MissingDataError };\nvar MessageFormatError = /** @class */ (function (_super) {\n    __extends(MessageFormatError, _super);\n    function MessageFormatError(message, locale, descriptor, exception) {\n        var _this = _super.call(this, \"FORMAT_ERROR\" /* FORMAT_ERROR */, message + \" \\nLocale: \" + locale + \"\\nMessageID: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.id) + \"\\nDefault Message: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.defaultMessage) + \"\\nDescription: \" + (descriptor === null || descriptor === void 0 ? void 0 : descriptor.description) + \" \\n\", exception) || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MessageFormatError;\n}(ReactIntlError));\nexport { MessageFormatError };\nvar MissingTranslationError = /** @class */ (function (_super) {\n    __extends(MissingTranslationError, _super);\n    function MissingTranslationError(descriptor, locale) {\n        var _this = _super.call(this, \"MISSING_TRANSLATION\" /* MISSING_TRANSLATION */, \"Missing message: \\\"\" + descriptor.id + \"\\\" for locale \\\"\" + locale + \"\\\", using \" + (descriptor.defaultMessage ? 'default message' : 'id') + \" as fallback.\") || this;\n        _this.descriptor = descriptor;\n        return _this;\n    }\n    return MissingTranslationError;\n}(ReactIntlError));\nexport { MissingTranslationError };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport * as hoistNonReactStatics_ from 'hoist-non-react-statics';\n// Since rollup cannot deal with namespace being a function,\n// this is to interop with TypeScript since `invariant`\n// does not export a default\n// https://github.com/rollup/rollup/issues/1267\nvar hoistNonReactStatics = hoistNonReactStatics_.default || hoistNonReactStatics_;\nimport { invariantIntlContext } from '../utils';\nfunction getDisplayName(Component) {\n    return Component.displayName || Component.name || 'Component';\n}\n// TODO: We should provide initial value here\nvar IntlContext = React.createContext(null);\nvar IntlConsumer = IntlContext.Consumer, IntlProvider = IntlContext.Provider;\nexport var Provider = IntlProvider;\nexport var Context = IntlContext;\nexport default function injectIntl(WrappedComponent, options) {\n    var _a = options || {}, _b = _a.intlPropName, intlPropName = _b === void 0 ? 'intl' : _b, _c = _a.forwardRef, forwardRef = _c === void 0 ? false : _c, _d = _a.enforceContext, enforceContext = _d === void 0 ? true : _d;\n    var WithIntl = function (props) { return (React.createElement(IntlConsumer, null, function (intl) {\n        var _a;\n        if (enforceContext) {\n            invariantIntlContext(intl);\n        }\n        var intlProp = (_a = {}, _a[intlPropName] = intl, _a);\n        return (React.createElement(WrappedComponent, __assign({}, props, intlProp, { ref: forwardRef ? props.forwardedRef : null })));\n    })); };\n    WithIntl.displayName = \"injectIntl(\" + getDisplayName(WrappedComponent) + \")\";\n    WithIntl.WrappedComponent = WrappedComponent;\n    if (forwardRef) {\n        return hoistNonReactStatics(React.forwardRef(function (props, ref) { return (React.createElement(WithIntl, __assign({}, props, { forwardedRef: ref }))); }), WrappedComponent);\n    }\n    return hoistNonReactStatics(WithIntl, WrappedComponent);\n}\n","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","import { createFormattedComponent, createFormattedDateTimePartsComponent, } from './src/components/createFormattedComponent';\nexport function defineMessages(msgs) {\n    return msgs;\n}\nexport function defineMessage(msg) {\n    return msg;\n}\nexport { default as injectIntl, Provider as RawIntlProvider, Context as IntlContext, } from './src/components/injectIntl';\nexport { default as useIntl } from './src/components/useIntl';\nexport { default as IntlProvider, createIntl } from './src/components/provider';\n// IMPORTANT: Explicit here to prevent api-extractor from outputing `import('./src/types').CustomFormatConfig`\nexport var FormattedDate = createFormattedComponent('formatDate');\nexport var FormattedTime = createFormattedComponent('formatTime');\nexport var FormattedNumber = createFormattedComponent('formatNumber');\nexport var FormattedList = createFormattedComponent('formatList');\nexport var FormattedDisplayName = createFormattedComponent('formatDisplayName');\nexport var FormattedDateParts = createFormattedDateTimePartsComponent('formatDate');\nexport var FormattedTimeParts = createFormattedDateTimePartsComponent('formatTime');\nexport { FormattedNumberParts } from './src/components/createFormattedComponent';\nexport { default as FormattedRelativeTime } from './src/components/relative';\nexport { default as FormattedPlural } from './src/components/plural';\nexport { default as FormattedMessage } from './src/components/message';\nexport { createIntlCache } from './src/utils';\nexport * from './src/error';\n","export var TYPE;\n(function (TYPE) {\n    /**\n     * Raw text\n     */\n    TYPE[TYPE[\"literal\"] = 0] = \"literal\";\n    /**\n     * Variable w/o any format, e.g `var` in `this is a {var}`\n     */\n    TYPE[TYPE[\"argument\"] = 1] = \"argument\";\n    /**\n     * Variable w/ number format\n     */\n    TYPE[TYPE[\"number\"] = 2] = \"number\";\n    /**\n     * Variable w/ date format\n     */\n    TYPE[TYPE[\"date\"] = 3] = \"date\";\n    /**\n     * Variable w/ time format\n     */\n    TYPE[TYPE[\"time\"] = 4] = \"time\";\n    /**\n     * Variable w/ select format\n     */\n    TYPE[TYPE[\"select\"] = 5] = \"select\";\n    /**\n     * Variable w/ plural format\n     */\n    TYPE[TYPE[\"plural\"] = 6] = \"plural\";\n    /**\n     * Only possible within plural argument.\n     * This is the `#` symbol that will be substituted with the count.\n     */\n    TYPE[TYPE[\"pound\"] = 7] = \"pound\";\n    /**\n     * XML-like tag\n     */\n    TYPE[TYPE[\"tag\"] = 8] = \"tag\";\n})(TYPE || (TYPE = {}));\nexport var SKELETON_TYPE;\n(function (SKELETON_TYPE) {\n    SKELETON_TYPE[SKELETON_TYPE[\"number\"] = 0] = \"number\";\n    SKELETON_TYPE[SKELETON_TYPE[\"dateTime\"] = 1] = \"dateTime\";\n})(SKELETON_TYPE || (SKELETON_TYPE = {}));\n/**\n * Type Guards\n */\nexport function isLiteralElement(el) {\n    return el.type === TYPE.literal;\n}\nexport function isArgumentElement(el) {\n    return el.type === TYPE.argument;\n}\nexport function isNumberElement(el) {\n    return el.type === TYPE.number;\n}\nexport function isDateElement(el) {\n    return el.type === TYPE.date;\n}\nexport function isTimeElement(el) {\n    return el.type === TYPE.time;\n}\nexport function isSelectElement(el) {\n    return el.type === TYPE.select;\n}\nexport function isPluralElement(el) {\n    return el.type === TYPE.plural;\n}\nexport function isPoundElement(el) {\n    return el.type === TYPE.pound;\n}\nexport function isTagElement(el) {\n    return el.type === TYPE.tag;\n}\nexport function isNumberSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 0 /* number */);\n}\nexport function isDateTimeSkeleton(el) {\n    return !!(el && typeof el === 'object' && el.type === 1 /* dateTime */);\n}\nexport function createLiteralElement(value) {\n    return {\n        type: TYPE.literal,\n        value: value,\n    };\n}\nexport function createNumberElement(value, style) {\n    return {\n        type: TYPE.number,\n        value: value,\n        style: style,\n    };\n}\n","// @ts-nocheck\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { TYPE, } from './types';\nvar SyntaxError = /** @class */ (function (_super) {\n    __extends(SyntaxError, _super);\n    function SyntaxError(message, expected, found, location) {\n        var _this = _super.call(this) || this;\n        _this.message = message;\n        _this.expected = expected;\n        _this.found = found;\n        _this.location = location;\n        _this.name = \"SyntaxError\";\n        if (typeof Error.captureStackTrace === \"function\") {\n            Error.captureStackTrace(_this, SyntaxError);\n        }\n        return _this;\n    }\n    SyntaxError.buildMessage = function (expected, found) {\n        function hex(ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        }\n        function literalEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\"/g, \"\\\\\\\"\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function classEscape(s) {\n            return s\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\]/g, \"\\\\]\")\n                .replace(/\\^/g, \"\\\\^\")\n                .replace(/-/g, \"\\\\-\")\n                .replace(/\\0/g, \"\\\\0\")\n                .replace(/\\t/g, \"\\\\t\")\n                .replace(/\\n/g, \"\\\\n\")\n                .replace(/\\r/g, \"\\\\r\")\n                .replace(/[\\x00-\\x0F]/g, function (ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function (ch) { return \"\\\\x\" + hex(ch); });\n        }\n        function describeExpectation(expectation) {\n            switch (expectation.type) {\n                case \"literal\":\n                    return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n                case \"class\":\n                    var escapedParts = expectation.parts.map(function (part) {\n                        return Array.isArray(part)\n                            ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n                            : classEscape(part);\n                    });\n                    return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n                case \"any\":\n                    return \"any character\";\n                case \"end\":\n                    return \"end of input\";\n                case \"other\":\n                    return expectation.description;\n            }\n        }\n        function describeExpected(expected1) {\n            var descriptions = expected1.map(describeExpectation);\n            var i;\n            var j;\n            descriptions.sort();\n            if (descriptions.length > 0) {\n                for (i = 1, j = 1; i < descriptions.length; i++) {\n                    if (descriptions[i - 1] !== descriptions[i]) {\n                        descriptions[j] = descriptions[i];\n                        j++;\n                    }\n                }\n                descriptions.length = j;\n            }\n            switch (descriptions.length) {\n                case 1:\n                    return descriptions[0];\n                case 2:\n                    return descriptions[0] + \" or \" + descriptions[1];\n                default:\n                    return descriptions.slice(0, -1).join(\", \")\n                        + \", or \"\n                        + descriptions[descriptions.length - 1];\n            }\n        }\n        function describeFound(found1) {\n            return found1 ? \"\\\"\" + literalEscape(found1) + \"\\\"\" : \"end of input\";\n        }\n        return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n    };\n    return SyntaxError;\n}(Error));\nexport { SyntaxError };\nfunction peg$parse(input, options) {\n    options = options !== undefined ? options : {};\n    var peg$FAILED = {};\n    var peg$startRuleFunctions = { start: peg$parsestart };\n    var peg$startRuleFunction = peg$parsestart;\n    var peg$c0 = function () { return !ignoreTag; };\n    var peg$c1 = function (x) { return x; };\n    var peg$c2 = function () { return ignoreTag; };\n    var peg$c3 = \"<\";\n    var peg$c4 = peg$literalExpectation(\"<\", false);\n    var peg$c5 = function (parts) {\n        return parts.join('');\n    };\n    var peg$c6 = function () { return '<'; };\n    var peg$c7 = function (messageText) {\n        return __assign({ type: TYPE.literal, value: messageText }, insertLocation());\n    };\n    var peg$c8 = \"#\";\n    var peg$c9 = peg$literalExpectation(\"#\", false);\n    var peg$c10 = function () {\n        return __assign({ type: TYPE.pound }, insertLocation());\n    };\n    var peg$c11 = peg$otherExpectation(\"tagElement\");\n    var peg$c12 = function (open, children, close) {\n        if (open !== close) {\n            error(\"Mismatch tag \\\"\" + open + \"\\\" !== \\\"\" + close + \"\\\"\", location());\n        }\n        return __assign({ type: TYPE.tag, value: open, children: children }, insertLocation());\n    };\n    var peg$c13 = \"/>\";\n    var peg$c14 = peg$literalExpectation(\"/>\", false);\n    var peg$c15 = function (value) {\n        return __assign({ type: TYPE.literal, value: value.join('') }, insertLocation());\n    };\n    var peg$c16 = \">\";\n    var peg$c17 = peg$literalExpectation(\">\", false);\n    var peg$c18 = function (tag) { return tag; };\n    var peg$c19 = \"</\";\n    var peg$c20 = peg$literalExpectation(\"</\", false);\n    var peg$c21 = peg$otherExpectation(\"argumentElement\");\n    var peg$c22 = \"{\";\n    var peg$c23 = peg$literalExpectation(\"{\", false);\n    var peg$c24 = \"}\";\n    var peg$c25 = peg$literalExpectation(\"}\", false);\n    var peg$c26 = function (value) {\n        return __assign({ type: TYPE.argument, value: value }, insertLocation());\n    };\n    var peg$c27 = peg$otherExpectation(\"numberSkeletonId\");\n    var peg$c28 = /^['\\/{}]/;\n    var peg$c29 = peg$classExpectation([\"'\", \"/\", \"{\", \"}\"], false, false);\n    var peg$c30 = peg$anyExpectation();\n    var peg$c31 = peg$otherExpectation(\"numberSkeletonTokenOption\");\n    var peg$c32 = \"/\";\n    var peg$c33 = peg$literalExpectation(\"/\", false);\n    var peg$c34 = function (option) { return option; };\n    var peg$c35 = peg$otherExpectation(\"numberSkeletonToken\");\n    var peg$c36 = function (stem, options) {\n        return { stem: stem, options: options };\n    };\n    var peg$c37 = function (tokens) {\n        return __assign({ type: 0 /* number */, tokens: tokens }, insertLocation());\n    };\n    var peg$c38 = \"::\";\n    var peg$c39 = peg$literalExpectation(\"::\", false);\n    var peg$c40 = function (skeleton) { return skeleton; };\n    var peg$c41 = function () { messageCtx.push('numberArgStyle'); return true; };\n    var peg$c42 = function (style) {\n        messageCtx.pop();\n        return style.replace(/\\s*$/, '');\n    };\n    var peg$c43 = \",\";\n    var peg$c44 = peg$literalExpectation(\",\", false);\n    var peg$c45 = \"number\";\n    var peg$c46 = peg$literalExpectation(\"number\", false);\n    var peg$c47 = function (value, type, style) {\n        return __assign({ type: type === 'number' ? TYPE.number : type === 'date' ? TYPE.date : TYPE.time, style: style && style[2], value: value }, insertLocation());\n    };\n    var peg$c48 = \"'\";\n    var peg$c49 = peg$literalExpectation(\"'\", false);\n    var peg$c50 = /^[^']/;\n    var peg$c51 = peg$classExpectation([\"'\"], true, false);\n    var peg$c52 = /^[^a-zA-Z'{}]/;\n    var peg$c53 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"'\", \"{\", \"}\"], true, false);\n    var peg$c54 = /^[a-zA-Z]/;\n    var peg$c55 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"]], false, false);\n    var peg$c56 = function (pattern) {\n        return __assign({ type: 1 /* dateTime */, pattern: pattern }, insertLocation());\n    };\n    var peg$c57 = function () { messageCtx.push('dateOrTimeArgStyle'); return true; };\n    var peg$c58 = \"date\";\n    var peg$c59 = peg$literalExpectation(\"date\", false);\n    var peg$c60 = \"time\";\n    var peg$c61 = peg$literalExpectation(\"time\", false);\n    var peg$c62 = \"plural\";\n    var peg$c63 = peg$literalExpectation(\"plural\", false);\n    var peg$c64 = \"selectordinal\";\n    var peg$c65 = peg$literalExpectation(\"selectordinal\", false);\n    var peg$c66 = \"offset:\";\n    var peg$c67 = peg$literalExpectation(\"offset:\", false);\n    var peg$c68 = function (value, pluralType, offset, options) {\n        return __assign({ type: TYPE.plural, pluralType: pluralType === 'plural' ? 'cardinal' : 'ordinal', value: value, offset: offset ? offset[2] : 0, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in plural element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c69 = \"select\";\n    var peg$c70 = peg$literalExpectation(\"select\", false);\n    var peg$c71 = function (value, options) {\n        return __assign({ type: TYPE.select, value: value, options: options.reduce(function (all, _a) {\n                var id = _a.id, value = _a.value, optionLocation = _a.location;\n                if (id in all) {\n                    error(\"Duplicate option \\\"\" + id + \"\\\" in select element: \\\"\" + text() + \"\\\"\", location());\n                }\n                all[id] = {\n                    value: value,\n                    location: optionLocation\n                };\n                return all;\n            }, {}) }, insertLocation());\n    };\n    var peg$c72 = \"=\";\n    var peg$c73 = peg$literalExpectation(\"=\", false);\n    var peg$c74 = function (id) { messageCtx.push('select'); return true; };\n    var peg$c75 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c76 = function (id) { messageCtx.push('plural'); return true; };\n    var peg$c77 = function (id, value) {\n        messageCtx.pop();\n        return __assign({ id: id,\n            value: value }, insertLocation());\n    };\n    var peg$c78 = peg$otherExpectation(\"whitespace\");\n    var peg$c79 = /^[\\t-\\r \\x85\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n    var peg$c80 = peg$classExpectation([[\"\\t\", \"\\r\"], \" \", \"\\x85\", \"\\xA0\", \"\\u1680\", [\"\\u2000\", \"\\u200A\"], \"\\u2028\", \"\\u2029\", \"\\u202F\", \"\\u205F\", \"\\u3000\"], false, false);\n    var peg$c81 = peg$otherExpectation(\"syntax pattern\");\n    var peg$c82 = /^[!-\\/:-@[-\\^`{-~\\xA1-\\xA7\\xA9\\xAB\\xAC\\xAE\\xB0\\xB1\\xB6\\xBB\\xBF\\xD7\\xF7\\u2010-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u245F\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3020\\u3030\\uFD3E\\uFD3F\\uFE45\\uFE46]/;\n    var peg$c83 = peg$classExpectation([[\"!\", \"/\"], [\":\", \"@\"], [\"[\", \"^\"], \"`\", [\"{\", \"~\"], [\"\\xA1\", \"\\xA7\"], \"\\xA9\", \"\\xAB\", \"\\xAC\", \"\\xAE\", \"\\xB0\", \"\\xB1\", \"\\xB6\", \"\\xBB\", \"\\xBF\", \"\\xD7\", \"\\xF7\", [\"\\u2010\", \"\\u2027\"], [\"\\u2030\", \"\\u203E\"], [\"\\u2041\", \"\\u2053\"], [\"\\u2055\", \"\\u205E\"], [\"\\u2190\", \"\\u245F\"], [\"\\u2500\", \"\\u2775\"], [\"\\u2794\", \"\\u2BFF\"], [\"\\u2E00\", \"\\u2E7F\"], [\"\\u3001\", \"\\u3003\"], [\"\\u3008\", \"\\u3020\"], \"\\u3030\", \"\\uFD3E\", \"\\uFD3F\", \"\\uFE45\", \"\\uFE46\"], false, false);\n    var peg$c84 = peg$otherExpectation(\"optional whitespace\");\n    var peg$c85 = peg$otherExpectation(\"number\");\n    var peg$c86 = \"-\";\n    var peg$c87 = peg$literalExpectation(\"-\", false);\n    var peg$c88 = function (negative, num) {\n        return num\n            ? negative\n                ? -num\n                : num\n            : 0;\n    };\n    var peg$c89 = peg$otherExpectation(\"apostrophe\");\n    var peg$c90 = peg$otherExpectation(\"double apostrophes\");\n    var peg$c91 = \"''\";\n    var peg$c92 = peg$literalExpectation(\"''\", false);\n    var peg$c93 = function () { return \"'\"; };\n    var peg$c94 = function (escapedChar, quotedChars) {\n        return escapedChar + quotedChars.replace(\"''\", \"'\");\n    };\n    var peg$c95 = function (x) {\n        return (x !== '<' &&\n            x !== '{' &&\n            !(isInPluralOption() && x === '#') &&\n            !(isNestedMessageText() && x === '}'));\n    };\n    var peg$c96 = \"\\n\";\n    var peg$c97 = peg$literalExpectation(\"\\n\", false);\n    var peg$c98 = function (x) {\n        return x === '<' || x === '>' || x === '{' || x === '}' || (isInPluralOption() && x === '#');\n    };\n    var peg$c99 = peg$otherExpectation(\"argNameOrNumber\");\n    var peg$c100 = peg$otherExpectation(\"validTag\");\n    var peg$c101 = peg$otherExpectation(\"argNumber\");\n    var peg$c102 = \"0\";\n    var peg$c103 = peg$literalExpectation(\"0\", false);\n    var peg$c104 = function () { return 0; };\n    var peg$c105 = /^[1-9]/;\n    var peg$c106 = peg$classExpectation([[\"1\", \"9\"]], false, false);\n    var peg$c107 = /^[0-9]/;\n    var peg$c108 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n    var peg$c109 = function (digits) {\n        return parseInt(digits.join(''), 10);\n    };\n    var peg$c110 = peg$otherExpectation(\"argName\");\n    var peg$c111 = peg$otherExpectation(\"tagName\");\n    var peg$currPos = 0;\n    var peg$savedPos = 0;\n    var peg$posDetailsCache = [{ line: 1, column: 1 }];\n    var peg$maxFailPos = 0;\n    var peg$maxFailExpected = [];\n    var peg$silentFails = 0;\n    var peg$result;\n    if (options.startRule !== undefined) {\n        if (!(options.startRule in peg$startRuleFunctions)) {\n            throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n        }\n        peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n    function text() {\n        return input.substring(peg$savedPos, peg$currPos);\n    }\n    function location() {\n        return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n    function expected(description, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildStructuredError([peg$otherExpectation(description)], input.substring(peg$savedPos, peg$currPos), location1);\n    }\n    function error(message, location1) {\n        location1 = location1 !== undefined\n            ? location1\n            : peg$computeLocation(peg$savedPos, peg$currPos);\n        throw peg$buildSimpleError(message, location1);\n    }\n    function peg$literalExpectation(text1, ignoreCase) {\n        return { type: \"literal\", text: text1, ignoreCase: ignoreCase };\n    }\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n        return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n    function peg$anyExpectation() {\n        return { type: \"any\" };\n    }\n    function peg$endExpectation() {\n        return { type: \"end\" };\n    }\n    function peg$otherExpectation(description) {\n        return { type: \"other\", description: description };\n    }\n    function peg$computePosDetails(pos) {\n        var details = peg$posDetailsCache[pos];\n        var p;\n        if (details) {\n            return details;\n        }\n        else {\n            p = pos - 1;\n            while (!peg$posDetailsCache[p]) {\n                p--;\n            }\n            details = peg$posDetailsCache[p];\n            details = {\n                line: details.line,\n                column: details.column\n            };\n            while (p < pos) {\n                if (input.charCodeAt(p) === 10) {\n                    details.line++;\n                    details.column = 1;\n                }\n                else {\n                    details.column++;\n                }\n                p++;\n            }\n            peg$posDetailsCache[pos] = details;\n            return details;\n        }\n    }\n    function peg$computeLocation(startPos, endPos) {\n        var startPosDetails = peg$computePosDetails(startPos);\n        var endPosDetails = peg$computePosDetails(endPos);\n        return {\n            start: {\n                offset: startPos,\n                line: startPosDetails.line,\n                column: startPosDetails.column\n            },\n            end: {\n                offset: endPos,\n                line: endPosDetails.line,\n                column: endPosDetails.column\n            }\n        };\n    }\n    function peg$fail(expected1) {\n        if (peg$currPos < peg$maxFailPos) {\n            return;\n        }\n        if (peg$currPos > peg$maxFailPos) {\n            peg$maxFailPos = peg$currPos;\n            peg$maxFailExpected = [];\n        }\n        peg$maxFailExpected.push(expected1);\n    }\n    function peg$buildSimpleError(message, location1) {\n        return new SyntaxError(message, [], \"\", location1);\n    }\n    function peg$buildStructuredError(expected1, found, location1) {\n        return new SyntaxError(SyntaxError.buildMessage(expected1, found), expected1, found, location1);\n    }\n    function peg$parsestart() {\n        var s0;\n        s0 = peg$parsemessage();\n        return s0;\n    }\n    function peg$parsemessage() {\n        var s0, s1;\n        s0 = [];\n        s1 = peg$parsemessageElement();\n        while (s1 !== peg$FAILED) {\n            s0.push(s1);\n            s1 = peg$parsemessageElement();\n        }\n        return s0;\n    }\n    function peg$parsemessageElement() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c0();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsetagElement();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c1(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseliteralElement();\n            if (s0 === peg$FAILED) {\n                s0 = peg$parseargumentElement();\n                if (s0 === peg$FAILED) {\n                    s0 = peg$parsesimpleFormatElement();\n                    if (s0 === peg$FAILED) {\n                        s0 = peg$parsepluralElement();\n                        if (s0 === peg$FAILED) {\n                            s0 = peg$parseselectElement();\n                            if (s0 === peg$FAILED) {\n                                s0 = peg$parsepoundElement();\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return s0;\n    }\n    function peg$parsemessageText() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        peg$savedPos = peg$currPos;\n        s1 = peg$c2();\n        if (s1) {\n            s1 = undefined;\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                s3 = peg$parsequotedString();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parseunquotedString();\n                    if (s3 === peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 60) {\n                            s3 = peg$c3;\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c4);\n                            }\n                        }\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        s3 = peg$parsequotedString();\n                        if (s3 === peg$FAILED) {\n                            s3 = peg$parseunquotedString();\n                            if (s3 === peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 60) {\n                                    s3 = peg$c3;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s3 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c4);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = [];\n            s2 = peg$parsedoubleApostrophes();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parsequotedString();\n                if (s2 === peg$FAILED) {\n                    s2 = peg$parseunquotedString();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsenonTagStartingAngleBracket();\n                    }\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                while (s2 !== peg$FAILED) {\n                    s1.push(s2);\n                    s2 = peg$parsedoubleApostrophes();\n                    if (s2 === peg$FAILED) {\n                        s2 = peg$parsequotedString();\n                        if (s2 === peg$FAILED) {\n                            s2 = peg$parseunquotedString();\n                            if (s2 === peg$FAILED) {\n                                s2 = peg$parsenonTagStartingAngleBracket();\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c5(s1);\n            }\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parsenonTagStartingAngleBracket() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        peg$silentFails++;\n        s2 = peg$parseopeningTag();\n        if (s2 === peg$FAILED) {\n            s2 = peg$parseclosingTag();\n            if (s2 === peg$FAILED) {\n                s2 = peg$parseselfClosingTag();\n            }\n        }\n        peg$silentFails--;\n        if (s2 === peg$FAILED) {\n            s1 = undefined;\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 60) {\n                s2 = peg$c3;\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c4);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c6();\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseliteralElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        s1 = peg$parsemessageText();\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c7(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsepoundElement() {\n        var s0, s1;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n            s1 = peg$c8;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c9);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c10();\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsetagElement() {\n        var s0, s1, s2, s3;\n        peg$silentFails++;\n        s0 = peg$parseselfClosingTag();\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseopeningTag();\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessage();\n                if (s2 !== peg$FAILED) {\n                    s3 = peg$parseclosingTag();\n                    if (s3 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c12(s1, s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c11);\n            }\n        }\n        return s0;\n    }\n    function peg$parseselfClosingTag() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s2 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsevalidTag();\n            if (s3 !== peg$FAILED) {\n                s4 = peg$parse_();\n                if (s4 !== peg$FAILED) {\n                    if (input.substr(peg$currPos, 2) === peg$c13) {\n                        s5 = peg$c13;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c14);\n                        }\n                    }\n                    if (s5 !== peg$FAILED) {\n                        s2 = [s2, s3, s4, s5];\n                        s1 = s2;\n                    }\n                    else {\n                        peg$currPos = s1;\n                        s1 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parseopeningTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 60) {\n            s1 = peg$c3;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c4);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseclosingTag() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c19) {\n            s1 = peg$c19;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c20);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsevalidTag();\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 62) {\n                    s3 = peg$c16;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c17);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c18(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseargumentElement() {\n        var s0, s1, s2, s3, s4, s5;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 125) {\n                            s5 = peg$c24;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c25);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s1 = peg$c26(s3);\n                            s0 = s1;\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c21);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonId() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            if (peg$c28.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c29);\n                }\n            }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    if (peg$c28.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c29);\n                        }\n                    }\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c27);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonTokenOption() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 47) {\n            s1 = peg$c32;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c33);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c31);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeletonToken() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeletonId();\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                s4 = peg$parsenumberSkeletonTokenOption();\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    s4 = peg$parsenumberSkeletonTokenOption();\n                }\n                if (s3 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c36(s2, s3);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c35);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberSkeleton() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsenumberSkeletonToken();\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$parsenumberSkeletonToken();\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c37(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsenumberArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsenumberSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c41();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumberFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c45) {\n                                    s7 = peg$c45;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c46);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsenumberArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonLiteral() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = [];\n            s3 = peg$parsedoubleApostrophes();\n            if (s3 === peg$FAILED) {\n                if (peg$c50.test(input.charAt(peg$currPos))) {\n                    s3 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c51);\n                    }\n                }\n            }\n            if (s3 !== peg$FAILED) {\n                while (s3 !== peg$FAILED) {\n                    s2.push(s3);\n                    s3 = peg$parsedoubleApostrophes();\n                    if (s3 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s3 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s3 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s2 = peg$FAILED;\n            }\n            if (s2 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 39) {\n                    s3 = peg$c48;\n                    peg$currPos++;\n                }\n                else {\n                    s3 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c49);\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s1 = [s1, s2, s3];\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = [];\n            s1 = peg$parsedoubleApostrophes();\n            if (s1 === peg$FAILED) {\n                if (peg$c52.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c53);\n                    }\n                }\n            }\n            if (s1 !== peg$FAILED) {\n                while (s1 !== peg$FAILED) {\n                    s0.push(s1);\n                    s1 = peg$parsedoubleApostrophes();\n                    if (s1 === peg$FAILED) {\n                        if (peg$c52.test(input.charAt(peg$currPos))) {\n                            s1 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s1 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c53);\n                            }\n                        }\n                    }\n                }\n            }\n            else {\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeletonPattern() {\n        var s0, s1;\n        s0 = [];\n        if (peg$c54.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c55);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            while (s1 !== peg$FAILED) {\n                s0.push(s1);\n                if (peg$c54.test(input.charAt(peg$currPos))) {\n                    s1 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s1 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c55);\n                    }\n                }\n            }\n        }\n        else {\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsedateTimeSkeleton() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parsedateTimeSkeletonLiteral();\n        if (s3 === peg$FAILED) {\n            s3 = peg$parsedateTimeSkeletonPattern();\n        }\n        if (s3 !== peg$FAILED) {\n            while (s3 !== peg$FAILED) {\n                s2.push(s3);\n                s3 = peg$parsedateTimeSkeletonLiteral();\n                if (s3 === peg$FAILED) {\n                    s3 = peg$parsedateTimeSkeletonPattern();\n                }\n            }\n        }\n        else {\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            s1 = input.substring(s1, peg$currPos);\n        }\n        else {\n            s1 = s2;\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c56(s1);\n        }\n        s0 = s1;\n        return s0;\n    }\n    function peg$parsedateOrTimeArgStyle() {\n        var s0, s1, s2;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c38) {\n            s1 = peg$c38;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c39);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsedateTimeSkeleton();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c40(s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            peg$savedPos = peg$currPos;\n            s1 = peg$c57();\n            if (s1) {\n                s1 = undefined;\n            }\n            else {\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                s2 = peg$parsemessageText();\n                if (s2 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s1 = peg$c42(s2);\n                    s0 = s1;\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        return s0;\n    }\n    function peg$parsedateOrTimeFormatElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 4) === peg$c58) {\n                                    s7 = peg$c58;\n                                    peg$currPos += 4;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c59);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 4) === peg$c60) {\n                                        s7 = peg$c60;\n                                        peg$currPos += 4;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c61);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        s9 = peg$currPos;\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s10 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s10 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s10 !== peg$FAILED) {\n                                            s11 = peg$parse_();\n                                            if (s11 !== peg$FAILED) {\n                                                s12 = peg$parsedateOrTimeArgStyle();\n                                                if (s12 !== peg$FAILED) {\n                                                    s10 = [s10, s11, s12];\n                                                    s9 = s10;\n                                                }\n                                                else {\n                                                    peg$currPos = s9;\n                                                    s9 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s9;\n                                                s9 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s9;\n                                            s9 = peg$FAILED;\n                                        }\n                                        if (s9 === peg$FAILED) {\n                                            s9 = null;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                    s11 = peg$c24;\n                                                    peg$currPos++;\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c25);\n                                                    }\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    peg$savedPos = s0;\n                                                    s1 = peg$c47(s3, s7, s9);\n                                                    s0 = s1;\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsesimpleFormatElement() {\n        var s0;\n        s0 = peg$parsenumberFormatElement();\n        if (s0 === peg$FAILED) {\n            s0 = peg$parsedateOrTimeFormatElement();\n        }\n        return s0;\n    }\n    function peg$parsepluralElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13, s14, s15;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c62) {\n                                    s7 = peg$c62;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c63);\n                                    }\n                                }\n                                if (s7 === peg$FAILED) {\n                                    if (input.substr(peg$currPos, 13) === peg$c64) {\n                                        s7 = peg$c64;\n                                        peg$currPos += 13;\n                                    }\n                                    else {\n                                        s7 = peg$FAILED;\n                                        if (peg$silentFails === 0) {\n                                            peg$fail(peg$c65);\n                                        }\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = peg$currPos;\n                                                if (input.substr(peg$currPos, 7) === peg$c66) {\n                                                    s12 = peg$c66;\n                                                    peg$currPos += 7;\n                                                }\n                                                else {\n                                                    s12 = peg$FAILED;\n                                                    if (peg$silentFails === 0) {\n                                                        peg$fail(peg$c67);\n                                                    }\n                                                }\n                                                if (s12 !== peg$FAILED) {\n                                                    s13 = peg$parse_();\n                                                    if (s13 !== peg$FAILED) {\n                                                        s14 = peg$parsenumber();\n                                                        if (s14 !== peg$FAILED) {\n                                                            s12 = [s12, s13, s14];\n                                                            s11 = s12;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s11;\n                                                            s11 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s11;\n                                                        s11 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s11;\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 === peg$FAILED) {\n                                                    s11 = null;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        s13 = [];\n                                                        s14 = peg$parsepluralOption();\n                                                        if (s14 !== peg$FAILED) {\n                                                            while (s14 !== peg$FAILED) {\n                                                                s13.push(s14);\n                                                                s14 = peg$parsepluralOption();\n                                                            }\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            s14 = peg$parse_();\n                                                            if (s14 !== peg$FAILED) {\n                                                                if (input.charCodeAt(peg$currPos) === 125) {\n                                                                    s15 = peg$c24;\n                                                                    peg$currPos++;\n                                                                }\n                                                                else {\n                                                                    s15 = peg$FAILED;\n                                                                    if (peg$silentFails === 0) {\n                                                                        peg$fail(peg$c25);\n                                                                    }\n                                                                }\n                                                                if (s15 !== peg$FAILED) {\n                                                                    peg$savedPos = s0;\n                                                                    s1 = peg$c68(s3, s7, s11, s13);\n                                                                    s0 = s1;\n                                                                }\n                                                                else {\n                                                                    peg$currPos = s0;\n                                                                    s0 = peg$FAILED;\n                                                                }\n                                                            }\n                                                            else {\n                                                                peg$currPos = s0;\n                                                                s0 = peg$FAILED;\n                                                            }\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseselectElement() {\n        var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10, s11, s12, s13;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 123) {\n            s1 = peg$c22;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c23);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parse_();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parseargNameOrNumber();\n                if (s3 !== peg$FAILED) {\n                    s4 = peg$parse_();\n                    if (s4 !== peg$FAILED) {\n                        if (input.charCodeAt(peg$currPos) === 44) {\n                            s5 = peg$c43;\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c44);\n                            }\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parse_();\n                            if (s6 !== peg$FAILED) {\n                                if (input.substr(peg$currPos, 6) === peg$c69) {\n                                    s7 = peg$c69;\n                                    peg$currPos += 6;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c70);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    s8 = peg$parse_();\n                                    if (s8 !== peg$FAILED) {\n                                        if (input.charCodeAt(peg$currPos) === 44) {\n                                            s9 = peg$c43;\n                                            peg$currPos++;\n                                        }\n                                        else {\n                                            s9 = peg$FAILED;\n                                            if (peg$silentFails === 0) {\n                                                peg$fail(peg$c44);\n                                            }\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                            s10 = peg$parse_();\n                                            if (s10 !== peg$FAILED) {\n                                                s11 = [];\n                                                s12 = peg$parseselectOption();\n                                                if (s12 !== peg$FAILED) {\n                                                    while (s12 !== peg$FAILED) {\n                                                        s11.push(s12);\n                                                        s12 = peg$parseselectOption();\n                                                    }\n                                                }\n                                                else {\n                                                    s11 = peg$FAILED;\n                                                }\n                                                if (s11 !== peg$FAILED) {\n                                                    s12 = peg$parse_();\n                                                    if (s12 !== peg$FAILED) {\n                                                        if (input.charCodeAt(peg$currPos) === 125) {\n                                                            s13 = peg$c24;\n                                                            peg$currPos++;\n                                                        }\n                                                        else {\n                                                            s13 = peg$FAILED;\n                                                            if (peg$silentFails === 0) {\n                                                                peg$fail(peg$c25);\n                                                            }\n                                                        }\n                                                        if (s13 !== peg$FAILED) {\n                                                            peg$savedPos = s0;\n                                                            s1 = peg$c71(s3, s11);\n                                                            s0 = s1;\n                                                        }\n                                                        else {\n                                                            peg$currPos = s0;\n                                                            s0 = peg$FAILED;\n                                                        }\n                                                    }\n                                                    else {\n                                                        peg$currPos = s0;\n                                                        s0 = peg$FAILED;\n                                                    }\n                                                }\n                                                else {\n                                                    peg$currPos = s0;\n                                                    s0 = peg$FAILED;\n                                                }\n                                            }\n                                            else {\n                                                peg$currPos = s0;\n                                                s0 = peg$FAILED;\n                                            }\n                                        }\n                                        else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                        }\n                                    }\n                                    else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                    }\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralRuleSelectValue() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 61) {\n            s2 = peg$c72;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c73);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            s3 = peg$parsenumber();\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        if (s0 === peg$FAILED) {\n            s0 = peg$parseargName();\n        }\n        return s0;\n    }\n    function peg$parseselectOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargName();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c74(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c75(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsepluralOption() {\n        var s0, s1, s2, s3, s4, s5, s6, s7;\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parsepluralRuleSelectValue();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$parse_();\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 123) {\n                        s4 = peg$c22;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c23);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = peg$currPos;\n                        s5 = peg$c76(s2);\n                        if (s5) {\n                            s5 = undefined;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                        }\n                        if (s5 !== peg$FAILED) {\n                            s6 = peg$parsemessage();\n                            if (s6 !== peg$FAILED) {\n                                if (input.charCodeAt(peg$currPos) === 125) {\n                                    s7 = peg$c24;\n                                    peg$currPos++;\n                                }\n                                else {\n                                    s7 = peg$FAILED;\n                                    if (peg$silentFails === 0) {\n                                        peg$fail(peg$c25);\n                                    }\n                                }\n                                if (s7 !== peg$FAILED) {\n                                    peg$savedPos = s0;\n                                    s1 = peg$c77(s2, s6);\n                                    s0 = s1;\n                                }\n                                else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                }\n                            }\n                            else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                            }\n                        }\n                        else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parsewhiteSpace() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c79.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c80);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c78);\n            }\n        }\n        return s0;\n    }\n    function peg$parsepatternSyntax() {\n        var s0, s1;\n        peg$silentFails++;\n        if (peg$c82.test(input.charAt(peg$currPos))) {\n            s0 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c83);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c81);\n            }\n        }\n        return s0;\n    }\n    function peg$parse_() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$parsewhiteSpace();\n        while (s2 !== peg$FAILED) {\n            s1.push(s2);\n            s2 = peg$parsewhiteSpace();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c84);\n            }\n        }\n        return s0;\n    }\n    function peg$parsenumber() {\n        var s0, s1, s2;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s1 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s1 === peg$FAILED) {\n            s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseargNumber();\n            if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c88(s1, s2);\n                s0 = s1;\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c85);\n            }\n        }\n        return s0;\n    }\n    function peg$parseapostrophe() {\n        var s0, s1;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s0 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c89);\n            }\n        }\n        return s0;\n    }\n    function peg$parsedoubleApostrophes() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.substr(peg$currPos, 2) === peg$c91) {\n            s1 = peg$c91;\n            peg$currPos += 2;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c92);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c93();\n        }\n        s0 = s1;\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c90);\n            }\n        }\n        return s0;\n    }\n    function peg$parsequotedString() {\n        var s0, s1, s2, s3, s4, s5;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n            s1 = peg$c48;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c49);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s2 = peg$parseescapedChar();\n            if (s2 !== peg$FAILED) {\n                s3 = peg$currPos;\n                s4 = [];\n                if (input.substr(peg$currPos, 2) === peg$c91) {\n                    s5 = peg$c91;\n                    peg$currPos += 2;\n                }\n                else {\n                    s5 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c92);\n                    }\n                }\n                if (s5 === peg$FAILED) {\n                    if (peg$c50.test(input.charAt(peg$currPos))) {\n                        s5 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c51);\n                        }\n                    }\n                }\n                while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    if (input.substr(peg$currPos, 2) === peg$c91) {\n                        s5 = peg$c91;\n                        peg$currPos += 2;\n                    }\n                    else {\n                        s5 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c92);\n                        }\n                    }\n                    if (s5 === peg$FAILED) {\n                        if (peg$c50.test(input.charAt(peg$currPos))) {\n                            s5 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s5 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c51);\n                            }\n                        }\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = input.substring(s3, peg$currPos);\n                }\n                else {\n                    s3 = s4;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.charCodeAt(peg$currPos) === 39) {\n                        s4 = peg$c48;\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c49);\n                        }\n                    }\n                    if (s4 === peg$FAILED) {\n                        s4 = null;\n                    }\n                    if (s4 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s1 = peg$c94(s2, s3);\n                        s0 = s1;\n                    }\n                    else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n        }\n        return s0;\n    }\n    function peg$parseunquotedString() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c95(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 10) {\n                s1 = peg$c96;\n                peg$currPos++;\n            }\n            else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c97);\n                }\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseescapedChar() {\n        var s0, s1, s2, s3;\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        if (input.length > peg$currPos) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c30);\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            peg$savedPos = peg$currPos;\n            s3 = peg$c98(s2);\n            if (s3) {\n                s3 = undefined;\n            }\n            else {\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                s2 = [s2, s3];\n                s1 = s2;\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        return s0;\n    }\n    function peg$parseargNameOrNumber() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parseargName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c99);\n            }\n        }\n        return s0;\n    }\n    function peg$parsevalidTag() {\n        var s0, s1;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = peg$parseargNumber();\n        if (s1 === peg$FAILED) {\n            s1 = peg$parsetagName();\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c100);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargNumber() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 48) {\n            s1 = peg$c102;\n            peg$currPos++;\n        }\n        else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c103);\n            }\n        }\n        if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c104();\n        }\n        s0 = s1;\n        if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$currPos;\n            if (peg$c105.test(input.charAt(peg$currPos))) {\n                s2 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c106);\n                }\n            }\n            if (s2 !== peg$FAILED) {\n                s3 = [];\n                if (peg$c107.test(input.charAt(peg$currPos))) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c108);\n                    }\n                }\n                while (s4 !== peg$FAILED) {\n                    s3.push(s4);\n                    if (peg$c107.test(input.charAt(peg$currPos))) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c108);\n                        }\n                    }\n                }\n                if (s3 !== peg$FAILED) {\n                    s2 = [s2, s3];\n                    s1 = s2;\n                }\n                else {\n                    peg$currPos = s1;\n                    s1 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s1;\n                s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c109(s1);\n            }\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c101);\n            }\n        }\n        return s0;\n    }\n    function peg$parseargName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parsewhiteSpace();\n        if (s4 === peg$FAILED) {\n            s4 = peg$parsepatternSyntax();\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n            s3 = undefined;\n        }\n        else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n            }\n            else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) {\n                    peg$fail(peg$c30);\n                }\n            }\n            if (s4 !== peg$FAILED) {\n                s3 = [s3, s4];\n                s2 = s3;\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                s2 = peg$currPos;\n                s3 = peg$currPos;\n                peg$silentFails++;\n                s4 = peg$parsewhiteSpace();\n                if (s4 === peg$FAILED) {\n                    s4 = peg$parsepatternSyntax();\n                }\n                peg$silentFails--;\n                if (s4 === peg$FAILED) {\n                    s3 = undefined;\n                }\n                else {\n                    peg$currPos = s3;\n                    s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                    if (input.length > peg$currPos) {\n                        s4 = input.charAt(peg$currPos);\n                        peg$currPos++;\n                    }\n                    else {\n                        s4 = peg$FAILED;\n                        if (peg$silentFails === 0) {\n                            peg$fail(peg$c30);\n                        }\n                    }\n                    if (s4 !== peg$FAILED) {\n                        s3 = [s3, s4];\n                        s2 = s3;\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c110);\n            }\n        }\n        return s0;\n    }\n    function peg$parsetagName() {\n        var s0, s1, s2, s3, s4;\n        peg$silentFails++;\n        s0 = peg$currPos;\n        s1 = [];\n        if (input.charCodeAt(peg$currPos) === 45) {\n            s2 = peg$c86;\n            peg$currPos++;\n        }\n        else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c87);\n            }\n        }\n        if (s2 === peg$FAILED) {\n            s2 = peg$currPos;\n            s3 = peg$currPos;\n            peg$silentFails++;\n            s4 = peg$parsewhiteSpace();\n            if (s4 === peg$FAILED) {\n                s4 = peg$parsepatternSyntax();\n            }\n            peg$silentFails--;\n            if (s4 === peg$FAILED) {\n                s3 = undefined;\n            }\n            else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                    s4 = input.charAt(peg$currPos);\n                    peg$currPos++;\n                }\n                else {\n                    s4 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c30);\n                    }\n                }\n                if (s4 !== peg$FAILED) {\n                    s3 = [s3, s4];\n                    s2 = s3;\n                }\n                else {\n                    peg$currPos = s2;\n                    s2 = peg$FAILED;\n                }\n            }\n            else {\n                peg$currPos = s2;\n                s2 = peg$FAILED;\n            }\n        }\n        if (s2 !== peg$FAILED) {\n            while (s2 !== peg$FAILED) {\n                s1.push(s2);\n                if (input.charCodeAt(peg$currPos) === 45) {\n                    s2 = peg$c86;\n                    peg$currPos++;\n                }\n                else {\n                    s2 = peg$FAILED;\n                    if (peg$silentFails === 0) {\n                        peg$fail(peg$c87);\n                    }\n                }\n                if (s2 === peg$FAILED) {\n                    s2 = peg$currPos;\n                    s3 = peg$currPos;\n                    peg$silentFails++;\n                    s4 = peg$parsewhiteSpace();\n                    if (s4 === peg$FAILED) {\n                        s4 = peg$parsepatternSyntax();\n                    }\n                    peg$silentFails--;\n                    if (s4 === peg$FAILED) {\n                        s3 = undefined;\n                    }\n                    else {\n                        peg$currPos = s3;\n                        s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                        if (input.length > peg$currPos) {\n                            s4 = input.charAt(peg$currPos);\n                            peg$currPos++;\n                        }\n                        else {\n                            s4 = peg$FAILED;\n                            if (peg$silentFails === 0) {\n                                peg$fail(peg$c30);\n                            }\n                        }\n                        if (s4 !== peg$FAILED) {\n                            s3 = [s3, s4];\n                            s2 = s3;\n                        }\n                        else {\n                            peg$currPos = s2;\n                            s2 = peg$FAILED;\n                        }\n                    }\n                    else {\n                        peg$currPos = s2;\n                        s2 = peg$FAILED;\n                    }\n                }\n            }\n        }\n        else {\n            s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n            s0 = input.substring(s0, peg$currPos);\n        }\n        else {\n            s0 = s1;\n        }\n        peg$silentFails--;\n        if (s0 === peg$FAILED) {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) {\n                peg$fail(peg$c111);\n            }\n        }\n        return s0;\n    }\n    var messageCtx = ['root'];\n    function isNestedMessageText() {\n        return messageCtx.length > 1;\n    }\n    function isInPluralOption() {\n        return messageCtx[messageCtx.length - 1] === 'plural';\n    }\n    function insertLocation() {\n        return options && options.captureLocation ? {\n            location: location()\n        } : {};\n    }\n    var ignoreTag = options && options.ignoreTag;\n    peg$result = peg$startRuleFunction();\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n        return peg$result;\n    }\n    else {\n        if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n            peg$fail(peg$endExpectation());\n        }\n        throw peg$buildStructuredError(peg$maxFailExpected, peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null, peg$maxFailPos < input.length\n            ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n            : peg$computeLocation(peg$maxFailPos, peg$maxFailPos));\n    }\n}\nexport var pegParse = peg$parse;\n","import { pegParse } from './src/parser';\nimport { normalizeHashtagInPlural } from './src/normalize';\nexport * from './src/types';\nexport * from './src/parser';\nexport * from './src/skeleton';\nexport function parse(input, opts) {\n    var els = pegParse(input, opts);\n    if (!opts || opts.normalizeHashtagInPlural !== false) {\n        normalizeHashtagInPlural(els);\n    }\n    return els;\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport * as React from 'react';\nimport { Provider } from './injectIntl';\nimport { DEFAULT_INTL_CONFIG, createFormatters, invariantIntlContext, createIntlCache, } from '../utils';\nimport { formatNumber, formatNumberToParts } from '../formatters/number';\nimport { formatRelativeTime } from '../formatters/relativeTime';\nimport { formatDate, formatTime, formatDateToParts, formatTimeToParts, } from '../formatters/dateTime';\nimport { formatPlural } from '../formatters/plural';\nimport { formatMessage } from '../formatters/message';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nimport { formatList } from '../formatters/list';\nimport { formatDisplayName } from '../formatters/displayName';\nimport { InvalidConfigError, MissingDataError } from '../error';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    };\n}\n/**\n * Create intl object\n * @param config intl config\n * @param cache cache for formatter instances to prevent memory leak\n */\nexport function createIntl(config, cache) {\n    var formatters = createFormatters(cache);\n    var resolvedConfig = __assign(__assign({}, DEFAULT_INTL_CONFIG), config);\n    var locale = resolvedConfig.locale, defaultLocale = resolvedConfig.defaultLocale, onError = resolvedConfig.onError;\n    if (!locale) {\n        if (onError) {\n            onError(new InvalidConfigError(\"\\\"locale\\\" was not configured, using \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl/api#intlshape for more details\"));\n        }\n        // Since there's no registered locale data for `locale`, this will\n        // fallback to the `defaultLocale` to make sure things can render.\n        // The `messages` are overridden to the `defaultProps` empty object\n        // to maintain referential equality across re-renders. It's assumed\n        // each <FormattedMessage> contains a `defaultMessage` prop.\n        resolvedConfig.locale = resolvedConfig.defaultLocale || 'en';\n    }\n    else if (!Intl.NumberFormat.supportedLocalesOf(locale).length && onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.NumberFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    else if (!Intl.DateTimeFormat.supportedLocalesOf(locale).length &&\n        onError) {\n        onError(new MissingDataError(\"Missing locale data for locale: \\\"\" + locale + \"\\\" in Intl.DateTimeFormat. Using default locale: \\\"\" + defaultLocale + \"\\\" as fallback. See https://formatjs.io/docs/react-intl#runtime-requirements for more details\"));\n    }\n    return __assign(__assign({}, resolvedConfig), { formatters: formatters, formatNumber: formatNumber.bind(null, resolvedConfig, formatters.getNumberFormat), formatNumberToParts: formatNumberToParts.bind(null, resolvedConfig, formatters.getNumberFormat), formatRelativeTime: formatRelativeTime.bind(null, resolvedConfig, formatters.getRelativeTimeFormat), formatDate: formatDate.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatDateToParts: formatDateToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTime: formatTime.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatTimeToParts: formatTimeToParts.bind(null, resolvedConfig, formatters.getDateTimeFormat), formatPlural: formatPlural.bind(null, resolvedConfig, formatters.getPluralRules), formatMessage: formatMessage.bind(null, resolvedConfig, formatters), formatList: formatList.bind(null, resolvedConfig, formatters.getListFormat), formatDisplayName: formatDisplayName.bind(null, resolvedConfig, formatters.getDisplayNames) });\n}\nvar IntlProvider = /** @class */ (function (_super) {\n    __extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = createIntlCache();\n        _this.state = {\n            cache: _this.cache,\n            intl: createIntl(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!shallowEquals(prevConfig, config)) {\n            return {\n                intl: createIntl(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        invariantIntlContext(this.state.intl);\n        return React.createElement(Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexport default IntlProvider;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { invariantIntlContext } from '../utils';\nimport { Context } from './injectIntl';\nvar DisplayName;\n(function (DisplayName) {\n    DisplayName[\"formatDate\"] = \"FormattedDate\";\n    DisplayName[\"formatTime\"] = \"FormattedTime\";\n    DisplayName[\"formatNumber\"] = \"FormattedNumber\";\n    DisplayName[\"formatList\"] = \"FormattedList\";\n    // Note that this DisplayName is the locale display name, not to be confused with\n    // the name of the enum, which is for React component display name in dev tools.\n    DisplayName[\"formatDisplayName\"] = \"FormattedDisplayName\";\n})(DisplayName || (DisplayName = {}));\nvar DisplayNameParts;\n(function (DisplayNameParts) {\n    DisplayNameParts[\"formatDate\"] = \"FormattedDateParts\";\n    DisplayNameParts[\"formatTime\"] = \"FormattedTimeParts\";\n    DisplayNameParts[\"formatNumber\"] = \"FormattedNumberParts\";\n    DisplayNameParts[\"formatList\"] = \"FormattedListParts\";\n})(DisplayNameParts || (DisplayNameParts = {}));\nexport var FormattedNumberParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n    invariantIntlContext(intl);\n    var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n    return children(intl.formatNumberToParts(value, formatProps));\n})); };\nFormattedNumberParts.displayName = 'FormattedNumberParts';\nexport function createFormattedDateTimePartsComponent(name) {\n    var ComponentParts = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        var date = typeof value === 'string' ? new Date(value || 0) : value;\n        var formattedParts = name === 'formatDate'\n            ? intl.formatDateToParts(date, formatProps)\n            : intl.formatTimeToParts(date, formatProps);\n        return children(formattedParts);\n    })); };\n    ComponentParts.displayName = DisplayNameParts[name];\n    return ComponentParts;\n}\nexport function createFormattedComponent(name) {\n    var Component = function (props) { return (React.createElement(Context.Consumer, null, function (intl) {\n        invariantIntlContext(intl);\n        var value = props.value, children = props.children, formatProps = __rest(props, [\"value\", \"children\"]);\n        // TODO: fix TS type definition for localeMatcher upstream\n        var formattedValue = intl[name](value, formatProps);\n        if (typeof children === 'function') {\n            return children(formattedValue);\n        }\n        var Text = intl.textComponent || React.Fragment;\n        return React.createElement(Text, null, formattedValue);\n    })); };\n    Component.displayName = DisplayName[name];\n    return Component;\n}\n","//\n// Main\n//\n\nfunction memoize (fn, options) {\n  var cache = options && options.cache\n    ? options.cache\n    : cacheDefault\n\n  var serializer = options && options.serializer\n    ? options.serializer\n    : serializerDefault\n\n  var strategy = options && options.strategy\n    ? options.strategy\n    : strategyDefault\n\n  return strategy(fn, {\n    cache: cache,\n    serializer: serializer\n  })\n}\n\n//\n// Strategy\n//\n\nfunction isPrimitive (value) {\n  return value == null || typeof value === 'number' || typeof value === 'boolean' // || typeof value === \"string\" 'unsafe' primitive for our needs\n}\n\nfunction monadic (fn, cache, serializer, arg) {\n  var cacheKey = isPrimitive(arg) ? arg : serializer(arg)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.call(this, arg)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction variadic (fn, cache, serializer) {\n  var args = Array.prototype.slice.call(arguments, 3)\n  var cacheKey = serializer(args)\n\n  var computedValue = cache.get(cacheKey)\n  if (typeof computedValue === 'undefined') {\n    computedValue = fn.apply(this, args)\n    cache.set(cacheKey, computedValue)\n  }\n\n  return computedValue\n}\n\nfunction assemble (fn, context, strategy, cache, serialize) {\n  return strategy.bind(\n    context,\n    fn,\n    cache,\n    serialize\n  )\n}\n\nfunction strategyDefault (fn, options) {\n  var strategy = fn.length === 1 ? monadic : variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyVariadic (fn, options) {\n  var strategy = variadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\nfunction strategyMonadic (fn, options) {\n  var strategy = monadic\n\n  return assemble(\n    fn,\n    this,\n    strategy,\n    options.cache.create(),\n    options.serializer\n  )\n}\n\n//\n// Serializer\n//\n\nfunction serializerDefault () {\n  return JSON.stringify(arguments)\n}\n\n//\n// Cache\n//\n\nfunction ObjectWithoutPrototypeCache () {\n  this.cache = Object.create(null)\n}\n\nObjectWithoutPrototypeCache.prototype.has = function (key) {\n  return (key in this.cache)\n}\n\nObjectWithoutPrototypeCache.prototype.get = function (key) {\n  return this.cache[key]\n}\n\nObjectWithoutPrototypeCache.prototype.set = function (key, value) {\n  this.cache[key] = value\n}\n\nvar cacheDefault = {\n  create: function create () {\n    return new ObjectWithoutPrototypeCache()\n  }\n}\n\n//\n// API\n//\n\nmodule.exports = memoize\nmodule.exports.strategies = {\n  variadic: strategyVariadic,\n  monadic: strategyMonadic\n}\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * Credit: https://github.com/caridy/intl-datetimeformat-pattern/blob/master/index.js\n * with some tweaks\n */\nvar DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;\n/**\n * Parse Date time skeleton into Intl.DateTimeFormatOptions\n * Ref: https://unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * @public\n * @param skeleton skeleton string\n */\nexport function parseDateTimeSkeleton(skeleton) {\n    var result = {};\n    skeleton.replace(DATE_TIME_REGEX, function (match) {\n        var len = match.length;\n        switch (match[0]) {\n            // Era\n            case 'G':\n                result.era = len === 4 ? 'long' : len === 5 ? 'narrow' : 'short';\n                break;\n            // Year\n            case 'y':\n                result.year = len === 2 ? '2-digit' : 'numeric';\n                break;\n            case 'Y':\n            case 'u':\n            case 'U':\n            case 'r':\n                throw new RangeError('`Y/u/U/r` (year) patterns are not supported, use `y` instead');\n            // Quarter\n            case 'q':\n            case 'Q':\n                throw new RangeError('`q/Q` (quarter) patterns are not supported');\n            // Month\n            case 'M':\n            case 'L':\n                result.month = ['numeric', '2-digit', 'short', 'long', 'narrow'][len - 1];\n                break;\n            // Week\n            case 'w':\n            case 'W':\n                throw new RangeError('`w/W` (week) patterns are not supported');\n            case 'd':\n                result.day = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'D':\n            case 'F':\n            case 'g':\n                throw new RangeError('`D/F/g` (day) patterns are not supported, use `d` instead');\n            // Weekday\n            case 'E':\n                result.weekday = len === 4 ? 'short' : len === 5 ? 'narrow' : 'short';\n                break;\n            case 'e':\n                if (len < 4) {\n                    throw new RangeError('`e..eee` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            case 'c':\n                if (len < 4) {\n                    throw new RangeError('`c..ccc` (weekday) patterns are not supported');\n                }\n                result.weekday = ['short', 'long', 'narrow', 'short'][len - 4];\n                break;\n            // Period\n            case 'a': // AM, PM\n                result.hour12 = true;\n                break;\n            case 'b': // am, pm, noon, midnight\n            case 'B': // flexible day periods\n                throw new RangeError('`b/B` (period) patterns are not supported, use `a` instead');\n            // Hour\n            case 'h':\n                result.hourCycle = 'h12';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'H':\n                result.hourCycle = 'h23';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'K':\n                result.hourCycle = 'h11';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'k':\n                result.hourCycle = 'h24';\n                result.hour = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'j':\n            case 'J':\n            case 'C':\n                throw new RangeError('`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead');\n            // Minute\n            case 'm':\n                result.minute = ['numeric', '2-digit'][len - 1];\n                break;\n            // Second\n            case 's':\n                result.second = ['numeric', '2-digit'][len - 1];\n                break;\n            case 'S':\n            case 'A':\n                throw new RangeError('`S/A` (second) pattenrs are not supported, use `s` instead');\n            // Zone\n            case 'z': // 1..3, 4: specific non-location format\n                result.timeZoneName = len < 4 ? 'short' : 'long';\n                break;\n            case 'Z': // 1..3, 4, 5: The ISO8601 varios formats\n            case 'O': // 1, 4: miliseconds in day short, long\n            case 'v': // 1, 4: generic non-location format\n            case 'V': // 1, 2, 3, 4: time zone ID or city\n            case 'X': // 1, 2, 3, 4: The ISO8601 varios formats\n            case 'x': // 1, 2, 3, 4: The ISO8601 varios formats\n                throw new RangeError('`Z/O/v/V/X/x` (timeZone) pattenrs are not supported, use `z` instead');\n        }\n        return '';\n    });\n    return result;\n}\nfunction icuUnitToEcma(unit) {\n    return unit.replace(/^(.*?)-/, '');\n}\nvar FRACTION_PRECISION_REGEX = /^\\.(?:(0+)(\\*)?|(#+)|(0+)(#+))$/g;\nvar SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\\+|#+)?$/g;\nfunction parseSignificantPrecision(str) {\n    var result = {};\n    str.replace(SIGNIFICANT_PRECISION_REGEX, function (_, g1, g2) {\n        // @@@ case\n        if (typeof g2 !== 'string') {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits = g1.length;\n        }\n        // @@@+ case\n        else if (g2 === '+') {\n            result.minimumSignificantDigits = g1.length;\n        }\n        // .### case\n        else if (g1[0] === '#') {\n            result.maximumSignificantDigits = g1.length;\n        }\n        // .@@## or .@@@ case\n        else {\n            result.minimumSignificantDigits = g1.length;\n            result.maximumSignificantDigits =\n                g1.length + (typeof g2 === 'string' ? g2.length : 0);\n        }\n        return '';\n    });\n    return result;\n}\nfunction parseSign(str) {\n    switch (str) {\n        case 'sign-auto':\n            return {\n                signDisplay: 'auto',\n            };\n        case 'sign-accounting':\n            return {\n                currencySign: 'accounting',\n            };\n        case 'sign-always':\n            return {\n                signDisplay: 'always',\n            };\n        case 'sign-accounting-always':\n            return {\n                signDisplay: 'always',\n                currencySign: 'accounting',\n            };\n        case 'sign-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n            };\n        case 'sign-accounting-except-zero':\n            return {\n                signDisplay: 'exceptZero',\n                currencySign: 'accounting',\n            };\n        case 'sign-never':\n            return {\n                signDisplay: 'never',\n            };\n    }\n}\nfunction parseNotationOptions(opt) {\n    var result = {};\n    var signOpts = parseSign(opt);\n    if (signOpts) {\n        return signOpts;\n    }\n    return result;\n}\n/**\n * https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#skeleton-stems-and-options\n */\nexport function convertNumberSkeletonToNumberFormatOptions(tokens) {\n    var result = {};\n    for (var _i = 0, tokens_1 = tokens; _i < tokens_1.length; _i++) {\n        var token = tokens_1[_i];\n        switch (token.stem) {\n            case 'percent':\n                result.style = 'percent';\n                continue;\n            case 'currency':\n                result.style = 'currency';\n                result.currency = token.options[0];\n                continue;\n            case 'group-off':\n                result.useGrouping = false;\n                continue;\n            case 'precision-integer':\n            case '.':\n                result.maximumFractionDigits = 0;\n                continue;\n            case 'measure-unit':\n                result.style = 'unit';\n                result.unit = icuUnitToEcma(token.options[0]);\n                continue;\n            case 'compact-short':\n                result.notation = 'compact';\n                result.compactDisplay = 'short';\n                continue;\n            case 'compact-long':\n                result.notation = 'compact';\n                result.compactDisplay = 'long';\n                continue;\n            case 'scientific':\n                result = __assign(__assign(__assign({}, result), { notation: 'scientific' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'engineering':\n                result = __assign(__assign(__assign({}, result), { notation: 'engineering' }), token.options.reduce(function (all, opt) { return (__assign(__assign({}, all), parseNotationOptions(opt))); }, {}));\n                continue;\n            case 'notation-simple':\n                result.notation = 'standard';\n                continue;\n            // https://github.com/unicode-org/icu/blob/master/icu4c/source/i18n/unicode/unumberformatter.h\n            case 'unit-width-narrow':\n                result.currencyDisplay = 'narrowSymbol';\n                result.unitDisplay = 'narrow';\n                continue;\n            case 'unit-width-short':\n                result.currencyDisplay = 'code';\n                result.unitDisplay = 'short';\n                continue;\n            case 'unit-width-full-name':\n                result.currencyDisplay = 'name';\n                result.unitDisplay = 'long';\n                continue;\n            case 'unit-width-iso-code':\n                result.currencyDisplay = 'symbol';\n                continue;\n        }\n        // Precision\n        // https://github.com/unicode-org/icu/blob/master/docs/userguide/format_parse/numbers/skeletons.md#fraction-precision\n        // precision-integer case\n        if (FRACTION_PRECISION_REGEX.test(token.stem)) {\n            if (token.options.length > 1) {\n                throw new RangeError('Fraction-precision stems only accept a single optional option');\n            }\n            token.stem.replace(FRACTION_PRECISION_REGEX, function (_, g1, g2, g3, g4, g5) {\n                // .000* case (before ICU67 it was .000+)\n                if (g2 === '*') {\n                    result.minimumFractionDigits = g1.length;\n                }\n                // .### case\n                else if (g3 && g3[0] === '#') {\n                    result.maximumFractionDigits = g3.length;\n                }\n                // .00## case\n                else if (g4 && g5) {\n                    result.minimumFractionDigits = g4.length;\n                    result.maximumFractionDigits = g4.length + g5.length;\n                }\n                else {\n                    result.minimumFractionDigits = g1.length;\n                    result.maximumFractionDigits = g1.length;\n                }\n                return '';\n            });\n            if (token.options.length) {\n                result = __assign(__assign({}, result), parseSignificantPrecision(token.options[0]));\n            }\n            continue;\n        }\n        if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {\n            result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));\n            continue;\n        }\n        var signOpts = parseSign(token.stem);\n        if (signOpts) {\n            result = __assign(__assign({}, result), signOpts);\n        }\n    }\n    return result;\n}\n","import * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nexport default function useIntl() {\n    var intl = React.useContext(Context);\n    invariantIntlContext(intl);\n    return intl;\n}\n","'use strict';\n\nfunction shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqualObjects;\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport { invariant } from '@formatjs/intl-utils';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\nfunction selectUnit(seconds) {\n    var absValue = Math.abs(seconds);\n    if (absValue < MINUTE) {\n        return 'second';\n    }\n    if (absValue < HOUR) {\n        return 'minute';\n    }\n    if (absValue < DAY) {\n        return 'hour';\n    }\n    return 'day';\n}\nfunction getDurationInSeconds(unit) {\n    switch (unit) {\n        case 'second':\n            return 1;\n        case 'minute':\n            return MINUTE;\n        case 'hour':\n            return HOUR;\n        default:\n            return DAY;\n    }\n}\nfunction valueToSeconds(value, unit) {\n    if (!value) {\n        return 0;\n    }\n    switch (unit) {\n        case 'second':\n            return value;\n        case 'minute':\n            return value * MINUTE;\n        default:\n            return value * HOUR;\n    }\n}\nvar INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\nfunction canIncrement(unit) {\n    if (unit === void 0) { unit = 'second'; }\n    return INCREMENTABLE_UNITS.includes(unit);\n}\nvar FormattedRelativeTime = /** @class */ (function (_super) {\n    __extends(FormattedRelativeTime, _super);\n    function FormattedRelativeTime(props) {\n        var _this = _super.call(this, props) || this;\n        // Public for testing\n        _this._updateTimer = null;\n        _this.state = {\n            prevUnit: _this.props.unit,\n            prevValue: _this.props.value,\n            currentValueInSeconds: canIncrement(_this.props.unit)\n                ? valueToSeconds(_this.props.value, _this.props.unit)\n                : 0,\n        };\n        invariant(!props.updateIntervalInSeconds ||\n            !!(props.updateIntervalInSeconds && canIncrement(props.unit)), 'Cannot schedule update with unit longer than hour');\n        return _this;\n    }\n    FormattedRelativeTime.prototype.scheduleNextUpdate = function (_a, _b) {\n        var _this = this;\n        var updateIntervalInSeconds = _a.updateIntervalInSeconds, unit = _a.unit;\n        var currentValueInSeconds = _b.currentValueInSeconds;\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n        // If there's no interval and we cannot increment this unit, do nothing\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\n            return;\n        }\n        // Figure out the next interesting time\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n        var nextUnit = selectUnit(nextValueInSeconds);\n        // We've reached the max auto incrementable unit, don't schedule another update\n        if (nextUnit === 'day') {\n            return;\n        }\n        var unitDuration = getDurationInSeconds(nextUnit);\n        var remainder = nextValueInSeconds % unitDuration;\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\n            ? prevInterestingValueInSeconds - unitDuration\n            : prevInterestingValueInSeconds;\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n        this._updateTimer = setTimeout(function () {\n            return _this.setState({\n                currentValueInSeconds: nextInterestingValueInSeconds,\n            });\n        }, delayInSeconds * 1e3);\n    };\n    FormattedRelativeTime.prototype.componentDidMount = function () {\n        this.scheduleNextUpdate(this.props, this.state);\n    };\n    FormattedRelativeTime.prototype.componentDidUpdate = function () {\n        this.scheduleNextUpdate(this.props, this.state);\n    };\n    FormattedRelativeTime.prototype.componentWillUnmount = function () {\n        clearTimeout(this._updateTimer);\n        this._updateTimer = null;\n    };\n    FormattedRelativeTime.getDerivedStateFromProps = function (props, state) {\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n            return {\n                prevValue: props.value,\n                prevUnit: props.unit,\n                currentValueInSeconds: canIncrement(props.unit)\n                    ? valueToSeconds(props.value, props.unit)\n                    : 0,\n            };\n        }\n        return null;\n    };\n    FormattedRelativeTime.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatRelativeTime = intl.formatRelativeTime, Text = intl.textComponent;\n            var _a = _this.props, children = _a.children, value = _a.value, unit = _a.unit, updateIntervalInSeconds = _a.updateIntervalInSeconds;\n            var currentValueInSeconds = _this.state.currentValueInSeconds;\n            var currentValue = value || 0;\n            var currentUnit = unit;\n            if (canIncrement(unit) &&\n                typeof currentValueInSeconds === 'number' &&\n                updateIntervalInSeconds) {\n                currentUnit = selectUnit(currentValueInSeconds);\n                var unitDuration = getDurationInSeconds(currentUnit);\n                currentValue = Math.round(currentValueInSeconds / unitDuration);\n            }\n            var formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, __assign({}, _this.props));\n            if (typeof children === 'function') {\n                return children(formattedRelativeTime);\n            }\n            if (Text) {\n                return React.createElement(Text, null, formattedRelativeTime);\n            }\n            return formattedRelativeTime;\n        }));\n    };\n    FormattedRelativeTime.displayName = 'FormattedRelativeTime';\n    FormattedRelativeTime.defaultProps = {\n        value: 0,\n        unit: 'second',\n    };\n    return FormattedRelativeTime;\n}(React.PureComponent));\nexport { FormattedRelativeTime };\nexport default FormattedRelativeTime;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nimport * as React from 'react';\nimport withIntl from './injectIntl';\nvar FormattedPlural = function (props) {\n    var value = props.value, other = props.other, children = props.children, _a = props.intl, formatPlural = _a.formatPlural, Text = _a.textComponent;\n    var pluralCategory = formatPlural(value, props);\n    var formattedPlural = props[pluralCategory] || other;\n    if (typeof children === 'function') {\n        return children(formattedPlural);\n    }\n    if (Text) {\n        return React.createElement(Text, null, formattedPlural);\n    }\n    // Work around @types/react where React.FC cannot return string\n    return formattedPlural;\n};\nFormattedPlural.defaultProps = {\n    type: 'cardinal',\n};\nFormattedPlural.displayName = 'FormattedPlural';\n// Explicitly annotate type here to workaround API extractor's inability to handle `import('./someModule')`\n// type annotations when rolling up DTS file.\nvar FormattedPluralWithIntl = withIntl(FormattedPlural);\nexport default FormattedPluralWithIntl;\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport * as shallowEquals_ from 'shallow-equal/objects';\nvar shallowEquals = shallowEquals_.default || shallowEquals_;\nvar FormattedMessage = /** @class */ (function (_super) {\n    __extends(FormattedMessage, _super);\n    function FormattedMessage() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FormattedMessage.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, values = _a.values, otherProps = __rest(_a, [\"values\"]);\n        var nextValues = nextProps.values, nextOtherProps = __rest(nextProps, [\"values\"]);\n        return (!shallowEquals(nextValues, values) ||\n            !shallowEquals(otherProps, nextOtherProps));\n    };\n    FormattedMessage.prototype.render = function () {\n        var _this = this;\n        return (React.createElement(Context.Consumer, null, function (intl) {\n            invariantIntlContext(intl);\n            var formatMessage = intl.formatMessage, _a = intl.textComponent, Text = _a === void 0 ? React.Fragment : _a;\n            var _b = _this.props, id = _b.id, description = _b.description, defaultMessage = _b.defaultMessage, values = _b.values, children = _b.children, _c = _b.tagName, Component = _c === void 0 ? Text : _c;\n            var descriptor = { id: id, description: description, defaultMessage: defaultMessage };\n            var nodes = formatMessage(descriptor, values);\n            if (!Array.isArray(nodes)) {\n                nodes = [nodes];\n            }\n            if (typeof children === 'function') {\n                return children(nodes);\n            }\n            if (Component) {\n                // Needs to use `createElement()` instead of JSX, otherwise React will\n                // warn about a missing `key` prop with rich-text message formatting.\n                return React.createElement.apply(React, __spreadArrays([Component, null], nodes));\n            }\n            return nodes;\n        }));\n    };\n    FormattedMessage.displayName = 'FormattedMessage';\n    return FormattedMessage;\n}(React.Component));\nexport default FormattedMessage;\n","import { convertNumberSkeletonToNumberFormatOptions, isArgumentElement, isDateElement, isDateTimeSkeleton, isLiteralElement, isNumberElement, isNumberSkeleton, isPluralElement, isPoundElement, isSelectElement, isTimeElement, parseDateTimeSkeleton, isTagElement, } from 'intl-messageformat-parser';\nimport { MissingValueError, InvalidValueError, FormatError, InvalidValueTypeError, } from './error';\nexport var PART_TYPE;\n(function (PART_TYPE) {\n    PART_TYPE[PART_TYPE[\"literal\"] = 0] = \"literal\";\n    PART_TYPE[PART_TYPE[\"object\"] = 1] = \"object\";\n})(PART_TYPE || (PART_TYPE = {}));\nfunction mergeLiteral(parts) {\n    if (parts.length < 2) {\n        return parts;\n    }\n    return parts.reduce(function (all, part) {\n        var lastPart = all[all.length - 1];\n        if (!lastPart ||\n            lastPart.type !== 0 /* literal */ ||\n            part.type !== 0 /* literal */) {\n            all.push(part);\n        }\n        else {\n            lastPart.value += part.value;\n        }\n        return all;\n    }, []);\n}\nexport function isFormatXMLElementFn(el) {\n    return typeof el === 'function';\n}\n// TODO(skeleton): add skeleton support\nexport function formatToParts(els, locales, formatters, formats, values, currentPluralValue, \n// For debugging\noriginalMessage) {\n    // Hot path for straight simple msg translations\n    if (els.length === 1 && isLiteralElement(els[0])) {\n        return [\n            {\n                type: 0 /* literal */,\n                value: els[0].value,\n            },\n        ];\n    }\n    var result = [];\n    for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {\n        var el = els_1[_i];\n        // Exit early for string parts.\n        if (isLiteralElement(el)) {\n            result.push({\n                type: 0 /* literal */,\n                value: el.value,\n            });\n            continue;\n        }\n        // TODO: should this part be literal type?\n        // Replace `#` in plural rules with the actual numeric value.\n        if (isPoundElement(el)) {\n            if (typeof currentPluralValue === 'number') {\n                result.push({\n                    type: 0 /* literal */,\n                    value: formatters.getNumberFormat(locales).format(currentPluralValue),\n                });\n            }\n            continue;\n        }\n        var varName = el.value;\n        // Enforce that all required values are provided by the caller.\n        if (!(values && varName in values)) {\n            throw new MissingValueError(varName, originalMessage);\n        }\n        var value = values[varName];\n        if (isArgumentElement(el)) {\n            if (!value || typeof value === 'string' || typeof value === 'number') {\n                value =\n                    typeof value === 'string' || typeof value === 'number'\n                        ? String(value)\n                        : '';\n            }\n            result.push({\n                type: typeof value === 'string' ? 0 /* literal */ : 1 /* object */,\n                value: value,\n            });\n            continue;\n        }\n        // Recursively format plural and select parts' option — which can be a\n        // nested pattern structure. The choosing of the option to use is\n        // abstracted-by and delegated-to the part helper object.\n        if (isDateElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.date[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTimeElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.time[el.style]\n                : isDateTimeSkeleton(el.style)\n                    ? parseDateTimeSkeleton(el.style.pattern)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getDateTimeFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isNumberElement(el)) {\n            var style = typeof el.style === 'string'\n                ? formats.number[el.style]\n                : isNumberSkeleton(el.style)\n                    ? convertNumberSkeletonToNumberFormatOptions(el.style.tokens)\n                    : undefined;\n            result.push({\n                type: 0 /* literal */,\n                value: formatters\n                    .getNumberFormat(locales, style)\n                    .format(value),\n            });\n            continue;\n        }\n        if (isTagElement(el)) {\n            var children = el.children, value_1 = el.value;\n            var formatFn = values[value_1];\n            if (!isFormatXMLElementFn(formatFn)) {\n                throw new InvalidValueTypeError(value_1, 'function', originalMessage);\n            }\n            var parts = formatToParts(children, locales, formatters, formats, values, currentPluralValue);\n            var chunks = formatFn(parts.map(function (p) { return p.value; }));\n            if (!Array.isArray(chunks)) {\n                chunks = [chunks];\n            }\n            result.push.apply(result, chunks.map(function (c) {\n                return {\n                    type: typeof c === 'string' ? 0 /* literal */ : 1 /* object */,\n                    value: c,\n                };\n            }));\n        }\n        if (isSelectElement(el)) {\n            var opt = el.options[value] || el.options.other;\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values));\n            continue;\n        }\n        if (isPluralElement(el)) {\n            var opt = el.options[\"=\" + value];\n            if (!opt) {\n                if (!Intl.PluralRules) {\n                    throw new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */, originalMessage);\n                }\n                var rule = formatters\n                    .getPluralRules(locales, { type: el.pluralType })\n                    .select(value - (el.offset || 0));\n                opt = el.options[rule] || el.options.other;\n            }\n            if (!opt) {\n                throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);\n            }\n            result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values, value - (el.offset || 0)));\n            continue;\n        }\n    }\n    return mergeLiteral(result);\n}\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nexport var ErrorCode;\n(function (ErrorCode) {\n    // When we have a placeholder but no value to format\n    ErrorCode[\"MISSING_VALUE\"] = \"MISSING_VALUE\";\n    // When value supplied is invalid\n    ErrorCode[\"INVALID_VALUE\"] = \"INVALID_VALUE\";\n    // When we need specific Intl API but it's not available\n    ErrorCode[\"MISSING_INTL_API\"] = \"MISSING_INTL_API\";\n})(ErrorCode || (ErrorCode = {}));\nvar FormatError = /** @class */ (function (_super) {\n    __extends(FormatError, _super);\n    function FormatError(msg, code, originalMessage) {\n        var _this = _super.call(this, msg) || this;\n        _this.code = code;\n        _this.originalMessage = originalMessage;\n        return _this;\n    }\n    FormatError.prototype.toString = function () {\n        return \"[formatjs Error: \" + this.code + \"] \" + this.message;\n    };\n    return FormatError;\n}(Error));\nexport { FormatError };\nvar InvalidValueError = /** @class */ (function (_super) {\n    __extends(InvalidValueError, _super);\n    function InvalidValueError(variableId, value, options, originalMessage) {\n        return _super.call(this, \"Invalid values for \\\"\" + variableId + \"\\\": \\\"\" + value + \"\\\". Options are \\\"\" + Object.keys(options).join('\", \"') + \"\\\"\", \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueError;\n}(FormatError));\nexport { InvalidValueError };\nvar InvalidValueTypeError = /** @class */ (function (_super) {\n    __extends(InvalidValueTypeError, _super);\n    function InvalidValueTypeError(value, type, originalMessage) {\n        return _super.call(this, \"Value for \\\"\" + value + \"\\\" must be of type \" + type, \"INVALID_VALUE\" /* INVALID_VALUE */, originalMessage) || this;\n    }\n    return InvalidValueTypeError;\n}(FormatError));\nexport { InvalidValueTypeError };\nvar MissingValueError = /** @class */ (function (_super) {\n    __extends(MissingValueError, _super);\n    function MissingValueError(variableId, originalMessage) {\n        return _super.call(this, \"The intl string context variable \\\"\" + variableId + \"\\\" was not provided to the string \\\"\" + originalMessage + \"\\\"\", \"MISSING_VALUE\" /* MISSING_VALUE */, originalMessage) || this;\n    }\n    return MissingValueError;\n}(FormatError));\nexport { MissingValueError };\n","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { isPluralElement, isLiteralElement, isSelectElement, } from './types';\nimport { pegParse } from './parser';\nvar PLURAL_HASHTAG_REGEX = /(^|[^\\\\])#/g;\n/**\n * Whether to convert `#` in plural rule options\n * to `{var, number}`\n * @param el AST Element\n * @param pluralStack current plural stack\n */\nexport function normalizeHashtagInPlural(els) {\n    els.forEach(function (el) {\n        // If we're encountering a plural el\n        if (!isPluralElement(el) && !isSelectElement(el)) {\n            return;\n        }\n        // Go down the options and search for # in any literal element\n        Object.keys(el.options).forEach(function (id) {\n            var _a;\n            var opt = el.options[id];\n            // If we got a match, we have to split this\n            // and inject a NumberElement in the middle\n            var matchingLiteralElIndex = -1;\n            var literalEl = undefined;\n            for (var i = 0; i < opt.value.length; i++) {\n                var el_1 = opt.value[i];\n                if (isLiteralElement(el_1) && PLURAL_HASHTAG_REGEX.test(el_1.value)) {\n                    matchingLiteralElIndex = i;\n                    literalEl = el_1;\n                    break;\n                }\n            }\n            if (literalEl) {\n                var newValue = literalEl.value.replace(PLURAL_HASHTAG_REGEX, \"$1{\" + el.value + \", number}\");\n                var newEls = pegParse(newValue);\n                (_a = opt.value).splice.apply(_a, __spreadArrays([matchingLiteralElIndex, 1], newEls));\n            }\n            normalizeHashtagInPlural(opt.value);\n        });\n    });\n}\n","import { getNamedFormat, filterProps } from '../utils';\nimport { ReactIntlError } from '../error';\nvar NUMBER_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'style',\n    'currency',\n    'currencyDisplay',\n    'unit',\n    'unitDisplay',\n    'useGrouping',\n    'minimumIntegerDigits',\n    'minimumFractionDigits',\n    'maximumFractionDigits',\n    'minimumSignificantDigits',\n    'maximumSignificantDigits',\n    // ES2020 NumberFormat\n    'compactDisplay',\n    'currencyDisplay',\n    'currencySign',\n    'notation',\n    'signDisplay',\n    'unit',\n    'unitDisplay',\n];\nexport function getFormatter(_a, getNumberFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = ((format &&\n        getNamedFormat(formats, 'number', format, onError)) ||\n        {});\n    var filteredOptions = filterProps(options, NUMBER_FORMAT_OPTIONS, defaults);\n    return getNumberFormat(locale, filteredOptions);\n}\nexport function formatNumber(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).format(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return String(value);\n}\nexport function formatNumberToParts(config, getNumberFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    try {\n        return getFormatter(config, getNumberFormat, options).formatToParts(value);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting number.', e));\n    }\n    return [];\n}\n","import { getNamedFormat, filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { MessageFormatError } from '../error';\nvar RELATIVE_TIME_FORMAT_OPTIONS = ['numeric', 'style'];\nfunction getFormatter(_a, getRelativeTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = (!!format && getNamedFormat(formats, 'relative', format, onError)) || {};\n    var filteredOptions = filterProps(options, RELATIVE_TIME_FORMAT_OPTIONS, defaults);\n    return getRelativeTimeFormat(locale, filteredOptions);\n}\nexport function formatRelativeTime(config, getRelativeTimeFormat, value, unit, options) {\n    if (options === void 0) { options = {}; }\n    if (!unit) {\n        unit = 'second';\n    }\n    var RelativeTimeFormat = Intl.RelativeTimeFormat;\n    if (!RelativeTimeFormat) {\n        config.onError(new FormatError(\"Intl.RelativeTimeFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-relativetimeformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    try {\n        return getFormatter(config, getRelativeTimeFormat, options).format(value, unit);\n    }\n    catch (e) {\n        config.onError(new MessageFormatError('Error formatting relative time.', e));\n    }\n    return String(value);\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { filterProps, getNamedFormat } from '../utils';\nimport { ReactIntlError } from '../error';\nvar DATE_TIME_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'formatMatcher',\n    'timeZone',\n    'hour12',\n    'weekday',\n    'era',\n    'year',\n    'month',\n    'day',\n    'hour',\n    'minute',\n    'second',\n    'timeZoneName',\n    'hourCycle',\n    'dateStyle',\n    'timeStyle',\n    'fractionalSecondDigits',\n    'calendar',\n    // 'dayPeriod',\n    'numberingSystem',\n];\nexport function getFormatter(_a, type, getDateTimeFormat, options) {\n    var locale = _a.locale, formats = _a.formats, onError = _a.onError, timeZone = _a.timeZone;\n    if (options === void 0) { options = {}; }\n    var format = options.format;\n    var defaults = __assign(__assign({}, (timeZone && { timeZone: timeZone })), (format && getNamedFormat(formats, type, format, onError)));\n    var filteredOptions = filterProps(options, DATE_TIME_FORMAT_OPTIONS, defaults);\n    if (type === 'time' &&\n        !filteredOptions.hour &&\n        !filteredOptions.minute &&\n        !filteredOptions.second) {\n        // Add default formatting options if hour, minute, or second isn't defined.\n        filteredOptions = __assign(__assign({}, filteredOptions), { hour: 'numeric', minute: 'numeric' });\n    }\n    return getDateTimeFormat(locale, filteredOptions);\n}\nexport function formatDate(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return String(date);\n}\nexport function formatTime(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).format(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return String(date);\n}\nexport function formatDateToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'date', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting date.', e));\n    }\n    return [];\n}\nexport function formatTimeToParts(config, getDateTimeFormat, value, options) {\n    if (options === void 0) { options = {}; }\n    var date = typeof value === 'string' ? new Date(value || 0) : value;\n    try {\n        return getFormatter(config, 'time', getDateTimeFormat, options).formatToParts(date);\n    }\n    catch (e) {\n        config.onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting time.', e));\n    }\n    return [];\n}\n","import { filterProps } from '../utils';\nimport { MessageFormatError } from '../error';\nimport { FormatError } from 'intl-messageformat';\nvar PLURAL_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n];\nexport function formatPlural(_a, getPluralRules, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    if (!Intl.PluralRules) {\n        onError(new FormatError(\"Intl.PluralRules is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-pluralrules\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, PLURAL_FORMAT_OPTIONS);\n    try {\n        return getPluralRules(locale, filteredOptions).select(value);\n    }\n    catch (e) {\n        onError(new MessageFormatError('Error formatting plural.', e));\n    }\n    return 'other';\n}\n","/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport * as React from 'react';\nimport { invariant } from '@formatjs/intl-utils';\nimport { assignUniqueKeysToParts } from '../utils';\nimport { IntlMessageFormat, isFormatXMLElementFn, } from 'intl-messageformat';\nimport { MissingTranslationError, MessageFormatError } from '../error';\nimport { TYPE } from 'intl-messageformat-parser';\nfunction setTimeZoneInOptions(opts, timeZone) {\n    return Object.keys(opts).reduce(function (all, k) {\n        all[k] = __assign({ timeZone: timeZone }, opts[k]);\n        return all;\n    }, {});\n}\nfunction deepMergeOptions(opts1, opts2) {\n    var keys = Object.keys(__assign(__assign({}, opts1), opts2));\n    return keys.reduce(function (all, k) {\n        all[k] = __assign(__assign({}, (opts1[k] || {})), (opts2[k] || {}));\n        return all;\n    }, {});\n}\nfunction deepMergeFormatsAndSetTimeZone(f1, timeZone) {\n    if (!timeZone) {\n        return f1;\n    }\n    var mfFormats = IntlMessageFormat.formats;\n    return __assign(__assign(__assign({}, mfFormats), f1), { date: deepMergeOptions(setTimeZoneInOptions(mfFormats.date, timeZone), setTimeZoneInOptions(f1.date || {}, timeZone)), time: deepMergeOptions(setTimeZoneInOptions(mfFormats.time, timeZone), setTimeZoneInOptions(f1.time || {}, timeZone)) });\n}\nexport function assignUniqueKeysToFormatXMLElementFnArgument(values) {\n    return Object.keys(values).reduce(function (acc, k) {\n        var v = values[k];\n        acc[k] = isFormatXMLElementFn(v)\n            ? assignUniqueKeysToParts(v)\n            : v;\n        return acc;\n    }, {});\n}\nfunction prepareIntlMessageFormatHtmlOutput(chunks, shouldWrap) {\n    return Array.isArray(chunks) && shouldWrap\n        ? React.createElement.apply(React, __spreadArrays([React.Fragment, null], chunks)) : chunks;\n}\nexport function formatMessage(_a, state, messageDescriptor, values) {\n    var locale = _a.locale, formats = _a.formats, messages = _a.messages, defaultLocale = _a.defaultLocale, defaultFormats = _a.defaultFormats, onError = _a.onError, timeZone = _a.timeZone, wrapRichTextChunksInFragment = _a.wrapRichTextChunksInFragment;\n    if (messageDescriptor === void 0) { messageDescriptor = { id: '' }; }\n    var msgId = messageDescriptor.id, defaultMessage = messageDescriptor.defaultMessage;\n    // `id` is a required field of a Message Descriptor.\n    invariant(!!msgId, '[React Intl] An `id` must be provided to format a message.');\n    var id = String(msgId);\n    var message = messages && messages.hasOwnProperty(id) && messages[id];\n    // IMPORTANT: Hot path if `message` is AST with a single literal node\n    if (Array.isArray(message) &&\n        message.length === 1 &&\n        message[0].type === TYPE.literal) {\n        return message[0].value;\n    }\n    // IMPORTANT: Hot path straight lookup for performance\n    if (!values && message && typeof message === 'string') {\n        return message.replace(/'\\{(.*?)\\}'/gi, \"{$1}\");\n    }\n    var patchedValues = values && assignUniqueKeysToFormatXMLElementFnArgument(values);\n    formats = deepMergeFormatsAndSetTimeZone(formats, timeZone);\n    defaultFormats = deepMergeFormatsAndSetTimeZone(defaultFormats, timeZone);\n    if (!message) {\n        if (!defaultMessage ||\n            (locale && locale.toLowerCase() !== defaultLocale.toLowerCase())) {\n            // This prevents warnings from littering the console in development\n            // when no `messages` are passed into the <IntlProvider> for the\n            // default locale.\n            onError(new MissingTranslationError(messageDescriptor, locale));\n        }\n        if (defaultMessage) {\n            try {\n                var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n                return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n            }\n            catch (e) {\n                onError(new MessageFormatError(\"Error formatting default message for: \\\"\" + id + \"\\\", rendering default message verbatim\", locale, messageDescriptor, e));\n                return defaultMessage;\n            }\n        }\n        return id;\n    }\n    // We have the translated message\n    try {\n        var formatter = state.getMessageFormat(message, locale, formats, {\n            formatters: state,\n        });\n        return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n    }\n    catch (e) {\n        onError(new MessageFormatError(\"Error formatting message: \\\"\" + id + \"\\\", using \" + (defaultMessage ? 'default message' : 'id') + \" as fallback.\", locale, messageDescriptor, e));\n    }\n    if (defaultMessage) {\n        try {\n            var formatter = state.getMessageFormat(defaultMessage, defaultLocale, defaultFormats);\n            return prepareIntlMessageFormatHtmlOutput(formatter.format(patchedValues), wrapRichTextChunksInFragment);\n        }\n        catch (e) {\n            onError(new MessageFormatError(\"Error formatting the default message for: \\\"\" + id + \"\\\", rendering message verbatim\", locale, messageDescriptor, e));\n        }\n    }\n    return message || defaultMessage || id;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nvar LIST_FORMAT_OPTIONS = [\n    'localeMatcher',\n    'type',\n    'style',\n];\nvar now = Date.now();\nfunction generateToken(i) {\n    return now + \"_\" + i + \"_\" + now;\n}\nexport function formatList(_a, getListFormat, values, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var ListFormat = Intl.ListFormat;\n    if (!ListFormat) {\n        onError(new FormatError(\"Intl.ListFormat is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-listformat\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, LIST_FORMAT_OPTIONS);\n    try {\n        var richValues_1 = {};\n        var serializedValues = values.map(function (v, i) {\n            if (typeof v === 'object') {\n                var id = generateToken(i);\n                richValues_1[id] = v;\n                return id;\n            }\n            return String(v);\n        });\n        if (!Object.keys(richValues_1).length) {\n            return getListFormat(locale, filteredOptions).format(serializedValues);\n        }\n        var parts = getListFormat(locale, filteredOptions).formatToParts(serializedValues);\n        return parts.reduce(function (all, el) {\n            var val = el.value;\n            if (richValues_1[val]) {\n                all.push(richValues_1[val]);\n            }\n            else if (typeof all[all.length - 1] === 'string') {\n                all[all.length - 1] += val;\n            }\n            else {\n                all.push(val);\n            }\n            return all;\n        }, []);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting list.', e));\n    }\n    return values;\n}\n","import { filterProps } from '../utils';\nimport { FormatError } from 'intl-messageformat';\nimport { ReactIntlError } from '../error';\nvar DISPLAY_NAMES_OPTONS = [\n    'localeMatcher',\n    'style',\n    'type',\n    'fallback',\n];\nexport function formatDisplayName(_a, getDisplayNames, value, options) {\n    var locale = _a.locale, onError = _a.onError;\n    if (options === void 0) { options = {}; }\n    var DisplayNames = Intl.DisplayNames;\n    if (!DisplayNames) {\n        onError(new FormatError(\"Intl.DisplayNames is not available in this environment.\\nTry polyfilling it using \\\"@formatjs/intl-displaynames\\\"\\n\", \"MISSING_INTL_API\" /* MISSING_INTL_API */));\n    }\n    var filteredOptions = filterProps(options, DISPLAY_NAMES_OPTONS);\n    try {\n        return getDisplayNames(locale, filteredOptions).of(value);\n    }\n    catch (e) {\n        onError(new ReactIntlError(\"FORMAT_ERROR\" /* FORMAT_ERROR */, 'Error formatting display name.', e));\n    }\n}\n","export function invariant(condition, message, Err) {\n    if (Err === void 0) { Err = Error; }\n    if (!condition) {\n        throw new Err(message);\n    }\n}\n","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { parse } from 'intl-messageformat-parser';\nimport * as memoize from 'fast-memoize';\nimport { formatToParts, } from './formatters';\n// -- MessageFormat --------------------------------------------------------\nfunction mergeConfig(c1, c2) {\n    if (!c2) {\n        return c1;\n    }\n    return __assign(__assign(__assign({}, (c1 || {})), (c2 || {})), Object.keys(c1).reduce(function (all, k) {\n        all[k] = __assign(__assign({}, c1[k]), (c2[k] || {}));\n        return all;\n    }, {}));\n}\nfunction mergeConfigs(defaultConfig, configs) {\n    if (!configs) {\n        return defaultConfig;\n    }\n    return Object.keys(defaultConfig).reduce(function (all, k) {\n        all[k] = mergeConfig(defaultConfig[k], configs[k]);\n        return all;\n    }, __assign({}, defaultConfig));\n}\nfunction createFastMemoizeCache(store) {\n    return {\n        create: function () {\n            return {\n                has: function (key) {\n                    return key in store;\n                },\n                get: function (key) {\n                    return store[key];\n                },\n                set: function (key, value) {\n                    store[key] = value;\n                },\n            };\n        },\n    };\n}\n// @ts-ignore this is to deal with rollup's default import shenanigans\nvar _memoizeIntl = memoize.default || memoize;\nvar memoizeIntl = _memoizeIntl;\nfunction createDefaultFormatters(cache) {\n    if (cache === void 0) { cache = {\n        number: {},\n        dateTime: {},\n        pluralRules: {},\n    }; }\n    return {\n        getNumberFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.NumberFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.number),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getDateTimeFormat: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.DateTimeFormat).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.dateTime),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n        getPluralRules: memoizeIntl(function () {\n            var _a;\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return new ((_a = Intl.PluralRules).bind.apply(_a, __spreadArrays([void 0], args)))();\n        }, {\n            cache: createFastMemoizeCache(cache.pluralRules),\n            strategy: memoizeIntl.strategies.variadic,\n        }),\n    };\n}\nvar IntlMessageFormat = /** @class */ (function () {\n    function IntlMessageFormat(message, locales, overrideFormats, opts) {\n        var _this = this;\n        if (locales === void 0) { locales = IntlMessageFormat.defaultLocale; }\n        this.formatterCache = {\n            number: {},\n            dateTime: {},\n            pluralRules: {},\n        };\n        this.format = function (values) {\n            var parts = _this.formatToParts(values);\n            // Hot path for straight simple msg translations\n            if (parts.length === 1) {\n                return parts[0].value;\n            }\n            var result = parts.reduce(function (all, part) {\n                if (!all.length ||\n                    part.type !== 0 /* literal */ ||\n                    typeof all[all.length - 1] !== 'string') {\n                    all.push(part.value);\n                }\n                else {\n                    all[all.length - 1] += part.value;\n                }\n                return all;\n            }, []);\n            if (result.length <= 1) {\n                return result[0] || '';\n            }\n            return result;\n        };\n        this.formatToParts = function (values) {\n            return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values, undefined, _this.message);\n        };\n        this.resolvedOptions = function () { return ({\n            locale: Intl.NumberFormat.supportedLocalesOf(_this.locales)[0],\n        }); };\n        this.getAst = function () { return _this.ast; };\n        if (typeof message === 'string') {\n            this.message = message;\n            if (!IntlMessageFormat.__parse) {\n                throw new TypeError('IntlMessageFormat.__parse must be set to process `message` of type `string`');\n            }\n            // Parse string messages into an AST.\n            this.ast = IntlMessageFormat.__parse(message, {\n                normalizeHashtagInPlural: false,\n                ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,\n            });\n        }\n        else {\n            this.ast = message;\n        }\n        if (!Array.isArray(this.ast)) {\n            throw new TypeError('A message must be provided as a String or AST.');\n        }\n        // Creates a new object with the specified `formats` merged with the default\n        // formats.\n        this.formats = mergeConfigs(IntlMessageFormat.formats, overrideFormats);\n        // Defined first because it's used to build the format pattern.\n        this.locales = locales;\n        this.formatters =\n            (opts && opts.formatters) || createDefaultFormatters(this.formatterCache);\n    }\n    Object.defineProperty(IntlMessageFormat, \"defaultLocale\", {\n        get: function () {\n            if (!IntlMessageFormat.memoizedDefaultLocale) {\n                IntlMessageFormat.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;\n            }\n            return IntlMessageFormat.memoizedDefaultLocale;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    IntlMessageFormat.memoizedDefaultLocale = null;\n    IntlMessageFormat.__parse = parse;\n    // Default format options used as the prototype of the `formats` provided to the\n    // constructor. These are used when constructing the internal Intl.NumberFormat\n    // and Intl.DateTimeFormat instances.\n    IntlMessageFormat.formats = {\n        number: {\n            currency: {\n                style: 'currency',\n            },\n            percent: {\n                style: 'percent',\n            },\n        },\n        date: {\n            short: {\n                month: 'numeric',\n                day: 'numeric',\n                year: '2-digit',\n            },\n            medium: {\n                month: 'short',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            long: {\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n            full: {\n                weekday: 'long',\n                month: 'long',\n                day: 'numeric',\n                year: 'numeric',\n            },\n        },\n        time: {\n            short: {\n                hour: 'numeric',\n                minute: 'numeric',\n            },\n            medium: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n            },\n            long: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n            full: {\n                hour: 'numeric',\n                minute: 'numeric',\n                second: 'numeric',\n                timeZoneName: 'short',\n            },\n        },\n    };\n    return IntlMessageFormat;\n}());\nexport { IntlMessageFormat };\n"],"sourceRoot":""}