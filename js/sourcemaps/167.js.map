{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/Dropdown.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownItem.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownMenu.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownWithContext.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/KebabToggle.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Dropdown/Toggle.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon.js"],"names":["Dropdown","_a","onSelect","ref","ouiaId","ouiaSafe","props","__rest","value","event","toggleTextClass","toggleIconClass","toggleIndicatorClass","menuClass","itemClass","toggleClass","baseClass","baseComponent","sectionClass","sectionTitleClass","sectionComponent","disabledClass","plainTextClass","useOUIAId","displayName","ouiaComponentType","Object","assign","DropdownItem","children","className","component","isDisabled","isPlainText","isHovered","href","tooltip","tooltipProps","listItemClassName","onClick","additionalChild","customChild","tabIndex","icon","autoFocus","description","styleChildren","ouiaProps","useOUIAProps","context","role","DropdownMenu","super","arguments","this","refsCollection","componentWillUnmount","document","removeEventListener","onKeyDown","isOpen","Array","from","activeElement","classList","find","validToggleClasses","concat","includes","refs","key","firstFocusTargetCollection","hasAttribute","focusFirstRef","collectionLength","length","lastFocusTargetCollection","slice","lastFocusTarget","childKeyHandler","index","innerIndex","position","custom","isGrouped","sendRef","nodes","isSeparator","map","node","getAttribute","addEventListener","focusTargetCollection","focusTarget","focus","setTimeout","groupedChildren","group","isArray","option","child","setMenuComponentRef","openedOnEnter","keyHandler","css","hidden","menuComponent","MenuComponent","extendChildren","defaultProps","refCollection","contextType","DropdownWithContext","baseComponentRef","menuComponentRef","onEnter","element","getMenuComponentRef","dropdownItems","console","error","direction","isPlain","toggle","menuAppendTo","id","currentId","renderedContent","ariaHasPopup","contextId","BaseComponent","menuContainer","popperContainer","mainContainer","getOUIAProps","oneToggle","parentRef","getMenuRef","trigger","popper","appendTo","current","parentElement","getParentElement","isVisible","KebabToggle","ariaLabel","isActive","bubbleEvent","onToggle","Toggle","buttonRef","componentDidMount","onDocClick","onEscPress","capture","menuRef","clickedOnToggle","contains","target","clickedWithinMenu","keyCode","which","escFromToggle","escFromWithinMenu","stopPropagation","preventDefault","isPrimary","isSplitButton","type","disabled","name","height","width","svgPath","yOffset","xOffset"],"mappings":"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","file":"167.7be25d213d8923ea84fa.js","sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownContext } from './dropdownConstants';\nimport { DropdownWithContext } from './DropdownWithContext';\nimport { useOUIAId } from '../../helpers';\nexport const Dropdown = (_a) => {\n    var { onSelect, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref, // Types of Ref are different for React.FC vs React.Component\n    ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"onSelect\", \"ref\", \"ouiaId\", \"ouiaSafe\"]);\n    return (React.createElement(DropdownContext.Provider, { value: {\n            onSelect: event => onSelect && onSelect(event),\n            toggleTextClass: styles.dropdownToggleText,\n            toggleIconClass: styles.dropdownToggleImage,\n            toggleIndicatorClass: styles.dropdownToggleIcon,\n            menuClass: styles.dropdownMenu,\n            itemClass: styles.dropdownMenuItem,\n            toggleClass: styles.dropdownToggle,\n            baseClass: styles.dropdown,\n            baseComponent: 'div',\n            sectionClass: styles.dropdownGroup,\n            sectionTitleClass: styles.dropdownGroupTitle,\n            sectionComponent: 'section',\n            disabledClass: styles.modifiers.disabled,\n            plainTextClass: styles.modifiers.text,\n            ouiaId: useOUIAId(Dropdown.displayName, ouiaId),\n            ouiaSafe,\n            ouiaComponentType: Dropdown.displayName\n        } },\n        React.createElement(DropdownWithContext, Object.assign({}, props))));\n};\nDropdown.displayName = 'Dropdown';\n//# sourceMappingURL=Dropdown.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { InternalDropdownItem } from './InternalDropdownItem';\nimport { DropdownArrowContext } from './dropdownConstants';\nimport { useOUIAProps } from '../../helpers';\nexport const DropdownItem = (_a) => {\n    var { children, className, component = 'a', isDisabled = false, isPlainText = false, isHovered = false, href, tooltip, tooltipProps = {}, listItemClassName, onClick, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref, // Types of Ref are different for React.FC vs React.Component\n    additionalChild, customChild, tabIndex = -1, icon = null, autoFocus, description = null, styleChildren, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isDisabled\", \"isPlainText\", \"isHovered\", \"href\", \"tooltip\", \"tooltipProps\", \"listItemClassName\", \"onClick\", \"ref\", \"additionalChild\", \"customChild\", \"tabIndex\", \"icon\", \"autoFocus\", \"description\", \"styleChildren\", \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = useOUIAProps(DropdownItem.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(DropdownArrowContext.Consumer, null, context => (React.createElement(InternalDropdownItem, Object.assign({ context: context, role: \"menuitem\", tabIndex: tabIndex, className: className, component: component, isDisabled: isDisabled, isPlainText: isPlainText, isHovered: isHovered, href: href, tooltip: tooltip, tooltipProps: tooltipProps, listItemClassName: listItemClassName, onClick: onClick, additionalChild: additionalChild, customChild: customChild, icon: icon, autoFocus: autoFocus, styleChildren: styleChildren, description: description }, ouiaProps, props), children))));\n};\nDropdownItem.displayName = 'DropdownItem';\n//# sourceMappingURL=DropdownItem.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { keyHandler } from '../../helpers/util';\nimport { DropdownPosition, DropdownArrowContext, DropdownContext } from './dropdownConstants';\nexport class DropdownMenu extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.refsCollection = [];\n        this.componentWillUnmount = () => {\n            document.removeEventListener('keydown', this.onKeyDown);\n        };\n        this.onKeyDown = (event) => {\n            if (!this.props.isOpen ||\n                !Array.from(document.activeElement.classList).find(className => DropdownMenu.validToggleClasses.concat(this.context.toggleClass).includes(className))) {\n                return;\n            }\n            const refs = this.refsCollection;\n            if (event.key === 'ArrowDown') {\n                const firstFocusTargetCollection = refs.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n                DropdownMenu.focusFirstRef(firstFocusTargetCollection);\n            }\n            else if (event.key === 'ArrowUp') {\n                const collectionLength = refs.length;\n                const lastFocusTargetCollection = refs.slice(collectionLength - 1, collectionLength);\n                const lastFocusTarget = lastFocusTargetCollection && lastFocusTargetCollection[0];\n                DropdownMenu.focusFirstRef(lastFocusTarget);\n            }\n        };\n        this.childKeyHandler = (index, innerIndex, position, custom = false) => {\n            keyHandler(index, innerIndex, position, this.refsCollection, this.props.isGrouped ? this.refsCollection : React.Children.toArray(this.props.children), custom);\n        };\n        this.sendRef = (index, nodes, isDisabled, isSeparator) => {\n            this.refsCollection[index] = [];\n            nodes.map((node, innerIndex) => {\n                if (!node) {\n                    this.refsCollection[index][innerIndex] = null;\n                }\n                else if (!node.getAttribute) {\n                    // eslint-disable-next-line react/no-find-dom-node\n                    this.refsCollection[index][innerIndex] = ReactDOM.findDOMNode(node);\n                }\n                else if (isSeparator) {\n                    this.refsCollection[index][innerIndex] = null;\n                }\n                else {\n                    this.refsCollection[index][innerIndex] = node;\n                }\n            });\n        };\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.onKeyDown);\n        const { autoFocus } = this.props;\n        if (autoFocus) {\n            // Focus first non-disabled element\n            const focusTargetCollection = this.refsCollection.find(ref => ref && ref[0] && !ref[0].hasAttribute('disabled'));\n            const focusTarget = focusTargetCollection && focusTargetCollection[0];\n            if (focusTarget && focusTarget.focus) {\n                setTimeout(() => focusTarget.focus());\n            }\n        }\n    }\n    shouldComponentUpdate() {\n        // reset refsCollection before updating to account for child removal between mounts\n        this.refsCollection = [];\n        return true;\n    }\n    extendChildren() {\n        const { children, isGrouped } = this.props;\n        if (isGrouped) {\n            let index = 0;\n            return React.Children.map(children, groupedChildren => {\n                const group = groupedChildren;\n                const props = {};\n                if (group.props && group.props.children) {\n                    if (Array.isArray(group.props.children)) {\n                        props.children = React.Children.map(group.props.children, option => React.cloneElement(option, {\n                            index: index++\n                        }));\n                    }\n                    else {\n                        props.children = React.cloneElement(group.props.children, {\n                            index: index++\n                        });\n                    }\n                }\n                return React.cloneElement(group, props);\n            });\n        }\n        return React.Children.map(children, (child, index) => React.cloneElement(child, {\n            index\n        }));\n    }\n    render() {\n        const _a = this.props, { className, isOpen, position, children, component, isGrouped, setMenuComponentRef, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        openedOnEnter } = _a, props = __rest(_a, [\"className\", \"isOpen\", \"position\", \"children\", \"component\", \"isGrouped\", \"setMenuComponentRef\", \"openedOnEnter\"]);\n        return (React.createElement(DropdownArrowContext.Provider, { value: {\n                keyHandler: this.childKeyHandler,\n                sendRef: this.sendRef\n            } }, component === 'div' ? (React.createElement(DropdownContext.Consumer, null, ({ onSelect, menuClass }) => (React.createElement(\"div\", { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, onClick: event => onSelect && onSelect(event), ref: setMenuComponentRef }, children)))) : ((isGrouped && (React.createElement(DropdownContext.Consumer, null, ({ menuClass, menuComponent }) => {\n            const MenuComponent = (menuComponent || 'div');\n            return (React.createElement(MenuComponent, Object.assign({}, props, { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, role: \"menu\", ref: setMenuComponentRef }), this.extendChildren()));\n        }))) || (React.createElement(DropdownContext.Consumer, null, ({ menuClass, menuComponent }) => {\n            const MenuComponent = (menuComponent || component);\n            return (React.createElement(MenuComponent, Object.assign({}, props, { className: css(menuClass, position === DropdownPosition.right && styles.modifiers.alignRight, className), hidden: !isOpen, role: \"menu\", ref: setMenuComponentRef }), this.extendChildren()));\n        })))));\n    }\n}\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = {\n    className: '',\n    isOpen: true,\n    openedOnEnter: false,\n    autoFocus: true,\n    position: DropdownPosition.left,\n    component: 'ul',\n    isGrouped: false,\n    setMenuComponentRef: null\n};\nDropdownMenu.validToggleClasses = [styles.dropdownToggle, styles.dropdownToggleButton];\nDropdownMenu.focusFirstRef = (refCollection) => {\n    if (refCollection && refCollection[0] && refCollection[0].focus) {\n        setTimeout(() => refCollection[0].focus());\n    }\n};\nDropdownMenu.contextType = DropdownContext;\n//# sourceMappingURL=DropdownMenu.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { css } from '@patternfly/react-styles';\nimport { DropdownMenu } from './DropdownMenu';\nimport { DropdownContext, DropdownDirection, DropdownPosition } from './dropdownConstants';\nimport { getOUIAProps } from '../../helpers';\nimport { Popper } from '../../helpers/Popper/Popper';\nexport class DropdownWithContext extends React.Component {\n    constructor(props) {\n        super(props);\n        this.openedOnEnter = false;\n        this.baseComponentRef = React.createRef();\n        this.menuComponentRef = React.createRef();\n        this.onEnter = () => {\n            this.openedOnEnter = true;\n        };\n        this.setMenuComponentRef = (element) => {\n            this.menuComponentRef = element;\n        };\n        this.getMenuComponentRef = () => this.menuComponentRef;\n        if (props.dropdownItems && props.dropdownItems.length > 0 && props.children) {\n            // eslint-disable-next-line no-console\n            console.error('Children and dropdownItems props have been provided. Only the dropdownItems prop items will be rendered');\n        }\n    }\n    componentDidUpdate() {\n        if (!this.props.isOpen) {\n            this.openedOnEnter = false;\n        }\n    }\n    render() {\n        const _a = this.props, { children, className, direction, dropdownItems, isOpen, isPlain, isGrouped, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onSelect, position, toggle, autoFocus, menuAppendTo } = _a, props = __rest(_a, [\"children\", \"className\", \"direction\", \"dropdownItems\", \"isOpen\", \"isPlain\", \"isGrouped\", \"onSelect\", \"position\", \"toggle\", \"autoFocus\", \"menuAppendTo\"]);\n        const id = toggle.props.id || `pf-dropdown-toggle-id-${DropdownWithContext.currentId++}`;\n        let component;\n        let renderedContent;\n        let ariaHasPopup = false;\n        if (dropdownItems && dropdownItems.length > 0) {\n            component = 'ul';\n            renderedContent = dropdownItems;\n            ariaHasPopup = true;\n        }\n        else {\n            component = 'div';\n            renderedContent = React.Children.toArray(children);\n        }\n        const openedOnEnter = this.openedOnEnter;\n        return (React.createElement(DropdownContext.Consumer, null, ({ baseClass, baseComponent, id: contextId, ouiaId, ouiaComponentType, ouiaSafe }) => {\n            const BaseComponent = baseComponent;\n            const menuContainer = (React.createElement(DropdownMenu, { setMenuComponentRef: this.setMenuComponentRef, component: component, isOpen: isOpen, position: position, \"aria-labelledby\": contextId ? `${contextId}-toggle` : id, isGrouped: isGrouped, autoFocus: openedOnEnter && autoFocus }, renderedContent));\n            const popperContainer = (React.createElement(\"div\", { className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className) }, isOpen && menuContainer));\n            const mainContainer = (React.createElement(BaseComponent, Object.assign({}, props, { className: css(baseClass, direction === DropdownDirection.up && styles.modifiers.top, position === DropdownPosition.right && styles.modifiers.alignRight, isOpen && styles.modifiers.expanded, className), ref: this.baseComponentRef }, getOUIAProps(ouiaComponentType, ouiaId, ouiaSafe)),\n                React.Children.map(toggle, oneToggle => React.cloneElement(oneToggle, {\n                    parentRef: this.baseComponentRef,\n                    getMenuRef: this.getMenuComponentRef,\n                    isOpen,\n                    id,\n                    isPlain,\n                    'aria-haspopup': ariaHasPopup,\n                    onEnter: () => this.onEnter()\n                })),\n                menuAppendTo === 'inline' && isOpen && menuContainer));\n            const getParentElement = () => {\n                if (this.baseComponentRef && this.baseComponentRef.current) {\n                    return this.baseComponentRef.current.parentElement;\n                }\n                return null;\n            };\n            return menuAppendTo === 'inline' ? (mainContainer) : (React.createElement(Popper, { trigger: mainContainer, popper: popperContainer, direction: direction, position: position, appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo, isVisible: isOpen }));\n        }));\n    }\n}\nDropdownWithContext.displayName = 'DropdownWithContext';\n// seed for the aria-labelledby ID\nDropdownWithContext.currentId = 0;\nDropdownWithContext.defaultProps = {\n    className: '',\n    dropdownItems: [],\n    isOpen: false,\n    isPlain: false,\n    isGrouped: false,\n    position: DropdownPosition.left,\n    direction: DropdownDirection.down,\n    onSelect: () => undefined,\n    autoFocus: true,\n    menuAppendTo: 'inline'\n};\n//# sourceMappingURL=DropdownWithContext.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport EllipsisVIcon from \"@patternfly/react-icons/dist/esm/icons/ellipsis-v-icon\";\nimport { Toggle } from './Toggle';\nexport const KebabToggle = (_a) => {\n    var { id = '', \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    children = null, className = '', isOpen = false, 'aria-label': ariaLabel = 'Actions', parentRef = null, getMenuRef = null, isActive = false, isPlain = false, isDisabled = false, bubbleEvent = false, onToggle = () => undefined, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ref } = _a, // Types of Ref are different for React.FC vs React.Component\n    props = __rest(_a, [\"id\", \"children\", \"className\", \"isOpen\", 'aria-label', \"parentRef\", \"getMenuRef\", \"isActive\", \"isPlain\", \"isDisabled\", \"bubbleEvent\", \"onToggle\", \"ref\"]);\n    return (React.createElement(Toggle, Object.assign({ id: id, className: className, isOpen: isOpen, \"aria-label\": ariaLabel, parentRef: parentRef, getMenuRef: getMenuRef, isActive: isActive, isPlain: isPlain, isDisabled: isDisabled, onToggle: onToggle, bubbleEvent: bubbleEvent }, props),\n        React.createElement(EllipsisVIcon, null)));\n};\nKebabToggle.displayName = 'KebabToggle';\n//# sourceMappingURL=KebabToggle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Dropdown/dropdown';\nimport { DropdownContext } from './dropdownConstants';\nimport { css } from '@patternfly/react-styles';\nimport { KEY_CODES } from '../../helpers/constants';\nexport class Toggle extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buttonRef = React.createRef();\n        this.componentDidMount = () => {\n            document.addEventListener('mousedown', this.onDocClick);\n            document.addEventListener('touchstart', this.onDocClick);\n            document.addEventListener('keydown', this.onEscPress, { capture: true });\n        };\n        this.componentWillUnmount = () => {\n            document.removeEventListener('mousedown', this.onDocClick);\n            document.removeEventListener('touchstart', this.onDocClick);\n            document.removeEventListener('keydown', this.onEscPress, { capture: true });\n        };\n        this.onDocClick = (event) => {\n            const { isOpen, parentRef, onToggle, getMenuRef } = this.props;\n            const menuRef = getMenuRef && getMenuRef();\n            const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n            const clickedWithinMenu = menuRef && menuRef.contains && menuRef.contains(event.target);\n            if (isOpen && !(clickedOnToggle || clickedWithinMenu)) {\n                onToggle(false, event);\n                this.buttonRef.current.focus();\n            }\n        };\n        this.onEscPress = (event) => {\n            const { parentRef, getMenuRef } = this.props;\n            const keyCode = event.keyCode || event.which;\n            const menuRef = getMenuRef && getMenuRef();\n            const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);\n            const escFromWithinMenu = menuRef && menuRef.contains && menuRef.contains(event.target);\n            if (this.props.isOpen &&\n                (keyCode === KEY_CODES.ESCAPE_KEY || event.key === 'Tab') &&\n                (escFromToggle || escFromWithinMenu)) {\n                this.props.onToggle(false, event);\n                this.buttonRef.current.focus();\n            }\n        };\n        this.onKeyDown = (event) => {\n            if (event.key === 'Tab' && !this.props.isOpen) {\n                return;\n            }\n            if (!this.props.bubbleEvent) {\n                event.stopPropagation();\n            }\n            event.preventDefault();\n            if ((event.key === 'Tab' || event.key === 'Enter' || event.key === ' ') && this.props.isOpen) {\n                this.props.onToggle(!this.props.isOpen, event);\n            }\n            else if ((event.key === 'Enter' || event.key === ' ' || event.key === 'ArrowDown') && !this.props.isOpen) {\n                this.props.onToggle(!this.props.isOpen, event);\n                this.props.onEnter();\n            }\n        };\n    }\n    render() {\n        const _a = this.props, { className, children, isOpen, isDisabled, isPlain, isPrimary, isSplitButton, onToggle, 'aria-haspopup': ariaHasPopup, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        isActive, bubbleEvent, onEnter, parentRef, getMenuRef, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        id, type } = _a, props = __rest(_a, [\"className\", \"children\", \"isOpen\", \"isDisabled\", \"isPlain\", \"isPrimary\", \"isSplitButton\", \"onToggle\", 'aria-haspopup', \"isActive\", \"bubbleEvent\", \"onEnter\", \"parentRef\", \"getMenuRef\", \"id\", \"type\"]);\n        return (React.createElement(DropdownContext.Consumer, null, ({ toggleClass }) => (React.createElement(\"button\", Object.assign({}, props, { id: id, ref: this.buttonRef, className: css(isSplitButton ? styles.dropdownToggleButton : toggleClass || styles.dropdownToggle, isActive && styles.modifiers.active, isPlain && styles.modifiers.plain, isPrimary && styles.modifiers.primary, className), type: type || 'button', onClick: event => onToggle(!isOpen, event), \"aria-expanded\": isOpen, \"aria-haspopup\": ariaHasPopup, onKeyDown: event => this.onKeyDown(event), disabled: isDisabled }), children))));\n    }\n}\nToggle.displayName = 'Toggle';\nToggle.defaultProps = {\n    className: '',\n    isOpen: false,\n    isActive: false,\n    isDisabled: false,\n    isPlain: false,\n    isPrimary: false,\n    isSplitButton: false,\n    onToggle: () => { },\n    onEnter: () => { },\n    bubbleEvent: false\n};\n//# sourceMappingURL=Toggle.js.map","import { createIcon } from '../createIcon';\n\nexport const EllipsisVIconConfig = {\n  name: 'EllipsisVIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EllipsisVIcon = createIcon(EllipsisVIconConfig);\n\nexport default EllipsisVIcon;"],"sourceRoot":""}