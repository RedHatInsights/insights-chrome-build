"use strict";
(self["webpackChunkinsights_chrome"] = self["webpackChunkinsights_chrome"] || []).push([["vendors-node_modules_patternfly_react-core_dist_esm_components_Drawer_DrawerContent_js-node_m-6def4b"],{

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Drawer: () => (/* binding */ Drawer),
/* harmony export */   DrawerColorVariant: () => (/* binding */ DrawerColorVariant),
/* harmony export */   DrawerContext: () => (/* binding */ DrawerContext)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Drawer/drawer.mjs */ "./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");




var DrawerColorVariant;
(function (DrawerColorVariant) {
    DrawerColorVariant["default"] = "default";
    DrawerColorVariant["light200"] = "light-200";
    DrawerColorVariant["noBackground"] = "no-background";
})(DrawerColorVariant || (DrawerColorVariant = {}));
const DrawerContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext({
    isExpanded: false,
    isStatic: false,
    onExpand: () => { },
    position: 'end',
    drawerRef: null,
    drawerContentRef: null,
    isInline: false
});
const Drawer = (_a) => {
    var { className = '', children, isExpanded = false, isInline = false, isStatic = false, position = 'end', onExpand = () => { } } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["className", "children", "isExpanded", "isInline", "isStatic", "position", "onExpand"]);
    const drawerRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    const drawerContentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(DrawerContext.Provider, { value: { isExpanded, isStatic, onExpand, position, drawerRef, drawerContentRef, isInline } },
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].drawer, isExpanded && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.expanded, isInline && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.inline, isStatic && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.static, (position === 'left' || position === 'start') && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.panelLeft, position === 'bottom' && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.panelBottom, className), ref: drawerRef }, props), children)));
};
Drawer.displayName = 'Drawer';
//# sourceMappingURL=Drawer.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContent.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContent.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DrawerContent: () => (/* binding */ DrawerContent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Drawer/drawer.mjs */ "./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _DrawerMain__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DrawerMain */ "./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerMain.js");
/* harmony import */ var _Drawer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Drawer */ "./node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js");






const DrawerContent = (_a) => {
    var { 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = '', children, panelContent, colorVariant = _Drawer__WEBPACK_IMPORTED_MODULE_1__.DrawerColorVariant.default } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, ["className", "children", "panelContent", "colorVariant"]);
    const { drawerContentRef } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_Drawer__WEBPACK_IMPORTED_MODULE_1__.DrawerContext);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_DrawerMain__WEBPACK_IMPORTED_MODULE_3__.DrawerMain, null,
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].drawerContent, colorVariant === _Drawer__WEBPACK_IMPORTED_MODULE_1__.DrawerColorVariant.light200 && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.light_200, colorVariant === _Drawer__WEBPACK_IMPORTED_MODULE_1__.DrawerColorVariant.noBackground && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.noBackground, className), ref: drawerContentRef }, props), children),
        panelContent));
};
DrawerContent.displayName = 'DrawerContent';
//# sourceMappingURL=DrawerContent.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContentBody.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContentBody.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DrawerContentBody: () => (/* binding */ DrawerContentBody)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Drawer/drawer.mjs */ "./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");




const DrawerContentBody = (_a) => {
    var { 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = '', children, hasPadding = false } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["className", "children", "hasPadding"]);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].drawerBody, hasPadding && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.padding, className) }, props), children));
};
DrawerContentBody.displayName = 'DrawerContentBody';
//# sourceMappingURL=DrawerContentBody.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerMain.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerMain.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DrawerMain: () => (/* binding */ DrawerMain)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Drawer/drawer.mjs */ "./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");




const DrawerMain = (_a) => {
    var { 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className = '', children } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["className", "children"]);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].drawerMain, className) }, props), children));
};
DrawerMain.displayName = 'DrawerMain';
//# sourceMappingURL=DrawerMain.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerPanelContent.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerPanelContent.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   DrawerPanelContent: () => (/* binding */ DrawerPanelContent)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Drawer/drawer.mjs */ "./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _Drawer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Drawer */ "./node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js");
/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/util */ "./node_modules/@patternfly/react-core/dist/esm/helpers/util.js");
/* harmony import */ var _helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/GenerateId/GenerateId */ "./node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js");
/* harmony import */ var _helpers_FocusTrap_FocusTrap__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../helpers/FocusTrap/FocusTrap */ "./node_modules/@patternfly/react-core/dist/esm/helpers/FocusTrap/FocusTrap.js");
/* harmony import */ var _patternfly_react_tokens_dist_esm_c_drawer_panel_md_FlexBasis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis */ "./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis.js");
/* harmony import */ var _patternfly_react_tokens_dist_esm_c_drawer_panel_md_FlexBasis_min__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis_min */ "./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis_min.js");
/* harmony import */ var _patternfly_react_tokens_dist_esm_c_drawer_panel_md_FlexBasis_max__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis_max */ "./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis_max.js");











let isResizing = null;
let newSize = 0;
const DrawerPanelContent = (_a) => {
    var { className = '', id, children, hasNoBorder = false, isResizable = false, onResize, minSize, defaultSize, maxSize, increment = 5, resizeAriaLabel = 'Resize', widths, colorVariant = _Drawer__WEBPACK_IMPORTED_MODULE_1__.DrawerColorVariant.default, focusTrap } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, ["className", "id", "children", "hasNoBorder", "isResizable", "onResize", "minSize", "defaultSize", "maxSize", "increment", "resizeAriaLabel", "widths", "colorVariant", "focusTrap"]);
    const panel = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    const splitterRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    const [separatorValue, setSeparatorValue] = react__WEBPACK_IMPORTED_MODULE_0__.useState(0);
    const { position, isExpanded, isStatic, onExpand, drawerRef, drawerContentRef, isInline } = react__WEBPACK_IMPORTED_MODULE_0__.useContext(_Drawer__WEBPACK_IMPORTED_MODULE_1__.DrawerContext);
    const hidden = isStatic ? false : !isExpanded;
    const [isExpandedInternal, setIsExpandedInternal] = react__WEBPACK_IMPORTED_MODULE_0__.useState(!hidden);
    const [isFocusTrapActive, setIsFocusTrapActive] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);
    const previouslyFocusedElement = react__WEBPACK_IMPORTED_MODULE_0__.useRef(null);
    let currWidth = 0;
    let panelRect;
    let end;
    let start;
    let bottom;
    let setInitialVals = true;
    if (isStatic && (focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.enabled)) {
        // eslint-disable-next-line no-console
        console.warn(`DrawerPanelContent: The focusTrap.enabled prop cannot be true if the Drawer's isStatic prop is true. This will cause a permanent focus trap.`);
    }
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        if (!isStatic && isExpanded) {
            setIsExpandedInternal(isExpanded);
        }
    }, [isStatic, isExpanded]);
    const calcValueNow = () => {
        let splitterPos;
        let drawerSize;
        const isRTL = (0,_helpers_util__WEBPACK_IMPORTED_MODULE_3__.getLanguageDirection)(panel.current) === 'rtl';
        if (isInline && (position === 'end' || position === 'right')) {
            if (isRTL) {
                splitterPos = panel.current.getBoundingClientRect().left - splitterRef.current.getBoundingClientRect().right;
                drawerSize = drawerRef.current.getBoundingClientRect().left - drawerRef.current.getBoundingClientRect().right;
            }
            else {
                splitterPos = panel.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;
                drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;
            }
        }
        else if (isInline && (position === 'start' || position === 'left')) {
            if (isRTL) {
                splitterPos = splitterRef.current.getBoundingClientRect().left - panel.current.getBoundingClientRect().right;
                drawerSize = drawerRef.current.getBoundingClientRect().left - drawerRef.current.getBoundingClientRect().right;
            }
            else {
                splitterPos = splitterRef.current.getBoundingClientRect().right - panel.current.getBoundingClientRect().left;
                drawerSize = drawerRef.current.getBoundingClientRect().right - drawerRef.current.getBoundingClientRect().left;
            }
        }
        else if (position === 'end' || position === 'right') {
            if (isRTL) {
                splitterPos =
                    drawerContentRef.current.getBoundingClientRect().left - splitterRef.current.getBoundingClientRect().right;
                drawerSize =
                    drawerContentRef.current.getBoundingClientRect().left -
                        drawerContentRef.current.getBoundingClientRect().right;
            }
            else {
                splitterPos =
                    drawerContentRef.current.getBoundingClientRect().right - splitterRef.current.getBoundingClientRect().left;
                drawerSize =
                    drawerContentRef.current.getBoundingClientRect().right -
                        drawerContentRef.current.getBoundingClientRect().left;
            }
        }
        else if (position === 'start' || position === 'left') {
            if (isRTL) {
                splitterPos =
                    splitterRef.current.getBoundingClientRect().left - drawerContentRef.current.getBoundingClientRect().right;
                drawerSize =
                    drawerContentRef.current.getBoundingClientRect().left -
                        drawerContentRef.current.getBoundingClientRect().right;
            }
            else {
                splitterPos =
                    splitterRef.current.getBoundingClientRect().right - drawerContentRef.current.getBoundingClientRect().left;
                drawerSize =
                    drawerContentRef.current.getBoundingClientRect().right -
                        drawerContentRef.current.getBoundingClientRect().left;
            }
        }
        else if (position === 'bottom') {
            splitterPos =
                drawerContentRef.current.getBoundingClientRect().bottom - splitterRef.current.getBoundingClientRect().top;
            drawerSize =
                drawerContentRef.current.getBoundingClientRect().bottom - drawerContentRef.current.getBoundingClientRect().top;
        }
        const newSplitterPos = (splitterPos / drawerSize) * 100;
        return Math.round((newSplitterPos + Number.EPSILON) * 100) / 100;
    };
    const handleTouchStart = (e) => {
        e.stopPropagation();
        document.addEventListener('touchmove', callbackTouchMove, { passive: false });
        document.addEventListener('touchend', callbackTouchEnd);
        isResizing = true;
    };
    const handleMousedown = (e) => {
        e.stopPropagation();
        e.preventDefault();
        document.addEventListener('mousemove', callbackMouseMove);
        document.addEventListener('mouseup', callbackMouseUp);
        drawerRef.current.classList.add((0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.resizing));
        isResizing = true;
        setInitialVals = true;
    };
    const handleMouseMove = (e) => {
        const mousePos = position === 'bottom' ? e.clientY : e.clientX;
        handleControlMove(e, mousePos);
    };
    const handleTouchMove = (e) => {
        e.preventDefault();
        e.stopImmediatePropagation();
        const touchPos = position === 'bottom' ? e.touches[0].clientY : e.touches[0].clientX;
        handleControlMove(e, touchPos);
    };
    const handleControlMove = (e, controlPosition) => {
        const isRTL = (0,_helpers_util__WEBPACK_IMPORTED_MODULE_3__.getLanguageDirection)(panel.current) === 'rtl';
        e.stopPropagation();
        if (!isResizing) {
            return;
        }
        if (setInitialVals) {
            panelRect = panel.current.getBoundingClientRect();
            if (isRTL) {
                start = panelRect.right;
                end = panelRect.left;
            }
            else {
                end = panelRect.right;
                start = panelRect.left;
            }
            bottom = panelRect.bottom;
            setInitialVals = false;
        }
        const mousePos = controlPosition;
        let newSize = 0;
        if (position === 'end' || position === 'right') {
            newSize = isRTL ? mousePos - end : end - mousePos;
        }
        else if (position === 'start' || position === 'left') {
            newSize = isRTL ? start - mousePos : mousePos - start;
        }
        else {
            newSize = bottom - mousePos;
        }
        if (position === 'bottom') {
            panel.current.style.overflowAnchor = 'none';
        }
        panel.current.style.setProperty(_patternfly_react_tokens_dist_esm_c_drawer_panel_md_FlexBasis__WEBPACK_IMPORTED_MODULE_6__["default"].name, newSize + 'px');
        currWidth = newSize;
        setSeparatorValue(calcValueNow());
    };
    const handleMouseup = (e) => {
        if (!isResizing) {
            return;
        }
        drawerRef.current.classList.remove((0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.resizing));
        isResizing = false;
        onResize && onResize(e, currWidth, id);
        setInitialVals = true;
        document.removeEventListener('mousemove', callbackMouseMove);
        document.removeEventListener('mouseup', callbackMouseUp);
    };
    const handleTouchEnd = (e) => {
        e.stopPropagation();
        if (!isResizing) {
            return;
        }
        isResizing = false;
        onResize && onResize(e, currWidth, id);
        document.removeEventListener('touchmove', callbackTouchMove);
        document.removeEventListener('touchend', callbackTouchEnd);
    };
    const callbackMouseMove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(handleMouseMove, []);
    const callbackTouchEnd = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(handleTouchEnd, []);
    const callbackTouchMove = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(handleTouchMove, []);
    const callbackMouseUp = react__WEBPACK_IMPORTED_MODULE_0__.useCallback(handleMouseup, []);
    const handleKeys = (e) => {
        const isRTL = (0,_helpers_util__WEBPACK_IMPORTED_MODULE_3__.getLanguageDirection)(panel.current) === 'rtl';
        const key = e.key;
        if (key !== 'Escape' &&
            key !== 'Enter' &&
            key !== 'ArrowUp' &&
            key !== 'ArrowDown' &&
            key !== 'ArrowLeft' &&
            key !== 'ArrowRight') {
            if (isResizing) {
                e.preventDefault();
            }
            return;
        }
        e.preventDefault();
        if (key === 'Escape' || key === 'Enter') {
            onResize && onResize(e, currWidth, id);
        }
        const panelRect = panel.current.getBoundingClientRect();
        newSize = position === 'bottom' ? panelRect.height : panelRect.width;
        let delta = 0;
        if (key === 'ArrowRight') {
            if (isRTL) {
                delta = position === 'left' || position === 'start' ? -increment : increment;
            }
            else {
                delta = position === 'left' || position === 'start' ? increment : -increment;
            }
        }
        else if (key === 'ArrowLeft') {
            if (isRTL) {
                delta = position === 'left' || position === 'start' ? increment : -increment;
            }
            else {
                delta = position === 'left' || position === 'start' ? -increment : increment;
            }
        }
        else if (key === 'ArrowUp') {
            delta = increment;
        }
        else if (key === 'ArrowDown') {
            delta = -increment;
        }
        newSize = newSize + delta;
        if (position === 'bottom') {
            panel.current.style.overflowAnchor = 'none';
        }
        panel.current.style.setProperty(_patternfly_react_tokens_dist_esm_c_drawer_panel_md_FlexBasis__WEBPACK_IMPORTED_MODULE_6__["default"].name, newSize + 'px');
        currWidth = newSize;
        setSeparatorValue(calcValueNow());
    };
    const boundaryCssVars = {};
    if (defaultSize) {
        boundaryCssVars[_patternfly_react_tokens_dist_esm_c_drawer_panel_md_FlexBasis__WEBPACK_IMPORTED_MODULE_6__["default"].name] = defaultSize;
    }
    if (minSize) {
        boundaryCssVars[_patternfly_react_tokens_dist_esm_c_drawer_panel_md_FlexBasis_min__WEBPACK_IMPORTED_MODULE_7__["default"].name] = minSize;
    }
    if (maxSize) {
        boundaryCssVars[_patternfly_react_tokens_dist_esm_c_drawer_panel_md_FlexBasis_max__WEBPACK_IMPORTED_MODULE_8__["default"].name] = maxSize;
    }
    const isValidFocusTrap = (focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.enabled) && !isStatic;
    const Component = isValidFocusTrap ? _helpers_FocusTrap_FocusTrap__WEBPACK_IMPORTED_MODULE_9__.FocusTrap : 'div';
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_10__.GenerateId, { prefix: "pf-drawer-panel-" }, (panelId) => {
        const focusTrapProps = {
            tabIndex: -1,
            'aria-modal': true,
            role: 'dialog',
            active: isFocusTrapActive,
            'aria-labelledby': (focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap['aria-labelledby']) || id || panelId,
            focusTrapOptions: {
                fallbackFocus: () => panel.current,
                onActivate: () => {
                    if (previouslyFocusedElement.current !== document.activeElement) {
                        previouslyFocusedElement.current = document.activeElement;
                    }
                },
                onDeactivate: () => {
                    previouslyFocusedElement.current &&
                        previouslyFocusedElement.current.focus &&
                        previouslyFocusedElement.current.focus();
                },
                clickOutsideDeactivates: true,
                returnFocusOnDeactivate: false,
                // FocusTrap's initialFocus can accept false as a value to prevent initial focus.
                // We want to prevent this in case false is ever passed in.
                initialFocus: (focusTrap === null || focusTrap === void 0 ? void 0 : focusTrap.elementToFocusOnExpand) || undefined,
                escapeDeactivates: false
            }
        };
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, Object.assign({}, (isValidFocusTrap && focusTrapProps), { id: id || panelId, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].drawerPanel, isResizable && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.resizable, hasNoBorder && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.noBorder, (0,_helpers_util__WEBPACK_IMPORTED_MODULE_3__.formatBreakpointMods)(widths, _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"]), colorVariant === _Drawer__WEBPACK_IMPORTED_MODULE_1__.DrawerColorVariant.light200 && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.light_200, colorVariant === _Drawer__WEBPACK_IMPORTED_MODULE_1__.DrawerColorVariant.noBackground && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.noBackground, className), onTransitionEnd: (ev) => {
                if (ev.target === panel.current) {
                    if (!hidden && ev.nativeEvent.propertyName === 'transform') {
                        onExpand(ev);
                    }
                    setIsExpandedInternal(!hidden);
                    if (isValidFocusTrap && ev.nativeEvent.propertyName === 'transform') {
                        setIsFocusTrapActive((prevIsFocusTrapActive) => !prevIsFocusTrapActive);
                    }
                }
            }, hidden: hidden }, ((defaultSize || minSize || maxSize) && {
            style: boundaryCssVars
        }), props, { ref: panel }), isExpandedInternal && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
            isResizable && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].drawerSplitter, position !== 'bottom' && _patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.vertical), role: "separator", tabIndex: 0, "aria-orientation": position === 'bottom' ? 'horizontal' : 'vertical', "aria-label": resizeAriaLabel, "aria-valuenow": separatorValue, "aria-valuemin": 0, "aria-valuemax": 100, "aria-controls": id || panelId, onMouseDown: handleMousedown, onKeyDown: handleKeys, onTouchStart: handleTouchStart, ref: splitterRef },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].drawerSplitterHandle), "aria-hidden": true })),
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Drawer_drawer_mjs__WEBPACK_IMPORTED_MODULE_5__["default"].drawerPanelMain) }, children))),
            !isResizable && children))));
    }));
};
DrawerPanelContent.displayName = 'DrawerPanelContent';
//# sourceMappingURL=DrawerPanelContent.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c_drawer__panel_md_FlexBasis: () => (/* binding */ c_drawer__panel_md_FlexBasis),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const c_drawer__panel_md_FlexBasis = {
  "name": "--pf-v5-c-drawer__panel--md--FlexBasis",
  "value": "50%",
  "var": "var(--pf-v5-c-drawer__panel--md--FlexBasis)"
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (c_drawer__panel_md_FlexBasis);

/***/ }),

/***/ "./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis_max.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis_max.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c_drawer__panel_md_FlexBasis_max: () => (/* binding */ c_drawer__panel_md_FlexBasis_max),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const c_drawer__panel_md_FlexBasis_max = {
  "name": "--pf-v5-c-drawer__panel--md--FlexBasis--max",
  "value": "100%",
  "var": "var(--pf-v5-c-drawer__panel--md--FlexBasis--max)"
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (c_drawer__panel_md_FlexBasis_max);

/***/ }),

/***/ "./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis_min.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-tokens/dist/esm/c_drawer__panel_md_FlexBasis_min.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   c_drawer__panel_md_FlexBasis_min: () => (/* binding */ c_drawer__panel_md_FlexBasis_min),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const c_drawer__panel_md_FlexBasis_min = {
  "name": "--pf-v5-c-drawer__panel--md--FlexBasis--min",
  "value": "1.5rem",
  "var": "var(--pf-v5-c-drawer__panel--md--FlexBasis--min)"
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (c_drawer__panel_md_FlexBasis_min);

/***/ }),

/***/ "./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _drawer_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./drawer.css */ "?1554");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  "dirRtl": "pf-v5-m-dir-rtl",
  "drawer": "pf-v5-c-drawer",
  "drawerActions": "pf-v5-c-drawer__actions",
  "drawerBody": "pf-v5-c-drawer__body",
  "drawerClose": "pf-v5-c-drawer__close",
  "drawerContent": "pf-v5-c-drawer__content",
  "drawerHead": "pf-v5-c-drawer__head",
  "drawerMain": "pf-v5-c-drawer__main",
  "drawerPanel": "pf-v5-c-drawer__panel",
  "drawerPanelMain": "pf-v5-c-drawer__panel-main",
  "drawerSection": "pf-v5-c-drawer__section",
  "drawerSplitter": "pf-v5-c-drawer__splitter",
  "drawerSplitterHandle": "pf-v5-c-drawer__splitter-handle",
  "modifiers": {
    "panelBottom": "pf-m-panel-bottom",
    "inline": "pf-m-inline",
    "noBorder": "pf-m-no-border",
    "resizable": "pf-m-resizable",
    "static": "pf-m-static",
    "panelLeft": "pf-m-panel-left",
    "expanded": "pf-m-expanded",
    "resizing": "pf-m-resizing",
    "noBackground": "pf-m-no-background",
    "light_200": "pf-m-light-200",
    "noPadding": "pf-m-no-padding",
    "padding": "pf-m-padding",
    "vertical": "pf-m-vertical",
    "width_25": "pf-m-width-25",
    "width_33": "pf-m-width-33",
    "width_50": "pf-m-width-50",
    "width_66": "pf-m-width-66",
    "width_75": "pf-m-width-75",
    "width_100": "pf-m-width-100",
    "width_25OnLg": "pf-m-width-25-on-lg",
    "width_33OnLg": "pf-m-width-33-on-lg",
    "width_50OnLg": "pf-m-width-50-on-lg",
    "width_66OnLg": "pf-m-width-66-on-lg",
    "width_75OnLg": "pf-m-width-75-on-lg",
    "width_100OnLg": "pf-m-width-100-on-lg",
    "width_25OnXl": "pf-m-width-25-on-xl",
    "width_33OnXl": "pf-m-width-33-on-xl",
    "width_50OnXl": "pf-m-width-50-on-xl",
    "width_66OnXl": "pf-m-width-66-on-xl",
    "width_75OnXl": "pf-m-width-75-on-xl",
    "width_100OnXl": "pf-m-width-100-on-xl",
    "width_25On_2xl": "pf-m-width-25-on-2xl",
    "width_33On_2xl": "pf-m-width-33-on-2xl",
    "width_50On_2xl": "pf-m-width-50-on-2xl",
    "width_66On_2xl": "pf-m-width-66-on-2xl",
    "width_75On_2xl": "pf-m-width-75-on-2xl",
    "width_100On_2xl": "pf-m-width-100-on-2xl",
    "inlineOnLg": "pf-m-inline-on-lg",
    "staticOnLg": "pf-m-static-on-lg",
    "inlineOnXl": "pf-m-inline-on-xl",
    "staticOnXl": "pf-m-static-on-xl",
    "inlineOn_2xl": "pf-m-inline-on-2xl",
    "staticOn_2xl": "pf-m-static-on-2xl"
  },
  "pageMain": "pf-v5-c-page__main",
  "themeDark": "pf-v5-theme-dark"
});

/***/ })

}]);