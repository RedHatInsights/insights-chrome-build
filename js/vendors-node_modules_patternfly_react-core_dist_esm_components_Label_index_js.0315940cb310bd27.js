"use strict";
(self["webpackChunkinsights_chrome"] = self["webpackChunkinsights_chrome"] || []).push([["vendors-node_modules_patternfly_react-core_dist_esm_components_Label_index_js"],{

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Label: () => (/* binding */ Label)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Label/label */ "./node_modules/@patternfly/react-styles/css/components/Label/label.js");
/* harmony import */ var _patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Label/label-group */ "./node_modules/@patternfly/react-styles/css/components/Label/label-group.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Button */ "./node_modules/@patternfly/react-core/dist/esm/components/Button/Button.js");
/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Tooltip */ "./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_times_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/times-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/times-icon.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers */ "./node_modules/@patternfly/react-core/dist/esm/helpers/useIsomorphicLayout.js");










const colorStyles = {
    blue: _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.blue,
    cyan: _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.cyan,
    green: _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.green,
    orange: _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.orange,
    purple: _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.purple,
    red: _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.red,
    gold: _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.gold,
    grey: ''
};
const Label = (_a) => {
    var { children, className = '', color = 'grey', variant = 'filled', isCompact = false, isEditable = false, editableProps, textMaxWidth, tooltipPosition, icon, onClose, onEditCancel, onEditComplete, closeBtn, closeBtnAriaLabel, closeBtnProps, href, isOverflowLabel, render } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, ["children", "className", "color", "variant", "isCompact", "isEditable", "editableProps", "textMaxWidth", "tooltipPosition", "icon", "onClose", "onEditCancel", "onEditComplete", "closeBtn", "closeBtnAriaLabel", "closeBtnProps", "href", "isOverflowLabel", "render"]);
    const [isEditableActive, setIsEditableActive] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
    const [currValue, setCurrValue] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(children);
    const editableButtonRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    const editableInputRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        document.addEventListener('mousedown', onDocMouseDown);
        document.addEventListener('keydown', onKeyDown);
        return () => {
            document.removeEventListener('mousedown', onDocMouseDown);
            document.removeEventListener('keydown', onKeyDown);
        };
    });
    const onDocMouseDown = (event) => {
        if (isEditableActive &&
            editableInputRef &&
            editableInputRef.current &&
            !editableInputRef.current.contains(event.target)) {
            if (editableInputRef.current.value) {
                onEditComplete && onEditComplete(event, editableInputRef.current.value);
            }
            setIsEditableActive(false);
        }
    };
    const onKeyDown = (event) => {
        var _a, _b;
        const key = event.key;
        if ((!isEditableActive &&
            (!editableButtonRef ||
                !editableButtonRef.current ||
                !editableButtonRef.current.contains(event.target))) ||
            (isEditableActive &&
                (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target)))) {
            return;
        }
        if (isEditableActive && (key === 'Enter' || key === 'Tab')) {
            event.preventDefault();
            event.stopImmediatePropagation();
            if (editableInputRef.current.value) {
                onEditComplete && onEditComplete(event, editableInputRef.current.value);
            }
            setIsEditableActive(false);
            (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        }
        if (isEditableActive && key === 'Escape') {
            event.preventDefault();
            event.stopImmediatePropagation();
            // Reset div text to initial children prop - pre-edit
            if (editableInputRef.current.value) {
                editableInputRef.current.value = children;
                onEditCancel && onEditCancel(event, children);
            }
            setIsEditableActive(false);
            (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();
        }
        if (!isEditableActive && key === 'Enter') {
            event.preventDefault();
            event.stopImmediatePropagation();
            setIsEditableActive(true);
            // Set cursor position to end of text
            const el = event.target;
            const range = document.createRange();
            const sel = window.getSelection();
            range.selectNodeContents(el);
            range.collapse(false);
            sel.removeAllRanges();
            sel.addRange(range);
        }
    };
    const LabelComponent = (isOverflowLabel ? 'button' : 'span');
    const defaultButton = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button__WEBPACK_IMPORTED_MODULE_3__.Button, Object.assign({ type: "button", variant: "plain", onClick: onClose, "aria-label": closeBtnAriaLabel || `Close ${children}` }, closeBtnProps),
        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_times_icon__WEBPACK_IMPORTED_MODULE_4__["default"], null)));
    const button = react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].labelActions) }, closeBtn || defaultButton);
    const textRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
    // ref to apply tooltip when rendered is used
    const componentRef = react__WEBPACK_IMPORTED_MODULE_0__.useRef();
    const [isTooltipVisible, setIsTooltipVisible] = react__WEBPACK_IMPORTED_MODULE_0__.useState(false);
    (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.useIsomorphicLayoutEffect)(() => {
        const currTextRef = isEditable ? editableButtonRef : textRef;
        if (!isEditableActive) {
            setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);
        }
    }, [isEditableActive]);
    const content = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
        icon && react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].labelIcon) }, icon),
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", Object.assign({ ref: textRef, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].labelText) }, (textMaxWidth && {
            style: {
                '--pf-v5-c-label__text--MaxWidth': textMaxWidth
            }
        })), children)));
    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(() => {
        if (isEditableActive && editableInputRef) {
            editableInputRef.current && editableInputRef.current.focus();
        }
    }, [editableInputRef, isEditableActive]);
    const updateVal = () => {
        setCurrValue(editableInputRef.current.value);
    };
    let LabelComponentChildElement = 'span';
    if (href) {
        LabelComponentChildElement = 'a';
    }
    else if (isEditable) {
        LabelComponentChildElement = 'button';
    }
    const labelComponentChildProps = Object.assign(Object.assign(Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].labelContent) }, (isTooltipVisible && { tabIndex: 0 })), (href && { href })), (isEditable && Object.assign({ ref: editableButtonRef, onClick: (e) => {
            setIsEditableActive(true);
            e.stopPropagation();
        } }, editableProps)));
    let labelComponentChild = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(LabelComponentChildElement, Object.assign({}, labelComponentChildProps), content));
    if (render) {
        labelComponentChild = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
            isTooltipVisible && react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_7__.Tooltip, { triggerRef: componentRef, content: children, position: tooltipPosition }),
            render({
                className: _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].labelContent,
                content,
                componentRef
            })));
    }
    else if (isTooltipVisible) {
        labelComponentChild = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_7__.Tooltip, { content: children, position: tooltipPosition }, labelComponentChild));
    }
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(LabelComponent, Object.assign({}, props, { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].label, colorStyles[color], variant === 'outline' && _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.outline, isOverflowLabel && _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.overflow, isCompact && _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.compact, isEditable && _patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_8__["default"].modifiers.editable, isEditableActive && _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].modifiers.editableActive, className) }),
        !isEditableActive && labelComponentChild,
        !isEditableActive && onClose && button,
        isEditableActive && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_1__["default"].labelContent), type: "text", id: "editable-input", ref: editableInputRef, value: currValue, onChange: updateVal }, editableProps)))));
};
Label.displayName = 'Label';
//# sourceMappingURL=Label.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/Label/LabelGroup.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/Label/LabelGroup.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   LabelGroup: () => (/* binding */ LabelGroup)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Label/label-group */ "./node_modules/@patternfly/react-styles/css/components/Label/label-group.js");
/* harmony import */ var _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Label/label */ "./node_modules/@patternfly/react-styles/css/components/Label/label.js");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../Button */ "./node_modules/@patternfly/react-core/dist/esm/components/Button/Button.js");
/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Label */ "./node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js");
/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Tooltip */ "./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_times_circle_icon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/times-circle-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/times-circle-icon.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers */ "./node_modules/@patternfly/react-core/dist/esm/helpers/util.js");
/* harmony import */ var _helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../helpers/GenerateId/GenerateId */ "./node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js");











class LabelGroup extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    constructor(props) {
        super(props);
        this.headingRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.toggleCollapse = () => {
            this.setState(prevState => ({
                isOpen: !prevState.isOpen,
                isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)
            }));
        };
        this.state = {
            isOpen: this.props.defaultIsOpen,
            isTooltipVisible: false
        };
    }
    componentDidMount() {
        this.setState({
            isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)
        });
    }
    renderLabel(id) {
        const { categoryName, tooltipPosition } = this.props;
        const { isTooltipVisible } = this.state;
        return isTooltipVisible ? (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_1__.Tooltip, { position: tooltipPosition, content: categoryName },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { tabIndex: 0, ref: this.headingRef, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupLabel) },
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { "aria-hidden": "true", id: id }, categoryName)))) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { ref: this.headingRef, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupLabel), "aria-hidden": "true", id: id }, categoryName));
    }
    render() {
        const _a = this.props, { categoryName, children, className, isClosable, isCompact, closeBtnAriaLabel, 'aria-label': ariaLabel, onClick, numLabels, expandedText, collapsedText, 
        /* eslint-disable @typescript-eslint/no-unused-vars */
        defaultIsOpen, tooltipPosition, isVertical, isEditable, hasEditableTextArea, editableTextAreaProps, addLabelControl } = _a, 
        /* eslint-enable @typescript-eslint/no-unused-vars */
        rest = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__rest)(_a, ["categoryName", "children", "className", "isClosable", "isCompact", "closeBtnAriaLabel", 'aria-label', "onClick", "numLabels", "expandedText", "collapsedText", "defaultIsOpen", "tooltipPosition", "isVertical", "isEditable", "hasEditableTextArea", "editableTextAreaProps", "addLabelControl"]);
        const { isOpen } = this.state;
        const renderedChildren = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);
        const numChildren = renderedChildren.length;
        const collapsedTextResult = (0,_helpers__WEBPACK_IMPORTED_MODULE_5__.fillTemplate)(collapsedText, {
            remaining: numChildren - numLabels
        });
        const renderLabelGroup = (id) => {
            const labelArray = !isOpen ? renderedChildren.slice(0, numLabels) : renderedChildren;
            const content = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                categoryName && this.renderLabel(id),
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupList) }, (categoryName && { 'aria-labelledby': id }), (!categoryName && { 'aria-label': ariaLabel }), { role: "list" }, rest),
                    labelArray.map((child, i) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement("li", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupListItem), key: i }, child))),
                    numChildren > numLabels && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("li", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupListItem) },
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Label__WEBPACK_IMPORTED_MODULE_6__.Label, { isOverflowLabel: true, onClick: this.toggleCollapse, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(isCompact && _patternfly_react_styles_css_components_Label_label__WEBPACK_IMPORTED_MODULE_7__["default"].modifiers.compact) }, isOpen ? expandedText : collapsedTextResult))),
                    addLabelControl && react__WEBPACK_IMPORTED_MODULE_0__.createElement("li", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupListItem) }, addLabelControl),
                    isEditable && hasEditableTextArea && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("li", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupListItem, _patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.textarea) },
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement("textarea", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupTextarea), rows: 1, tabIndex: 0 }, editableTextAreaProps)))))));
            const close = (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupClose) },
                react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button__WEBPACK_IMPORTED_MODULE_8__.Button, { variant: "plain", "aria-label": closeBtnAriaLabel, onClick: onClick, id: `remove_group_${id}`, "aria-labelledby": `remove_group_${id} ${id}` },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_times_circle_icon__WEBPACK_IMPORTED_MODULE_9__["default"], { "aria-hidden": "true" }))));
            return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroup, className, categoryName && _patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.category, isVertical && _patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.vertical, isEditable && _patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.editable) },
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_Label_label_group__WEBPACK_IMPORTED_MODULE_3__["default"].labelGroupMain) }, content),
                isClosable && close));
        };
        return numChildren === 0 && addLabelControl === undefined ? null : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_10__.GenerateId, null, randomId => renderLabelGroup(this.props.id || randomId)));
    }
}
LabelGroup.displayName = 'LabelGroup';
LabelGroup.defaultProps = {
    expandedText: 'Show Less',
    collapsedText: '${remaining} more',
    categoryName: '',
    defaultIsOpen: false,
    numLabels: 3,
    isClosable: false,
    isCompact: false,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    onClick: (_e) => undefined,
    closeBtnAriaLabel: 'Close label group',
    tooltipPosition: 'top',
    'aria-label': 'Label group category',
    isVertical: false,
    isEditable: false,
    hasEditableTextArea: false
};
//# sourceMappingURL=LabelGroup.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/Label/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/Label/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Label: () => (/* reexport safe */ _Label__WEBPACK_IMPORTED_MODULE_0__.Label),
/* harmony export */   LabelGroup: () => (/* reexport safe */ _LabelGroup__WEBPACK_IMPORTED_MODULE_1__.LabelGroup)
/* harmony export */ });
/* harmony import */ var _Label__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Label */ "./node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js");
/* harmony import */ var _LabelGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LabelGroup */ "./node_modules/@patternfly/react-core/dist/esm/components/Label/LabelGroup.js");


//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-icons/dist/esm/icons/times-circle-icon.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@patternfly/react-icons/dist/esm/icons/times-circle-icon.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TimesCircleIcon: () => (/* binding */ TimesCircleIcon),
/* harmony export */   TimesCircleIconConfig: () => (/* binding */ TimesCircleIconConfig),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _createIcon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createIcon */ "./node_modules/@patternfly/react-icons/dist/esm/createIcon.js");


const TimesCircleIconConfig = {
  name: 'TimesCircleIcon',
  height: 512,
  width: 512,
  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z',
  yOffset: 0,
  xOffset: 0,
};

const TimesCircleIcon = (0,_createIcon__WEBPACK_IMPORTED_MODULE_0__.createIcon)(TimesCircleIconConfig);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TimesCircleIcon);

/***/ }),

/***/ "./node_modules/@patternfly/react-styles/css/components/Label/label-group.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@patternfly/react-styles/css/components/Label/label-group.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


exports.__esModule = true;
__webpack_require__(/*! ./label-group.css */ "?3272");
exports["default"] = {
  "button": "pf-v5-c-button",
  "labelGroup": "pf-v5-c-label-group",
  "labelGroupClose": "pf-v5-c-label-group__close",
  "labelGroupLabel": "pf-v5-c-label-group__label",
  "labelGroupList": "pf-v5-c-label-group__list",
  "labelGroupListItem": "pf-v5-c-label-group__list-item",
  "labelGroupMain": "pf-v5-c-label-group__main",
  "labelGroupTextarea": "pf-v5-c-label-group__textarea",
  "modifiers": {
    "category": "pf-m-category",
    "vertical": "pf-m-vertical",
    "editable": "pf-m-editable",
    "textarea": "pf-m-textarea"
  }
};

/***/ }),

/***/ "./node_modules/@patternfly/react-styles/css/components/Label/label.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@patternfly/react-styles/css/components/Label/label.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


exports.__esModule = true;
__webpack_require__(/*! ./label.css */ "?02e8");
exports["default"] = {
  "button": "pf-v5-c-button",
  "label": "pf-v5-c-label",
  "labelActions": "pf-v5-c-label__actions",
  "labelContent": "pf-v5-c-label__content",
  "labelIcon": "pf-v5-c-label__icon",
  "labelText": "pf-v5-c-label__text",
  "modifiers": {
    "compact": "pf-m-compact",
    "blue": "pf-m-blue",
    "green": "pf-m-green",
    "orange": "pf-m-orange",
    "red": "pf-m-red",
    "purple": "pf-m-purple",
    "cyan": "pf-m-cyan",
    "gold": "pf-m-gold",
    "outline": "pf-m-outline",
    "overflow": "pf-m-overflow",
    "add": "pf-m-add",
    "editable": "pf-m-editable",
    "editableActive": "pf-m-editable-active"
  },
  "themeDark": "pf-v5-theme-dark"
};

/***/ })

}]);