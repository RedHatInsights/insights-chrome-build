"use strict";
(self["webpackChunkinsights_chrome"] = self["webpackChunkinsights_chrome"] || []).push([["vendors-node_modules_patternfly_react-core_dist_esm_components_TreeView_index_js"],{

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeView.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeView.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeView: () => (/* binding */ TreeView)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _TreeViewList__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TreeViewList */ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewList.js");
/* harmony import */ var _TreeViewListItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./TreeViewListItem */ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewListItem.js");
/* harmony import */ var _TreeViewRoot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./TreeViewRoot */ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewRoot.js");





const TreeView = (_a) => {
    var { data, isNested = false, hasCheckboxes = false, hasBadges = false, hasGuides = false, hasSelectableNodes = false, variant = 'default', defaultAllExpanded = false, allExpanded, icon, expandedIcon, parentItem, onSelect, onCheck, onExpand, onCollapse, toolbar, activeItems, compareItems = (item, itemToCheck) => item.id === itemToCheck.id, className, useMemo } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["data", "isNested", "hasCheckboxes", "hasBadges", "hasGuides", "hasSelectableNodes", "variant", "defaultAllExpanded", "allExpanded", "icon", "expandedIcon", "parentItem", "onSelect", "onCheck", "onExpand", "onCollapse", "toolbar", "activeItems", "compareItems", "className", "useMemo"]);
    const treeViewList = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TreeViewList__WEBPACK_IMPORTED_MODULE_2__.TreeViewList, { isNested: isNested, toolbar: toolbar }, data.map((item) => {
        var _a, _b;
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TreeViewListItem__WEBPACK_IMPORTED_MODULE_3__.TreeViewListItem, Object.assign({ key: ((_a = item.id) === null || _a === void 0 ? void 0 : _a.toString()) || ((_b = item.name) === null || _b === void 0 ? void 0 : _b.toString()), name: item.name, title: item.title, id: item.id, isExpanded: allExpanded, isSelectable: hasSelectableNodes, defaultExpanded: item.defaultExpanded !== undefined ? item.defaultExpanded : defaultAllExpanded, onSelect: onSelect, onCheck: onCheck, onExpand: onExpand, onCollapse: onCollapse, hasCheckbox: item.hasCheckbox !== undefined ? item.hasCheckbox : hasCheckboxes, checkProps: item.checkProps, hasBadge: item.hasBadge !== undefined ? item.hasBadge : hasBadges, customBadgeContent: item.customBadgeContent, badgeProps: item.badgeProps, activeItems: activeItems, parentItem: parentItem, itemData: item, icon: item.icon !== undefined ? item.icon : icon, expandedIcon: item.expandedIcon !== undefined ? item.expandedIcon : expandedIcon, action: item.action, compareItems: compareItems, isCompact: variant === 'compact' || variant === 'compactNoBackground', useMemo: useMemo }, (item.children && {
            children: (react__WEBPACK_IMPORTED_MODULE_0__.createElement(TreeView, { data: item.children, isNested: true, parentItem: item, hasCheckboxes: hasCheckboxes, hasBadges: hasBadges, hasGuides: hasGuides, hasSelectableNodes: hasSelectableNodes, variant: variant, allExpanded: allExpanded, defaultAllExpanded: defaultAllExpanded, onSelect: onSelect, onCheck: onCheck, onExpand: onExpand, onCollapse: onCollapse, activeItems: activeItems, icon: icon, expandedIcon: expandedIcon }))
        }))));
    })));
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, parentItem ? (treeViewList) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TreeViewRoot__WEBPACK_IMPORTED_MODULE_4__.TreeViewRoot, Object.assign({ hasSelectableNodes: hasSelectableNodes, hasCheckboxes: hasCheckboxes, hasGuides: hasGuides, variant: variant, className: className }, props), treeViewList))));
};
TreeView.displayName = 'TreeView';
//# sourceMappingURL=TreeView.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewList.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewList.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeViewList: () => (/* binding */ TreeViewList)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _Divider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Divider */ "./node_modules/@patternfly/react-core/dist/esm/components/Divider/Divider.js");




const TreeViewList = (_a) => {
    var { isNested = false, toolbar, children } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["isNested", "toolbar", "children"]);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
        toolbar && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
            toolbar,
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Divider__WEBPACK_IMPORTED_MODULE_2__.Divider, null))),
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_3__.css)('pf-v5-c-tree-view__list'), role: isNested ? 'group' : 'tree' }, props), children)));
};
TreeViewList.displayName = 'TreeViewList';
//# sourceMappingURL=TreeViewList.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewListItem.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewListItem.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeViewListItem: () => (/* binding */ TreeViewListItem)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles/css/components/TreeView/tree-view */ "./node_modules/@patternfly/react-styles/css/components/TreeView/tree-view.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_angle_right_icon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/angle-right-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/angle-right-icon.js");
/* harmony import */ var _Badge__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Badge */ "./node_modules/@patternfly/react-core/dist/esm/components/Badge/Badge.js");
/* harmony import */ var _helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/GenerateId/GenerateId */ "./node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js");






const TreeViewListItemBase = ({ name, title, id, isExpanded, defaultExpanded = false, children = null, onSelect, onExpand, onCollapse, onCheck, hasCheckbox = false, checkProps = {
    checked: false
}, hasBadge = false, customBadgeContent, badgeProps = { isRead: true }, isSelectable = false, isCompact, activeItems = [], itemData, parentItem, icon, expandedIcon, action, compareItems, 
// eslint-disable-next-line @typescript-eslint/no-unused-vars
useMemo }) => {
    const [internalIsExpanded, setIsExpanded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(defaultExpanded);
    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {
        if (isExpanded !== undefined && isExpanded !== null) {
            setIsExpanded(isExpanded);
        }
        else if (defaultExpanded !== undefined && defaultExpanded !== null) {
            setIsExpanded(internalIsExpanded || defaultExpanded);
        }
    }, [isExpanded, defaultExpanded]);
    let Component = 'button';
    if (hasCheckbox) {
        Component = 'label';
    }
    else if (isSelectable) {
        Component = 'div';
    }
    const ToggleComponent = hasCheckbox || isSelectable ? 'button' : 'span';
    const renderToggle = (randomId) => (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(ToggleComponent, Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeToggle), onClick: (evt) => {
            if (isSelectable || hasCheckbox) {
                if (internalIsExpanded) {
                    onCollapse && onCollapse(evt, itemData, parentItem);
                }
                else {
                    onExpand && onExpand(evt, itemData, parentItem);
                }
                setIsExpanded(!internalIsExpanded);
            }
            if (isSelectable) {
                evt.stopPropagation();
            }
        } }, ((hasCheckbox || isSelectable) && { 'aria-labelledby': `label-${randomId}` }), { tabIndex: -1 }),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeToggleIcon) },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_patternfly_react_icons_dist_esm_icons_angle_right_icon__WEBPACK_IMPORTED_MODULE_3__["default"], { "aria-hidden": "true" }))));
    const renderCheck = (randomId) => (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeCheck) },
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("input", Object.assign({ type: "checkbox", onChange: (evt) => onCheck && onCheck(evt, itemData, parentItem), onClick: (evt) => evt.stopPropagation(), ref: (elem) => elem && (elem.indeterminate = checkProps.checked === null) }, checkProps, { checked: checkProps.checked === null ? false : checkProps.checked, id: randomId, tabIndex: -1 }))));
    const iconRendered = (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeIcon) },
        !internalIsExpanded && icon,
        internalIsExpanded && (expandedIcon || icon)));
    const renderNodeContent = () => {
        const content = (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,
            isCompact && title && react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeTitle) }, title),
            isSelectable ? (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", { tabIndex: -1, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeText) }, name)) : (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeText) }, name))));
        return isCompact ? react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeContent) }, content) : content;
    };
    const badgeRendered = (react__WEBPACK_IMPORTED_MODULE_0___default().createElement((react__WEBPACK_IMPORTED_MODULE_0___default().Fragment), null,
        hasBadge && children && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeCount) },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Badge__WEBPACK_IMPORTED_MODULE_4__.Badge, Object.assign({}, badgeProps), customBadgeContent ? customBadgeContent : children.props.data.length))),
        hasBadge && !children && customBadgeContent !== undefined && (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeCount) },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_Badge__WEBPACK_IMPORTED_MODULE_4__.Badge, Object.assign({}, badgeProps), customBadgeContent)))));
    return (react__WEBPACK_IMPORTED_MODULE_0___default().createElement("li", Object.assign({ id: id, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewListItem, internalIsExpanded && _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].modifiers.expanded) }, (internalIsExpanded && { 'aria-expanded': 'true' }), { role: "treeitem", tabIndex: -1 }),
        react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewContent) },
            react__WEBPACK_IMPORTED_MODULE_0___default().createElement(_helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_5__.GenerateId, { prefix: isSelectable ? 'selectable-id' : 'checkbox-id' }, (randomId) => (react__WEBPACK_IMPORTED_MODULE_0___default().createElement(Component, Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNode, children && (isSelectable || hasCheckbox) && _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].modifiers.selectable, (!children || isSelectable) &&
                    activeItems &&
                    activeItems.length > 0 &&
                    activeItems.some((item) => compareItems && item && compareItems(item, itemData))
                    ? _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].modifiers.current
                    : ''), onClick: (evt) => {
                    if (!hasCheckbox) {
                        onSelect && onSelect(evt, itemData, parentItem);
                        if (!isSelectable && children && evt.isDefaultPrevented() !== true) {
                            if (internalIsExpanded) {
                                onCollapse && onCollapse(evt, itemData, parentItem);
                            }
                            else {
                                onExpand && onExpand(evt, itemData, parentItem);
                            }
                            setIsExpanded(!internalIsExpanded);
                        }
                    }
                } }, (hasCheckbox && { htmlFor: randomId }), ((hasCheckbox || (isSelectable && children)) && { id: `label-${randomId}` })),
                react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewNodeContainer) },
                    children && renderToggle(randomId),
                    hasCheckbox && renderCheck(randomId),
                    icon && iconRendered,
                    renderNodeContent(),
                    badgeRendered)))),
            action && react__WEBPACK_IMPORTED_MODULE_0___default().createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_1__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_2__["default"].treeViewAction) }, action)),
        internalIsExpanded && children));
};
const TreeViewListItem = react__WEBPACK_IMPORTED_MODULE_0___default().memo(TreeViewListItemBase, (prevProps, nextProps) => {
    if (!nextProps.useMemo) {
        return false;
    }
    const prevIncludes = prevProps.activeItems &&
        prevProps.activeItems.length > 0 &&
        prevProps.activeItems.some((item) => prevProps.compareItems && item && prevProps.compareItems(item, prevProps.itemData));
    const nextIncludes = nextProps.activeItems &&
        nextProps.activeItems.length > 0 &&
        nextProps.activeItems.some((item) => nextProps.compareItems && item && nextProps.compareItems(item, nextProps.itemData));
    if (prevIncludes || nextIncludes) {
        return false;
    }
    if (prevProps.name !== nextProps.name ||
        prevProps.title !== nextProps.title ||
        prevProps.id !== nextProps.id ||
        prevProps.isExpanded !== nextProps.isExpanded ||
        prevProps.defaultExpanded !== nextProps.defaultExpanded ||
        prevProps.onSelect !== nextProps.onSelect ||
        prevProps.onCheck !== nextProps.onCheck ||
        prevProps.onExpand !== nextProps.onExpand ||
        prevProps.onCollapse !== nextProps.onCollapse ||
        prevProps.hasCheckbox !== nextProps.hasCheckbox ||
        prevProps.checkProps !== nextProps.checkProps ||
        prevProps.hasBadge !== nextProps.hasBadge ||
        prevProps.customBadgeContent !== nextProps.customBadgeContent ||
        prevProps.badgeProps !== nextProps.badgeProps ||
        prevProps.isCompact !== nextProps.isCompact ||
        prevProps.icon !== nextProps.icon ||
        prevProps.expandedIcon !== nextProps.expandedIcon ||
        prevProps.action !== nextProps.action ||
        prevProps.parentItem !== nextProps.parentItem ||
        prevProps.itemData !== nextProps.itemData) {
        return false;
    }
    return true;
});
TreeViewListItem.displayName = 'TreeViewListItem';
//# sourceMappingURL=TreeViewListItem.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewRoot.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewRoot.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeViewRoot: () => (/* binding */ TreeViewRoot)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/TreeView/tree-view */ "./node_modules/@patternfly/react-styles/css/components/TreeView/tree-view.js");
/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/util */ "./node_modules/@patternfly/react-core/dist/esm/helpers/util.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers */ "./node_modules/@patternfly/react-core/dist/esm/helpers/KeyboardHandler.js");
/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/constants */ "./node_modules/@patternfly/react-core/dist/esm/helpers/constants.js");







class TreeViewRoot extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    constructor() {
        super(...arguments);
        this.displayName = 'TreeViewRoot';
        this.treeRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.handleKeys = (event) => {
            var _a, _b, _c, _d, _e, _f, _g;
            if (!this.treeRef.current.contains(event.target) ||
                !event.target.classList.contains('pf-v5-c-tree-view__node')) {
                return;
            }
            const activeElement = document.activeElement;
            const key = event.key;
            const treeItems = Array.from((_a = this.treeRef.current) === null || _a === void 0 ? void 0 : _a.getElementsByClassName('pf-v5-c-tree-view__node')).filter((el) => !el.classList.contains('pf-m-disabled'));
            if (key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Space) {
                activeElement.click();
                event.preventDefault();
            }
            (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.handleArrows)(event, treeItems, (element) => activeElement === element, undefined, [], undefined, true, true);
            if (['ArrowLeft', 'ArrowRight'].includes(key)) {
                const isExpandable = (_c = (_b = activeElement === null || activeElement === void 0 ? void 0 : activeElement.firstElementChild) === null || _b === void 0 ? void 0 : _b.firstElementChild) === null || _c === void 0 ? void 0 : _c.classList.contains('pf-v5-c-tree-view__node-toggle');
                const isExpanded = (_d = activeElement === null || activeElement === void 0 ? void 0 : activeElement.closest('li')) === null || _d === void 0 ? void 0 : _d.classList.contains('pf-m-expanded');
                if (key === 'ArrowLeft') {
                    if (isExpandable && isExpanded) {
                        activeElement.click();
                    }
                    else {
                        const parentList = (_e = activeElement === null || activeElement === void 0 ? void 0 : activeElement.closest('ul')) === null || _e === void 0 ? void 0 : _e.parentElement;
                        if ((parentList === null || parentList === void 0 ? void 0 : parentList.tagName) !== 'DIV') {
                            const parentButton = parentList === null || parentList === void 0 ? void 0 : parentList.querySelector('button');
                            activeElement.tabIndex = -1;
                            if (parentButton) {
                                parentButton.tabIndex = 0;
                                parentButton.focus();
                            }
                        }
                    }
                }
                else {
                    if (isExpandable && !isExpanded) {
                        activeElement.tabIndex = -1;
                        activeElement.click();
                        const childElement = (_g = (_f = activeElement === null || activeElement === void 0 ? void 0 : activeElement.closest('li')) === null || _f === void 0 ? void 0 : _f.querySelector('ul > li')) === null || _g === void 0 ? void 0 : _g.querySelector('button');
                        if (childElement) {
                            childElement.tabIndex = 0;
                            childElement.focus();
                        }
                    }
                }
                event.preventDefault();
            }
        };
        this.handleKeysCheckbox = (event) => {
            var _a, _b, _c, _d, _e;
            if (!this.treeRef.current.contains(event.target)) {
                return;
            }
            const activeElement = document.activeElement;
            const key = event.key;
            if (key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Space) {
                activeElement.click();
                event.preventDefault();
            }
            const treeNodes = Array.from((_a = this.treeRef.current) === null || _a === void 0 ? void 0 : _a.getElementsByClassName('pf-v5-c-tree-view__node'));
            (0,_helpers__WEBPACK_IMPORTED_MODULE_2__.handleArrows)(event, treeNodes, (element) => element.contains(activeElement), (element) => element.querySelector('button,input'), [], undefined, true, true);
            if (['ArrowLeft', 'ArrowRight'].includes(key)) {
                if (key === 'ArrowLeft') {
                    if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === 'INPUT') {
                        ((_b = activeElement === null || activeElement === void 0 ? void 0 : activeElement.parentElement) === null || _b === void 0 ? void 0 : _b.previousSibling) &&
                            activeElement.parentElement.previousSibling.focus();
                    }
                    else if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.previousSibling) {
                        if (((_c = activeElement.previousElementSibling) === null || _c === void 0 ? void 0 : _c.tagName) === 'SPAN') {
                            activeElement.previousSibling.firstChild.focus();
                        }
                        else {
                            activeElement.previousSibling.focus();
                        }
                    }
                }
                else {
                    if ((activeElement === null || activeElement === void 0 ? void 0 : activeElement.tagName) === 'INPUT') {
                        ((_d = activeElement.parentElement) === null || _d === void 0 ? void 0 : _d.nextSibling) && activeElement.parentElement.nextSibling.focus();
                    }
                    else if (activeElement === null || activeElement === void 0 ? void 0 : activeElement.nextSibling) {
                        if (((_e = activeElement.nextElementSibling) === null || _e === void 0 ? void 0 : _e.tagName) === 'SPAN') {
                            activeElement.nextSibling.firstChild.focus();
                        }
                        else {
                            activeElement.nextSibling.focus();
                        }
                    }
                }
                event.preventDefault();
            }
        };
        this.variantStyleModifiers = {
            default: '',
            compact: _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.compact,
            compactNoBackground: [_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.compact, _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.noBackground]
        };
    }
    componentDidMount() {
        var _a;
        if (_helpers_util__WEBPACK_IMPORTED_MODULE_4__.canUseDOM) {
            window.addEventListener('keydown', this.props.hasCheckboxes || this.props.hasSelectableNodes ? this.handleKeysCheckbox : this.handleKeys);
        }
        if (this.props.hasCheckboxes || this.props.hasSelectableNodes) {
            const firstToggle = this.treeRef.current.getElementsByClassName('pf-v5-c-tree-view__node-toggle')[0];
            if (firstToggle) {
                firstToggle.tabIndex = 0;
            }
            if (this.props.hasCheckboxes) {
                const firstInput = this.treeRef.current.getElementsByTagName('INPUT')[0];
                if (firstInput) {
                    firstInput.tabIndex = 0;
                }
            }
            if (this.props.hasSelectableNodes) {
                const firstTextButton = this.treeRef.current.getElementsByClassName('pf-v5-c-tree-view__node-text')[0];
                if (firstTextButton) {
                    firstTextButton.tabIndex = 0;
                }
            }
        }
        else {
            ((_a = this.treeRef.current) === null || _a === void 0 ? void 0 : _a.getElementsByClassName('pf-v5-c-tree-view__node')[0]).tabIndex = 0;
        }
    }
    componentWillUnmount() {
        if (_helpers_util__WEBPACK_IMPORTED_MODULE_4__.canUseDOM) {
            window.removeEventListener('keydown', this.props.hasCheckboxes || this.props.hasSelectableNodes ? this.handleKeysCheckbox : this.handleKeys);
        }
    }
    render() {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        const _a = this.props, { children, hasCheckboxes, hasGuides, variant, className, hasSelectableNodes } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_5__.__rest)(_a, ["children", "hasCheckboxes", "hasGuides", "variant", "className", "hasSelectableNodes"]);
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_6__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_3__["default"].treeView, hasGuides && _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.guides, this.variantStyleModifiers[variant], className), ref: this.treeRef }, props), children));
    }
}

//# sourceMappingURL=TreeViewRoot.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewSearch.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewSearch.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeViewSearch: () => (/* binding */ TreeViewSearch)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/TreeView/tree-view */ "./node_modules/@patternfly/react-styles/css/components/TreeView/tree-view.js");
/* harmony import */ var _patternfly_react_styles_css_components_FormControl_form_control__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-styles/css/components/FormControl/form-control */ "./node_modules/@patternfly/react-styles/css/components/FormControl/form-control.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_search_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/search-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/search-icon.js");






const TreeViewSearch = (_a) => {
    var { className, onSearch, id, name, 'aria-label': ariaLabel } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["className", "onSearch", "id", "name", 'aria-label']);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_TreeView_tree_view__WEBPACK_IMPORTED_MODULE_3__["default"].treeViewSearch, className) },
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_FormControl_form_control__WEBPACK_IMPORTED_MODULE_4__["default"].formControl, _patternfly_react_styles_css_components_FormControl_form_control__WEBPACK_IMPORTED_MODULE_4__["default"].modifiers.icon) },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", Object.assign({ onChange: onSearch, id: id, name: name, "aria-label": ariaLabel, type: "search" }, props)),
            react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_FormControl_form_control__WEBPACK_IMPORTED_MODULE_4__["default"].formControlUtilities) },
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_FormControl_form_control__WEBPACK_IMPORTED_MODULE_4__["default"].formControlIcon) },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_search_icon__WEBPACK_IMPORTED_MODULE_5__["default"], null))))));
};
TreeViewSearch.displayName = 'TreeViewSearch';
//# sourceMappingURL=TreeViewSearch.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/index.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/TreeView/index.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TreeView: () => (/* reexport safe */ _TreeView__WEBPACK_IMPORTED_MODULE_0__.TreeView),
/* harmony export */   TreeViewSearch: () => (/* reexport safe */ _TreeViewSearch__WEBPACK_IMPORTED_MODULE_1__.TreeViewSearch)
/* harmony export */ });
/* harmony import */ var _TreeView__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./TreeView */ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeView.js");
/* harmony import */ var _TreeViewSearch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./TreeViewSearch */ "./node_modules/@patternfly/react-core/dist/esm/components/TreeView/TreeViewSearch.js");


//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-styles/css/components/TreeView/tree-view.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-styles/css/components/TreeView/tree-view.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


exports.__esModule = true;
__webpack_require__(/*! ./tree-view.css */ "?06e5");
exports["default"] = {
  "badge": "pf-v5-c-badge",
  "dirRtl": "pf-v5-m-dir-rtl",
  "modifiers": {
    "compact": "pf-m-compact",
    "guides": "pf-m-guides",
    "expanded": "pf-m-expanded",
    "noBackground": "pf-m-no-background",
    "current": "pf-m-current",
    "read": "pf-m-read",
    "selectable": "pf-m-selectable",
    "truncate": "pf-m-truncate"
  },
  "themeDark": "pf-v5-theme-dark",
  "treeView": "pf-v5-c-tree-view",
  "treeViewAction": "pf-v5-c-tree-view__action",
  "treeViewContent": "pf-v5-c-tree-view__content",
  "treeViewListItem": "pf-v5-c-tree-view__list-item",
  "treeViewNode": "pf-v5-c-tree-view__node",
  "treeViewNodeCheck": "pf-v5-c-tree-view__node-check",
  "treeViewNodeContainer": "pf-v5-c-tree-view__node-container",
  "treeViewNodeContent": "pf-v5-c-tree-view__node-content",
  "treeViewNodeCount": "pf-v5-c-tree-view__node-count",
  "treeViewNodeIcon": "pf-v5-c-tree-view__node-icon",
  "treeViewNodeText": "pf-v5-c-tree-view__node-text",
  "treeViewNodeTitle": "pf-v5-c-tree-view__node-title",
  "treeViewNodeToggle": "pf-v5-c-tree-view__node-toggle",
  "treeViewNodeToggleIcon": "pf-v5-c-tree-view__node-toggle-icon",
  "treeViewSearch": "pf-v5-c-tree-view__search"
};

/***/ })

}]);