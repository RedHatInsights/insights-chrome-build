{"version":3,"sources":["App/Footer.js","App/Header/Logo.js","App/Header/Brand.js","../../../../src/components/Page/PageHeaderTools.tsx","../../../../src/components/Page/PageHeaderToolsGroup.tsx","../../../../src/components/Page/PageHeaderToolsItem.tsx","../../node_modules/@patternfly/react-icons/dist/js/icons/cog-icon.js","App/Header/UserToggle.js","../../../../src/components/Avatar/Avatar.tsx","App/Header/UserIcon.js","App/Header/ToolbarToggle.js","../../../../src/components/AboutModal/AboutModalBoxContent.tsx","../../../../src/components/AboutModal/AboutModalBoxHeader.tsx","../../../../src/components/AboutModal/AboutModalBoxHero.tsx","../../../../src/components/AboutModal/AboutModalBoxBrand.tsx","../../../../src/components/AboutModal/AboutModalBoxCloseButton.tsx","../../../../src/components/AboutModal/AboutModalBox.tsx","../../../../src/components/AboutModal/AboutModalContainer.tsx","../../../../src/components/AboutModal/AboutModal.tsx","App/Header/InsightsAbout.js","App/Header/Tools.js","App/Header/Login.js","App/Header/LogoutAlert.js","App/Header/index.js","../../../../src/components/Nav/Nav.tsx","../../../../src/components/Nav/NavItem.tsx","../../../../src/components/Nav/NavExpandable.tsx","../../../../src/components/Nav/NavList.tsx","App/Sidenav/NavigationItem.js","App/Sidenav/Navigation.js","App/Sidenav/AppSwitcher.js","App/Sidenav/index.js","App/index.js","../../node_modules/parcel/src/builtins/bundle-url.js","../../node_modules/parcel/src/builtins/bundle-loader.js"],"names":["Footer","Logo","logo","Brand","toggleNav","navHidden","mapDispatchToProps","dispatch","propTypes","PropTypes","bool","func","chrome","buildItems","username","isOrgAdmin","accountNumber","extraItems","window","insights","isProd","auth","logout","UserToggle","props","state","isOpen","onSelect","bind","onToggle","setState","account","isSmall","toggle","name","DropdownPosition","right","number","Component","shape","oneOfType","string","arrayOf","node","defaultProps","user","identity","account_number","first_name","last_name","is_org_admin","UserIcon","img","width","avatar","src","Image","onload","getImage","ToolbarToggle","ev","url","onClick","preventDefault","location","href","dropdownItems","map","title","target","rel","widgetType","className","id","hasToggleIndicator","icon","array","Copyright","InsightsAbout","app","globalNav","find","item","active","subItems","subApp","subItem","activeApp","reload","appDetails","apps","path","version","showCopyAlert","showCopyAlertError","currentApp","hideCopyAlert","updateAppVersion","term","details","buildId","appDetail","debugDetails","Username","CurrentApp","ApplicationPath","pathname","navigator","clipboard","writeText","JSON","stringify","then","setTimeout","err","Sentry","captureException","forEach","fetch","response","json","catch","travis","data","src_hash","build_id","isModalOpen","onClose","copyDetails","getItem","mapStateToProps","appId","any","object","Tools","isSettingsDisabled","setIsSettingsDisabled","setIsModalOpen","getUser","SettingsButton","document","baseURI","aboutMenuDropdownItems","mobileDropdownItems","AboutButton","QuestionCircleIcon","default","sm","getBundle","action","key","Login","login","LogoutAlert","alertOneVisible","set","_timer","clearTimeout","delay","cookie","get","setTimer","hideAlertOne","React","Header","unauthed","NavigationItem","basepath","itemID","parent","navigate","openshiftLinks","supportcases","link","feedback","marketplace","insightsLinks","subscriptionWatch","Navigation","groupId","activeGroup","activeItem","event","persist","onNavigate","onClearActive","activeLocation","settings","isMetaKey","ctrlKey","metaKey","which","activeLevel","navItem","open","group","prefix","documentation","disabled_on_stable","indexOf","subKey","Object","entries","value","stateToProps","dispatchToProps","AppSwitcher","setIsOpen","CaretDownIcon","documentationLink","openshift","subscriptions","ansible","SideNav","activeTechnology","bundleURL","getBundleURLCached","getBundleURL","Error","matches","stack","match","getBaseURL","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","all","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","e","executor","promise","prototype","onSuccess","onError"],"mappings":"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","file":"App.ddd9a90a.js","sourceRoot":"../../src/js","sourcesContent":["import React from 'react';\n\nconst Footer = () => <div>I am Footer</div>;\n\nexport default Footer;\n","import React from 'react';\nimport logo from '../../../../static/images/logo.svg';\n\nconst Logo = () => <img src={logo} alt=\"Red Hat Logo\" />;\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { onToggle } from '../../redux/actions';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport BarsIcon from '@patternfly/react-icons/dist/js/icons/bars-icon';\nimport Logo from './Logo';\n\nexport const Brand = ({ toggleNav, navHidden }) => (\n    <div className=\"pf-c-page__header-brand\">\n        <div hidden={navHidden} className='pf-c-page__header-brand-toggle'>\n            <Button\n                variant=\"plain\"\n                aria-label=\"Toggle primary navigation\"\n                widget-type=\"InsightsNavToggle\"\n                onClick={() => toggleNav && toggleNav()}\n            >\n                <BarsIcon size=\"md\"/>\n            </Button>\n        </div>\n        <a className=\"pf-c-page__header-brand-link\" href=\"./\">\n            <Logo />\n        </a>\n    </div>\n);\n\nBrand.propTypes = {\n    navHidden: PropTypes.bool,\n    toggleNav: PropTypes.func\n};\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleNav: () => {\n            dispatch(onToggle());\n        }\n    };\n}\n\nexport default connect(({ chrome: { navHidden } }) => ({ navHidden }), mapDispatchToProps)(Brand);\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\n\nexport interface PageHeaderToolsProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered in page header tools */\n  children: React.ReactNode;\n  /** Additional classes added to the page header tools. */\n  className?: string;\n}\n\nexport const PageHeaderTools: React.FunctionComponent<PageHeaderToolsProps> = ({\n  children,\n  className,\n  ...props\n}: PageHeaderToolsProps) => (\n  <div className={css(styles.pageHeaderTools, className)} {...props}>\n    {children}\n  </div>\n);\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\n\nexport interface PageHeaderToolsGroupProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered in the page header tools group */\n  children: React.ReactNode;\n  /** Additional classes added to the page header tools group. */\n  className?: string;\n  /** Visibility at various breakpoints. */\n  visibility?: {\n    default: 'hidden' | 'visible';\n    sm: 'hidden' | 'visible';\n    md: 'hidden' | 'visible';\n    lg: 'hidden' | 'visible';\n    xl: 'hidden' | 'visible';\n    '2xl': 'hidden' | 'visible';\n  };\n}\n\nexport const PageHeaderToolsGroup: React.FunctionComponent<PageHeaderToolsGroupProps> = ({\n  children,\n  className,\n  visibility,\n  ...props\n}: PageHeaderToolsGroupProps) => (\n  <div className={css(styles.pageHeaderToolsGroup, formatBreakpointMods(visibility, styles), className)} {...props}>\n    {children}\n  </div>\n);\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Page/page';\nimport { css } from '@patternfly/react-styles';\nimport { formatBreakpointMods } from '../../helpers/util';\n\nexport interface PageHeaderToolsItemProps extends React.HTMLProps<HTMLDivElement> {\n  /** Content rendered in page header tools item. */\n  children: React.ReactNode;\n  /** Additional classes added to the page header tools item. */\n  className?: string;\n  /** Visibility at various breakpoints. */\n  visibility?: {\n    default: 'hidden' | 'visible';\n    sm: 'hidden' | 'visible';\n    md: 'hidden' | 'visible';\n    lg: 'hidden' | 'visible';\n    xl: 'hidden' | 'visible';\n    '2xl': 'hidden' | 'visible';\n  };\n  /** True to make an icon button appear selected */\n  isSelected?: boolean;\n}\n\nexport const PageHeaderToolsItem: React.FunctionComponent<PageHeaderToolsItemProps> = ({\n  children,\n  className,\n  visibility,\n  isSelected\n}: PageHeaderToolsItemProps) => (\n  <div\n    className={css(\n      styles.pageHeaderToolsItem,\n      isSelected && styles.modifiers.selected,\n      formatBreakpointMods(visibility, styles),\n      className\n    )}\n  >\n    {children}\n  </div>\n);\n","\"use strict\"\nexports.__esModule = true;\nexports.CogIconConfig = {\n  name: 'CogIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z',\n  yOffset: 0,\n  xOffset: 0,\n  transform: ''\n};\nexports.CogIcon = require('../createIcon').createIcon(exports.CogIconConfig);\nexports[\"default\"] = exports.CogIcon;","import React, { Component } from 'react';\nimport { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport { KebabToggle } from '@patternfly/react-core/dist/js/components/Dropdown/KebabToggle';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { DropdownSeparator } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownSeparator';\nimport { DropdownPosition } from '@patternfly/react-core/dist/js/components/Dropdown/dropdownConstants';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction buildItems(username, isOrgAdmin, accountNumber = -1, extraItems) {\n    return [\n        <DropdownItem key=\"Username\" isDisabled>\n            <dl className='ins-c-dropdown-item__stack'>\n                <dt className=\"ins-c-dropdown-item__stack--header\">Username:</dt>\n                <dd className=\"ins-c-dropdown-item__stack--value\">{username}</dd>\n                { isOrgAdmin &&\n                    <dd className=\"ins-c-dropdown-item__stack--subValue\">Org. Administrator</dd>\n                }\n            </dl>\n        </DropdownItem>,\n        <React.Fragment key=\"account wrapper\">\n            { accountNumber > -1 &&\n                <DropdownItem key=\"Account\" isDisabled>\n                    <dl className='ins-c-dropdown-item__stack'>\n                        <dt className=\"ins-c-dropdown-item__stack--header\">Account number:</dt>\n                        <dd className=\"ins-c-dropdown-item__stack--value\">{accountNumber}</dd>\n                    </dl>\n                </DropdownItem>\n            }\n        </React.Fragment>,\n        <DropdownSeparator key=\"separator\" />,\n        <DropdownItem\n            key=\"My Profile\"\n            href={`https://www.${window.insights.chrome.isProd ? '' : 'qa.'}redhat.com/wapps/ugc/protected/personalInfo.html`}\n            target=\"_blank\"\n            rel='noopener noreferrer'>\n                My profile\n        </DropdownItem>,\n        <React.Fragment key=\"user prefs wrapper\">\n            { accountNumber > -1 &&\n                <DropdownItem\n                    key=\"User preferences\"\n                    href=\"./user-preferences/email\">\n                    User Preferences\n                </DropdownItem>\n            }\n        </React.Fragment>,\n        <DropdownItem\n            key=\"logout\"\n            component=\"button\"\n            onClick={() => window.insights.chrome.auth.logout(true)}>\n                Log out\n        </DropdownItem>,\n        [...extraItems]\n    ];\n}\n\nexport class UserToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    }\n\n    render() {\n        const { isOpen } = this.state;\n        const { account, isSmall, extraItems } = this.props;\n        const toggle = isSmall ?\n            <KebabToggle onToggle={this.onToggle} /> :\n            <DropdownToggle\n                id='UserMenu'\n                className='ins-c-toolbar__menu-user'\n                widget-type='UserMenu'\n                onToggle={this.onToggle}>\n                {account.name}\n            </DropdownToggle>;\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                aria-label=\"Overflow actions\"\n                widget-type=\"InsightsOverflowActions\"\n                onSelect={this.onSelect}\n                toggle={toggle}\n                isPlain\n                isOpen={isOpen}\n                dropdownItems={buildItems(account.username, account.isOrgAdmin, account.number, extraItems)}\n            />\n        );\n    }\n}\n\nUserToggle.propTypes = {\n    account: PropTypes.shape({\n        number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        name: PropTypes.string,\n        username: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        isOrgAdmin: PropTypes.bool\n    }),\n    isSmall: PropTypes.bool,\n    extraItems: PropTypes.arrayOf(PropTypes.node)\n};\n\nUserToggle.defaultProps = {\n    account: {\n        number: 1,\n        name: 'Foo'\n    },\n    isSmall: false,\n    extraItems: []\n};\n\n/* eslint-disable camelcase */\n// TODO update this to use account_id\nexport default connect(({\n    chrome: {\n        user: {\n            identity: {\n                account_number: accountNumber,\n                user: {\n                    username,\n                    first_name,\n                    last_name,\n                    is_org_admin\n                }\n            }\n        }\n    } }) => ({\n    account: {\n        number: accountNumber,\n        username: username,\n        isOrgAdmin: is_org_admin,\n        name: `${first_name} ${last_name}`\n    }\n}))(UserToggle);\n\n/* eslint-enable camelcase */\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Avatar/avatar';\nimport { css } from '@patternfly/react-styles';\n\nexport interface AvatarProps\n  extends React.DetailedHTMLProps<React.ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement> {\n  /** Additional classes added to the Avatar. */\n  className?: string;\n  /** Attribute that specifies the URL of the image for the Avatar. */\n  src?: string;\n  /** Attribute that specifies the alternate text of the image for the Avatar. */\n  alt: string;\n}\n\nexport const Avatar: React.FunctionComponent<AvatarProps> = ({\n  className = '',\n  src = '',\n  alt,\n  ...props\n}: AvatarProps) => <img {...props} src={src} alt={alt} className={css(styles.avatar, className)} />;\n","import React, { Component } from 'react';\nimport { Avatar } from '@patternfly/react-core/dist/js/components/Avatar/Avatar';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport class UserIcon extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            account: this.props.account,\n            avatar: 'apps/chrome/assets/images/img_avatar.svg'\n        };\n    }\n\n    getImage = (img) => {\n        if (img.width === 140) {\n            this.setState({ avatar: img.src });\n        }\n    }\n\n    componentDidMount() {\n        const img = new Image();\n        img.src = `https://access.redhat.com/api/users/avatar/${this.state.account.username}/`;\n        img.onload = (() => this.getImage(img));\n    }\n\n    render() {\n        const { avatar } = this.state;\n\n        return (\n            <Avatar src={ avatar } alt='User Avatar'/>\n        );\n    }\n}\n\nUserIcon.propTypes = {\n    account: PropTypes.shape({\n        username: PropTypes.string\n    })\n};\n\nexport default connect(({ chrome: { user: { identity: { user: { username } } } } }) => ({\n    account: {\n        username: username\n    }\n}))(UserIcon);\n","import React, { Component } from 'react';\n\nimport  { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport  { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport  { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport  { DropdownPosition } from '@patternfly/react-core/dist/js/components/Dropdown/dropdownConstants';\nimport PropTypes from 'prop-types';\n\nclass ToolbarToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    onClick(ev, url, onClick) {\n        ev.preventDefault();\n        if (url) {\n            window.location.href = `${url}`;\n        }\n\n        if (onClick) {\n            onClick(ev);\n        }\n    }\n\n    render() {\n        // Render the questionmark icon items\n        const dropdownItems = this.props.dropdownItems.map(({ url, title, onClick }) =>\n            <DropdownItem\n                key={title}\n                component={ url ? 'a' : 'button' }\n                // Because the urls are using 'a', don't use onClick for accessibility\n                // If it is a button, use the onClick prop\n                {\n                    ...url ? {\n                        href: url,\n                        target: '_blank',\n                        rel: 'noopener noreferrer'\n                    } : { onClick: (ev => this.onClick(ev, url, onClick)) }\n                }\n            >\n                { title }\n            </DropdownItem>\n        );\n\n        const toggle = <DropdownToggle\n            widget-type={this.props.widgetType}\n            className={this.props.className}\n            id={this.props.id}\n            iconComponent={null}\n            toggleIndicator={ this.props.hasToggleIndicator }\n            onToggle={this.onToggle}>\n            <this.props.icon />\n        </DropdownToggle>;\n\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                toggle={toggle}\n                isOpen={this.state.isOpen}\n                dropdownItems={dropdownItems}\n                onSelect={this.onSelect}\n                isPlain\n            />\n        );\n    }\n}\n\nToolbarToggle.propTypes = {\n    icon: PropTypes.func,\n    dropdownItems: PropTypes.array,\n    widgetType: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    className: PropTypes.string,\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    hasToggleIndicator: PropTypes.bool\n};\n\nexport default ToolbarToggle;\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AboutModalBox/about-modal-box';\nimport contentStyles from '@patternfly/react-styles/css/components/Content/content';\n\nexport interface AboutModalBoxContentProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the AboutModalBoxContent  */\n  children: React.ReactNode;\n  /** additional classes added to the AboutModalBoxContent  */\n  className?: string;\n  /** id to use for About Modal Box aria described by  */\n  id: string;\n  /** The Trademark info for the product  */\n  trademark: string;\n  /** Prevents the about modal from rendering content inside a container; allows for more flexible layouts */\n  noAboutModalBoxContentContainer?: boolean;\n}\n\nexport const AboutModalBoxContent: React.FunctionComponent<AboutModalBoxContentProps> = ({\n  children,\n  className = '',\n  trademark,\n  id,\n  noAboutModalBoxContentContainer = false,\n  ...props\n}: AboutModalBoxContentProps) => (\n  <div className={css(styles.aboutModalBoxContent, className)} id={id} {...props}>\n    <div className={css('pf-c-about-modal-box__body')}>\n      {noAboutModalBoxContentContainer ? children : <div className={css(contentStyles.content)}>{children}</div>}\n    </div>\n    <p className={css(styles.aboutModalBoxStrapline)}>{trademark}</p>\n  </div>\n);\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AboutModalBox/about-modal-box';\nimport { Title } from '../Title';\n\nexport interface AboutModalBoxHeaderProps extends React.HTMLProps<HTMLDivElement> {\n  /** additional classes added to the button  */\n  className?: string;\n  /** Name of the Product  */\n  productName?: string;\n  /** id to used for Modal Box header  */\n  id: string;\n}\n\nexport const AboutModalBoxHeader: React.FunctionComponent<AboutModalBoxHeaderProps> = ({\n  className = '',\n  productName = '',\n  id,\n  ...props\n}: AboutModalBoxHeaderProps) => (\n  <div className={css(styles.aboutModalBoxHeader, className)} {...props}>\n    <Title headingLevel=\"h1\" size=\"4xl\" id={id}>\n      {productName}\n    </Title>\n  </div>\n);\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AboutModalBox/about-modal-box';\n// eslint-disable-next-line camelcase\nimport c_about_modal_box__hero_sm_BackgroundImage from '@patternfly/react-tokens/dist/js/c_about_modal_box__hero_sm_BackgroundImage';\n\nexport interface AboutModalBoxHeroProps extends React.HTMLProps<HTMLDivElement> {\n  /** additional classes added to the About Modal Hero  */\n  className?: string;\n  /** background image data or file path  */\n  backgroundImageSrc?: string;\n}\n\nexport const AboutModalBoxHero: React.FunctionComponent<AboutModalBoxHeroProps> = ({\n  className,\n  backgroundImageSrc,\n  ...props\n}: AboutModalBoxHeroProps) => (\n  <div\n    style={\n      /* eslint-disable camelcase */\n      backgroundImageSrc !== ''\n        ? { [c_about_modal_box__hero_sm_BackgroundImage.name as string]: `url(${backgroundImageSrc})` }\n        : {}\n      /* eslint-enable camelcase */\n    }\n    className={css(styles.aboutModalBoxHero, className)}\n    {...props}\n  />\n);\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AboutModalBox/about-modal-box';\n\nexport interface AboutModalBoxBrandProps extends React.HTMLProps<HTMLDivElement> {\n  /** additional classes added to the About Modal Brand  */\n  className?: string;\n  /** the URL of the image for the Brand.  */\n  src?: string;\n  /** the alternate text of the Brand image.  */\n  alt: string;\n}\n\nexport const AboutModalBoxBrand: React.FunctionComponent<AboutModalBoxBrandProps> = ({\n  className = '',\n  src = '',\n  alt,\n  ...props\n}: AboutModalBoxBrandProps) => (\n  <div className={css(styles.aboutModalBoxBrand, className)} {...props}>\n    <img className={css(styles.aboutModalBoxBrandImage)} src={src} alt={alt} />\n  </div>\n);\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AboutModalBox/about-modal-box';\nimport { Button } from '../Button';\nimport TimesIcon from '@patternfly/react-icons/dist/js/icons/times-icon';\n\nexport interface AboutModalBoxCloseButtonProps extends React.HTMLProps<HTMLDivElement> {\n  /** additional classes added to the About Modal Close button  */\n  className?: string;\n  /** A callback for when the close button is clicked  */\n  onClose?: () => void;\n  /** Set close button aria label */\n  'aria-label'?: string;\n}\n\nexport const AboutModalBoxCloseButton: React.FunctionComponent<AboutModalBoxCloseButtonProps> = ({\n  className = '',\n  onClose = () => undefined as any,\n  'aria-label': ariaLabel = 'Close Dialog',\n  ...props\n}: AboutModalBoxCloseButtonProps) => (\n  <div className={css(styles.aboutModalBoxClose, className)} {...props}>\n    <Button variant=\"plain\" onClick={onClose} aria-label={ariaLabel}>\n      <TimesIcon />\n    </Button>\n  </div>\n);\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/AboutModalBox/about-modal-box';\n\nexport interface AboutModalBoxProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the AboutModelBox.  */\n  children: React.ReactNode;\n  /** additional classes added to the AboutModalBox  */\n  className?: string;\n}\n\nexport const AboutModalBox: React.FunctionComponent<AboutModalBoxProps> = ({\n  children,\n  className = '',\n  ...props\n}: AboutModalBoxProps) => (\n  <div role=\"dialog\" aria-modal=\"true\" className={css(styles.aboutModalBox, className)} {...props}>\n    {children}\n  </div>\n);\n","import * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Bullseye/bullseye';\nimport { FocusTrap } from '../../helpers';\n\nimport { AboutModalBoxContent } from './AboutModalBoxContent';\nimport { AboutModalBoxHeader } from './AboutModalBoxHeader';\nimport { AboutModalBoxHero } from './AboutModalBoxHero';\nimport { AboutModalBoxBrand } from './AboutModalBoxBrand';\nimport { AboutModalBoxCloseButton } from './AboutModalBoxCloseButton';\nimport { AboutModalBox } from './AboutModalBox';\nimport { Backdrop } from '../Backdrop/Backdrop';\n\nexport interface AboutModalContainerProps extends React.HTMLProps<HTMLDivElement> {\n  /** content rendered inside the About Modal Box Content.  */\n  children: React.ReactNode;\n  /** additional classes added to the About Modal Box  */\n  className?: string;\n  /** Flag to show the About Modal  */\n  isOpen?: boolean;\n  /** A callback for when the close button is clicked  */\n  onClose?: () => void;\n  /** Product Name  */\n  productName?: string;\n  /** Trademark information  */\n  trademark?: string;\n  /** the URL of the image for the Brand.  */\n  brandImageSrc: string;\n  /** the alternate text of the Brand image.  */\n  brandImageAlt: string;\n  /** the URL of the image for the background.  */\n  backgroundImageSrc?: string;\n  /** id to use for About Modal Box aria labeled by  */\n  aboutModalBoxHeaderId: string;\n  /** id to use for About Modal Box aria described by  */\n  aboutModalBoxContentId: string;\n  /** Set close button aria label */\n  closeButtonAriaLabel?: string;\n}\n\nexport const AboutModalContainer: React.FunctionComponent<AboutModalContainerProps> = ({\n  children,\n  className = '',\n  isOpen = false,\n  onClose = () => undefined,\n  productName = '',\n  trademark,\n  brandImageSrc,\n  brandImageAlt,\n  backgroundImageSrc,\n  closeButtonAriaLabel,\n  aboutModalBoxHeaderId,\n  aboutModalBoxContentId,\n  ...props\n}: AboutModalContainerProps) => {\n  if (!isOpen) {\n    return null;\n  }\n  return (\n    <Backdrop>\n      <FocusTrap focusTrapOptions={{ clickOutsideDeactivates: true }} className={css(styles.bullseye)}>\n        <AboutModalBox\n          className={className}\n          aria-labelledby={aboutModalBoxHeaderId}\n          aria-describedby={aboutModalBoxContentId}\n        >\n          <AboutModalBoxBrand src={brandImageSrc} alt={brandImageAlt} />\n          <AboutModalBoxCloseButton aria-label={closeButtonAriaLabel} onClose={onClose} />\n          {productName && <AboutModalBoxHeader id={aboutModalBoxHeaderId} productName={productName} />}\n          <AboutModalBoxContent\n            trademark={trademark}\n            id={aboutModalBoxContentId}\n            noAboutModalBoxContentContainer={false}\n            {...props}\n          >\n            {children}\n          </AboutModalBoxContent>\n          <AboutModalBoxHero backgroundImageSrc={backgroundImageSrc} />\n        </AboutModalBox>\n      </FocusTrap>\n    </Backdrop>\n  );\n};\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Backdrop/backdrop';\nimport { canUseDOM } from '../../helpers';\nimport { KEY_CODES } from '../../helpers/constants';\nimport { AboutModalContainer } from './AboutModalContainer';\nimport { PickOptional } from '../../helpers/typeUtils';\n\nexport interface AboutModalProps {\n  /** Content rendered inside the about modal  */\n  children: React.ReactNode;\n  /** Additional classes added to the about modal  */\n  className?: string;\n  /** Flag to show the about modal  */\n  isOpen?: boolean;\n  /** A callback for when the close button is clicked  */\n  onClose?: () => void;\n  /** Product name  */\n  productName?: string;\n  /** Trademark information  */\n  trademark?: string;\n  /** The URL of the image for the brand  */\n  brandImageSrc: string;\n  /** The alternate text of the brand image  */\n  brandImageAlt: string;\n  /** The URL of the image for the background  */\n  backgroundImageSrc?: string;\n  /** Prevents the about modal from rendering content inside a container; allows for more flexible layouts  */\n  noAboutModalBoxContentContainer?: boolean;\n  /** The parent container to append the modal to. Defaults to document.body */\n  appendTo?: HTMLElement | (() => HTMLElement);\n  /** Set aria label to the close button */\n  closeButtonAriaLabel?: string;\n}\n\ninterface ModalState {\n  container: HTMLElement;\n}\n\nexport class AboutModal extends React.Component<AboutModalProps, ModalState> {\n  private static currentId = 0;\n  private id = AboutModal.currentId++;\n  ariaLabelledBy = `pf-about-modal-title-${this.id}`;\n  ariaDescribedBy = `pf-about-modal-content-${this.id}`;\n\n  static defaultProps: PickOptional<AboutModalProps> = {\n    className: '',\n    isOpen: false,\n    onClose: (): any => undefined,\n    productName: '',\n    trademark: '',\n    backgroundImageSrc: '',\n    noAboutModalBoxContentContainer: false,\n    appendTo: null as HTMLElement\n  };\n\n  constructor(props: AboutModalProps) {\n    super(props);\n\n    this.state = {\n      container: undefined\n    };\n    if (props.brandImageSrc && !props.brandImageAlt) {\n      // eslint-disable-next-line no-console\n      console.error('AboutModal:', 'brandImageAlt is required when a brandImageSrc is specified');\n    }\n  }\n\n  handleEscKeyClick = (event: KeyboardEvent) => {\n    if (event.keyCode === KEY_CODES.ESCAPE_KEY && this.props.isOpen) {\n      this.props.onClose();\n    }\n  };\n\n  toggleSiblingsFromScreenReaders = (hide: boolean) => {\n    const { appendTo } = this.props;\n    const target: HTMLElement = this.getElement(appendTo);\n    const bodyChildren = target.children;\n    for (const child of Array.from(bodyChildren)) {\n      if (child !== this.state.container) {\n        hide ? child.setAttribute('aria-hidden', '' + hide) : child.removeAttribute('aria-hidden');\n      }\n    }\n  };\n\n  getElement = (appendTo: HTMLElement | (() => HTMLElement)) => {\n    if (typeof appendTo === 'function') {\n      return appendTo();\n    }\n    return appendTo || document.body;\n  };\n\n  componentDidMount() {\n    const container = document.createElement('div');\n    const target: HTMLElement = this.getElement(this.props.appendTo);\n    this.setState({ container });\n    target.appendChild(container);\n    target.addEventListener('keydown', this.handleEscKeyClick, false);\n\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n    }\n  }\n\n  componentDidUpdate() {\n    const target: HTMLElement = this.getElement(this.props.appendTo);\n    if (this.props.isOpen) {\n      target.classList.add(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(true);\n    } else {\n      target.classList.remove(css(styles.backdropOpen));\n      this.toggleSiblingsFromScreenReaders(false);\n    }\n  }\n\n  componentWillUnmount() {\n    const target: HTMLElement = this.getElement(this.props.appendTo);\n    if (this.state.container) {\n      target.removeChild(this.state.container);\n    }\n    target.removeEventListener('keydown', this.handleEscKeyClick, false);\n    target.classList.remove(css(styles.backdropOpen));\n  }\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { appendTo, ...props } = this.props;\n    const { container } = this.state;\n\n    if (!canUseDOM || !container) {\n      return null;\n    }\n\n    return ReactDOM.createPortal(\n      <AboutModalContainer\n        aboutModalBoxHeaderId={this.ariaLabelledBy}\n        aboutModalBoxContentId={this.ariaDescribedBy}\n        {...props}\n      />,\n      container\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { AboutModal } from '@patternfly/react-core/dist/js/components/AboutModal/AboutModal';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { Tooltip } from '@patternfly/react-core/dist/js/components/Tooltip/Tooltip';\nimport { TextContent } from '@patternfly/react-core/dist/js/components/Text/TextContent';\nimport { TextList } from '@patternfly/react-core/dist/js/components/Text/TextList';\nimport { TextListItem } from '@patternfly/react-core/dist/js/components/Text/TextListItem';\nimport { Stack } from '@patternfly/react-core/dist/js/layouts/Stack/Stack';\nimport { StackItem } from '@patternfly/react-core/dist/js/layouts/Stack/StackItem';\n\nimport CopyIcon from '@patternfly/react-icons/dist/js/icons/copy-icon';\n\nimport logo from '../../../../static/images/logo.svg';\nimport { connect } from 'react-redux';\nimport './InsightsAbout.scss';\nimport * as Sentry from '@sentry/browser';\n\nexport const Copyright = () => (\n    <div className='ins-c-footer__traditional-nav ins-c-page__about--modal-footer'>\n        <p className='copyright'>Copyright © 2020 Red Hat, Inc.</p>\n        <nav>\n            <ul>\n                <li>\n                    <a className='nav-link'\n                        href='https://www.redhat.com/en/about/privacy-policy'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        Privacy Policy\n                    </a>\n                </li>\n                <li>\n                    <a className='nav-link'\n                        href='https://access.redhat.com/help/terms/'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        Terms of Use\n                    </a>\n                </li>\n                <li>\n                    <a className='nav-link'\n                        href='https://www.redhat.com/en/about/all-policies-guidelines'\n                        target=\"_blank\"\n                        rel='noopener noreferrer'>\n                        All Policies and Guidelines\n                    </a>\n                </li>\n            </ul>\n        </nav>\n    </div>\n);\n\nexport class InsightsAbout extends Component {\n    constructor(props) {\n        super(props);\n\n        let app;\n        if (this.props.globalNav) {\n            app = this.props.globalNav.find(item => item.active);\n            if (app && app.subItems) {\n                const subApp = app.subItems.find(subItem => subItem.id === this.props.activeApp);\n                app = subApp && subApp.reload ? subApp : app;\n            }\n        }\n\n        this.state = {\n            appDetails: { apps: [\n                { name: 'Chrome', path: 'apps/chrome/app.info.json', version: 'N/A' },\n                { name: 'Dashboard', path: `apps/dashboard/app.info.json`, version: 'N/A' },\n                { name: 'Inventory', path: `apps/inventory/app.info.json`, version: 'N/A' },\n                { name: 'Remediations', path: `apps/remediations/app.info.json`, version: 'N/A' },\n                { name: 'Vulnerability', path: 'apps/vulnerability/app.info.json', version: 'N/A' },\n                { name: 'Compliance', path: 'apps/compliance/app.info.json', version: 'N/A' },\n                { name: 'Cost Management', path: 'apps/cost-management/app.info.json', version: 'N/A' },\n                { name: 'Advisor', path: 'apps/advisor/app.info.json', version: 'N/A' },\n                { name: 'Drift', path: 'apps/drift/app.info.json', version: 'N/A' },\n                { name: 'Migration Analytics', path: 'apps/migration-analytics/app.info.json', version: 'N/A' },\n                { name: 'Automation Hub', path: 'apps/automation-hub/app.info.json', version: 'N/A' },\n                { name: 'Automation Analytics', path: 'apps/automation-analytics/app.info.json', version: 'N/A' },\n                { name: 'Policies', path: 'apps/policies/app.info.json', version: 'N/A' },\n                { name: 'Patch', path: 'apps/patch/app.info.json', version: 'N/A' },\n                { name: 'Automation Services Catalog', path: 'apps/catalog/app.info.json', version: 'N/A' },\n                { name: 'Approval', path: 'apps/approval/app.info.json', version: 'N/A' },\n                { name: 'Sources', path: 'apps/sources/app.info.json', version: 'N/A' }\n            ] },\n            showCopyAlert: false,\n            showCopyAlertError: false,\n            currentApp: app && app.title\n        };\n        this.hideCopyAlert = () => this.setState({ showCopyAlert: false });\n        this.updateAppVersion = this.updateAppVersion.bind(this);\n    }\n\n    getItem(term, details) {\n        return <React.Fragment key={term}>\n            <TextListItem component=\"dt\">{term}:</TextListItem>\n            <TextListItem component=\"dd\">\n                {\n                    (typeof details === 'function') ? details() : details\n                }\n            </TextListItem>\n        </React.Fragment>;\n    }\n\n    updateAppVersion(app, version, buildId) {\n        const { appDetails } = this.state;\n        let currentApp = appDetails.apps.find(appDetail => appDetail.name === app.name);\n\n        if (currentApp) {\n            if (buildId) {\n                version = `${version}.${buildId}`;\n            }\n\n            currentApp.version = version;\n        }\n\n        this.setState(appDetails);\n    }\n\n    copyDetails(username) {\n\n        const debugDetails = {\n            Username: username,\n            CurrentApp: this.state.currentApp || 'Landing',\n            ApplicationPath: window.location.pathname,\n            ...this.state.appDetails\n        };\n\n        // If the text is successfully copied, change the tooltip\n        // The tooltip exit delay is 1000ms, but the fade out is 200ms\n        // Set the timeout to 1200 so the text doesn't change while it is fading\n        navigator.clipboard.writeText(JSON.stringify(debugDetails, null, 2))\n        .then(() => {\n            this.setState({ showCopyAlert: true }, () => {\n                setTimeout(() => { this.setState({ showCopyAlert: false }); }, 1200);\n            });\n        }, (err) => {\n            Sentry.captureException(err);\n        });\n    }\n\n    componentDidMount() {\n        this.state.appDetails.apps.forEach((app) => {\n            fetch(app.path)\n            .then(response => response.json())\n            .catch(() => ({ travis: {} }))\n            .then(data => this.updateAppVersion(app, data.src_hash, data.build_id));\n        });\n    }\n\n    render() {\n        const { isModalOpen, onClose, user } = this.props;\n        const { showCopyAlert } = this.state;\n\n        return (\n            <AboutModal\n                isOpen={isModalOpen}\n                onClose={onClose}\n                brandImageSrc={logo}\n                brandImageAlt=\"Red Hat Logo\"\n                className='ins-c-about-modal'\n            >\n                <Stack gutter='sm'>\n                    <StackItem>\n                        Please include these details when opening a support case.\n                        <Tooltip\n                            trigger=\"mouseenter focus click\"\n                            position='top'\n                            content={\n                                showCopyAlert\n                                    ? <span> Successfully copied to clipboard</span>\n                                    : <span> Copy to clipboard </span>\n                            }\n                            entryDelay={ 100 }\n                            exitDelay={ 1000 }>\n                            <Button variant='plain'\n                                onClick={() => this.copyDetails(user.username)}\n                                aria-label='Copy details'>\n                                <CopyIcon/>\n                            </Button>\n                        </Tooltip>\n                    </StackItem>\n                    <StackItem>\n                        <TextContent className=\"ins-c-page__about--modal\">\n                            <TextList component=\"dl\" className='ins-debug-info'>\n                                {this.getItem('User Name', user && user.username)}\n                                {this.getItem('Current Application', this.state.currentApp || 'Landing')}\n                                {this.getItem('Application Path', window.location.pathname)}\n                                {this.state.appDetails.apps.map((app) => {\n                                    return this.getItem(app.name + ' Version', app.version);\n                                })}\n                            </TextList>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem>\n                        <Copyright />\n                    </StackItem>\n                </Stack>\n            </AboutModal>\n        );\n    }\n}\n\nInsightsAbout.propTypes = {\n    globalNav: PropTypes.any,\n    activeApp: PropTypes.string,\n    isModalOpen: PropTypes.bool,\n    onClose: PropTypes.func,\n    user: PropTypes.object\n};\n\nfunction mapStateToProps({ chrome: { user: { identity: { user } }, appId, globalNav, activeApp } }) {\n    return { appId, globalNav, user, activeApp };\n}\n\nexport default connect(mapStateToProps)(InsightsAbout);\n","import React, { useState, useEffect } from 'react';\n\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { PageHeaderTools } from '@patternfly/react-core/dist/js/components/Page/PageHeaderTools';\nimport { PageHeaderToolsGroup } from '@patternfly/react-core/dist/js/components/Page/PageHeaderToolsGroup';\nimport { PageHeaderToolsItem } from '@patternfly/react-core/dist/js/components/Page/PageHeaderToolsItem';\nimport { Divider } from '@patternfly/react-core/dist/js/components/Divider/Divider';\n\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/question-circle-icon';\nimport CogIcon from '@patternfly/react-icons/dist/js/icons/cog-icon';\n\nimport UserToggle from './UserToggle';\nimport UserIcon from './UserIcon';\nimport ToolbarToggle from './ToolbarToggle';\nimport InsightsAbout from './InsightsAbout';\n\nconst Tools = () => {\n\n    {/* Set the state */}\n    const [isSettingsDisabled, setIsSettingsDisabled] = useState(true);\n    const [isModalOpen, setIsModalOpen] = useState(false);\n\n    {/* Disable settings/cog icon when a user doesn't have an account number */}\n    useEffect(() => {\n        window.insights.chrome.auth.getUser().then((user)=> user.identity.account_number && setIsSettingsDisabled(false));\n    }, []);\n\n    {/* button that should redirect a user to RBAC with an account */}\n    const SettingsButton = () => (\n        <Button variant=\"plain\"\n            aria-label=\"Go to settings\"\n            widget-type='SettingsButton'\n            className='ins-c-toolbar__button-settings'\n            onClick={() => window.location.href = `${document.baseURI}settings/rbac/`}>\n            <CogIcon/>\n        </Button>\n    );\n\n    {/* list out the items for the about menu */}\n    const aboutMenuDropdownItems = [\n        {\n            title: 'Customer support',\n            url: 'https://access.redhat.com/support'\n        }, {\n            title: 'Training',\n            url: 'https://www.redhat.com/en/services/training-and-certification'\n        }, {\n            title: 'API documentation',\n            onClick: () => window.location.href = `${document.baseURI}docs/api`\n        }, {\n            title: 'About',\n            onClick: () => setIsModalOpen(true)\n        }\n    ];\n\n    {/* Combine aboutMenuItems with a settings link on mobile */}\n    const mobileDropdownItems = [\n        { title: 'separator' },\n        {\n            title: 'Settings',\n            onClick: () => window.location.href = `${document.baseURI}settings/rbac/`\n        },\n        { title: 'separator' },\n        ...aboutMenuDropdownItems\n    ];\n\n    {/* QuestionMark icon that should be used for \"help/support\" things */}\n    const AboutButton = () => (\n        <ToolbarToggle\n            key='Help menu'\n            icon={ QuestionCircleIcon }\n            id='HelpMenu'\n            className='ins-c-toolbar__menu-help'\n            hasToggleIndicator={ null }\n            widget-type='HelpMenu'\n            dropdownItems={ aboutMenuDropdownItems }\n        />\n    );\n\n    return (\n        <PageHeaderTools widget-type=\"InsightsToolbar\">\n\n            {/* Show tools on medium and above screens */}\n            <PageHeaderToolsGroup visibility={{ default: 'hidden', sm: 'visible' }}>\n                { !isSettingsDisabled &&\n                    <PageHeaderToolsItem isSelected={ window.insights.chrome.getBundle() === 'settings' }>\n                        { <SettingsButton/> }\n                    </PageHeaderToolsItem>\n                }\n                <PageHeaderToolsItem>\n                    { <AboutButton/> }\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* Show full user dropdown on medium and above screens */}\n            <PageHeaderToolsGroup visibility={{ default: 'hidden', sm: 'visible' }}>\n                <PageHeaderToolsItem>\n                    <UserToggle className='ins-c-dropdown__user'/>\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* Collapse tools and user dropdown to kebab on small screens  */}\n            <PageHeaderToolsGroup visibility={{ sm: 'hidden' }}>\n                <PageHeaderToolsItem>\n                    <UserToggle isSmall extraItems={mobileDropdownItems.map((action, key) => (\n                        <React.Fragment key={key}>\n                            { action.title === 'separator'\n                                ? <Divider component=\"li\"/>\n                                : <DropdownItem component=\"button\" onClick={action.onClick}>{action.title}</DropdownItem>\n                            }\n                        </React.Fragment>\n                    ))} />\n                </PageHeaderToolsItem>\n            </PageHeaderToolsGroup>\n\n            {/* User icon always visible */}\n            <UserIcon/>\n\n            {/* Render About Modal */}\n            { isModalOpen && <InsightsAbout isModalOpen={isModalOpen} onClose={() => setIsModalOpen(!isModalOpen)} /> }\n        </PageHeaderTools>\n    );\n};\n\nexport default Tools;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core/dist/js/components/Button/Button';\nimport { login } from '../../jwt/jwt';\n\nconst Login = () => (\n    <div className=\"pf-c-page__header-tools\">\n        <Button\n            variant=\"tertiary\"\n            aria-label=\"Toggle primary navigation\"\n            widget-type=\"InsightsNavToggle\"\n            onClick={ login }>\n          Log in\n        </Button>\n    </div>\n);\n\nexport default Login;\n","import React from 'react';\nimport { Alert } from '@patternfly/react-core/dist/js/components/Alert/Alert';\nimport { AlertActionCloseButton } from '@patternfly/react-core/dist/js/components/Alert/AlertActionCloseButton';\nimport cookie from 'js-cookie';\n\nimport './LogoutAlert.scss';\n\nclass LogoutAlert extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            alertOneVisible: cookie.get('cs_loggedOut') === 'true',\n            delay: 8000\n        };\n    }\n\n    hideAlertOne = () => {\n        this.setState({ alertOneVisible: false });\n        cookie.set('cs_loggedOut', 'false');\n    }\n    componentDidMount() {\n        this.setTimer();\n    }\n    componentWillUnmount() {\n        clearTimeout(this._timer);\n    }\n\n    setTimer = () => {\n        if (this._timer !== null) {\n            clearTimeout(this._timer);\n        }\n\n        // hide after `delay` milliseconds\n        this._timer = setTimeout(function() {\n            this.setState({ alertOneVisible: false });\n            clearTimeout(this._timer);\n        }.bind(this), this.state.delay);\n    }\n\n    render() {\n        const { alertOneVisible } = this.state;\n        return (\n            <React.Fragment>\n                { alertOneVisible && (\n                    <Alert\n                        variant=\"success\"\n                        title=\"You have successfully logged out.\"\n                        className=\"ins-c-alert__logout\"\n                        action={ <AlertActionCloseButton onClose={ this.hideAlertOne } /> }\n                    />\n                ) }\n            </React.Fragment>\n        );\n    }\n}\n\nexport default LogoutAlert;\n","import React, { Fragment } from 'react';\nimport Brand from './Brand';\nimport Tools from './Tools';\nimport Login from './Login';\nimport LogoutAlert from './LogoutAlert';\n\nexport function unauthed() {\n    return <Fragment>\n        <Brand />\n        <Login />\n        <LogoutAlert/>\n    </Fragment>;\n}\n\nconst Header = () => (\n    <Fragment>\n        <Brand />\n        <Tools />\n    </Fragment>\n);\n\nexport default Header;\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps, OUIAProps } from '../../helpers';\n\nexport type NavSelectClickHandler = (\n  e: React.FormEvent<HTMLInputElement>,\n  itemId: number | string,\n  groupId: number | string,\n  to: string\n) => void;\n\nexport interface NavProps\n  extends Omit<React.DetailedHTMLProps<React.HTMLAttributes<HTMLElement>, HTMLElement>, 'onSelect'> {\n  /** Anything that can be rendered inside of the nav */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Callback for updating when item selection changes */\n  onSelect?: (selectedItem: {\n    groupId: number | string;\n    itemId: number | string;\n    to: string;\n    event: React.FormEvent<HTMLInputElement>;\n  }) => void;\n  /** Callback for when a list is expanded or collapsed */\n  onToggle?: (toggledItem: {\n    groupId: number | string;\n    isExpanded: boolean;\n    event: React.FormEvent<HTMLInputElement>;\n  }) => void;\n  /** Accessibility label */\n  'aria-label'?: string;\n  /** Indicates which theme color to use */\n  theme?: 'dark' | 'light';\n  /** For horizontal navs */\n  variant?: 'default' | 'horizontal' | 'tertiary';\n}\n\nexport const NavContext = React.createContext<{\n  onSelect?: (\n    event: React.FormEvent<HTMLInputElement>,\n    groupId: number | string,\n    itemId: number | string,\n    to: string,\n    preventDefault: boolean,\n    onClick: (\n      e: React.FormEvent<HTMLInputElement>,\n      itemId: number | string,\n      groupId: number | string,\n      to: string\n    ) => void\n  ) => void;\n  onToggle?: (event: React.MouseEvent<HTMLInputElement>, groupId: number | string, expanded: boolean) => void;\n  updateIsScrollable?: (isScrollable: boolean) => void;\n  isHorizontal?: boolean;\n}>({});\n\nexport class Nav extends React.Component<NavProps & OUIAProps> {\n  static defaultProps: NavProps = {\n    onSelect: () => undefined,\n    onToggle: () => undefined,\n    theme: 'dark'\n  };\n\n  state = {\n    isScrollable: false\n  };\n\n  // Callback from NavItem\n  onSelect(\n    event: React.FormEvent<HTMLInputElement>,\n    groupId: number | string,\n    itemId: number | string,\n    to: string,\n    preventDefault: boolean,\n    onClick: NavSelectClickHandler\n  ) {\n    if (preventDefault) {\n      event.preventDefault();\n    }\n\n    this.props.onSelect({ groupId, itemId, event, to });\n\n    if (onClick) {\n      onClick(event, itemId, groupId, to);\n    }\n  }\n\n  // Callback from NavExpandable\n  onToggle(event: React.MouseEvent<HTMLInputElement>, groupId: number | string, toggleValue: boolean) {\n    this.props.onToggle({\n      event,\n      groupId,\n      isExpanded: toggleValue\n    });\n  }\n\n  render() {\n    const {\n      'aria-label': ariaLabel,\n      children,\n      className,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onSelect,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      onToggle,\n      theme,\n      ouiaId,\n      variant,\n      ...props\n    } = this.props;\n    const isHorizontal = ['horizontal', 'tertiary'].includes(variant);\n\n    return (\n      <NavContext.Provider\n        value={{\n          onSelect: (\n            event: React.FormEvent<HTMLInputElement>,\n            groupId: number | string,\n            itemId: number | string,\n            to: string,\n            preventDefault: boolean,\n            onClick: (\n              e: React.FormEvent<HTMLInputElement>,\n              itemId: number | string,\n              groupId: number | string,\n              to: string\n            ) => void\n          ) => this.onSelect(event, groupId, itemId, to, preventDefault, onClick),\n          onToggle: (event: React.MouseEvent<HTMLInputElement>, groupId: number | string, expanded: boolean) =>\n            this.onToggle(event, groupId, expanded),\n          updateIsScrollable: (isScrollable: boolean) => this.setState({ isScrollable }),\n          isHorizontal\n        }}\n      >\n        <nav\n          className={css(\n            styles.nav,\n            theme === 'light' && styles.modifiers.light,\n            isHorizontal && styles.modifiers.horizontal,\n            variant === 'tertiary' && styles.modifiers.tertiary,\n            this.state.isScrollable && styles.modifiers.scrollable,\n            className\n          )}\n          aria-label={ariaLabel || variant === 'tertiary' ? 'Local' : 'Global'}\n          {...getOUIAProps('Nav', ouiaId)}\n          {...props}\n        >\n          {children}\n        </nav>\n      </NavContext.Provider>\n    );\n  }\n}\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport { NavContext, NavSelectClickHandler } from './Nav';\n\nexport interface NavItemProps extends Omit<React.HTMLProps<HTMLAnchorElement>, 'onClick'> {\n  /** Content rendered inside the nav item */\n  children?: React.ReactNode;\n  /** Whether to add className to children */\n  styleChildren?: boolean;\n  /** Additional classes added to the nav item */\n  className?: string;\n  /** Target navigation link */\n  to?: string;\n  /** Flag indicating whether the item is active */\n  isActive?: boolean;\n  /** Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component */\n  groupId?: string | number | null;\n  /** Item identifier, will be returned with the onToggle and onSelect callback passed to the Nav component */\n  itemId?: string | number | null;\n  /** If true prevents the default anchor link action to occur. Set to true if you want to handle navigation yourself. */\n  preventDefault?: boolean;\n  /** Callback for item click */\n  onClick?: NavSelectClickHandler;\n  /** Component used to render NavItems */\n  component?: React.ReactNode;\n}\n\nexport const NavItem: React.FunctionComponent<NavItemProps> = ({\n  children,\n  styleChildren = true,\n  className,\n  to,\n  isActive = false,\n  groupId = null as string,\n  itemId = null as string,\n  preventDefault = false,\n  onClick = null as NavSelectClickHandler,\n  component = 'a',\n  ...props\n}: NavItemProps) => {\n  const Component = component as any;\n\n  const renderDefaultLink = (context: any): React.ReactNode => {\n    const preventLinkDefault = preventDefault || !to;\n    return (\n      <Component\n        href={to}\n        onClick={(e: any) => context.onSelect(e, groupId, itemId, to, preventLinkDefault, onClick)}\n        className={css(styles.navLink, isActive && styles.modifiers.current, className)}\n        aria-current={isActive ? 'page' : null}\n        {...props}\n      >\n        {children}\n      </Component>\n    );\n  };\n\n  const renderClonedChild = (context: any, child: React.ReactElement): React.ReactNode => {\n    const childClass = child.props && child.props.className;\n    const childClassName = styleChildren\n      ? css(styles.navLink, isActive && styles.modifiers.current, childClass)\n      : childClass;\n    return React.cloneElement(child, {\n      onClick: (e: MouseEvent) => context.onSelect(e, groupId, itemId, to, preventDefault, onClick),\n      className: childClassName,\n      'aria-current': isActive ? 'page' : null\n    });\n  };\n\n  return (\n    <li className={css(styles.navItem, className)}>\n      <NavContext.Consumer>\n        {(context: any) =>\n          React.isValidElement(children)\n            ? renderClonedChild(context, children as React.ReactElement)\n            : renderDefaultLink(context)\n        }\n      </NavContext.Consumer>\n    </li>\n  );\n};\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport a11yStyles from '@patternfly/react-styles/css/utilities/Accessibility/accessibility';\nimport { css } from '@patternfly/react-styles';\nimport AngleRightIcon from '@patternfly/react-icons/dist/js/icons/angle-right-icon';\nimport { getUniqueId } from '../../helpers/util';\nimport { NavContext } from './Nav';\nimport { PickOptional } from '../../helpers/typeUtils';\n\nexport interface NavExpandableProps\n  extends React.DetailedHTMLProps<React.LiHTMLAttributes<HTMLLIElement>, HTMLLIElement> {\n  /** Title shown for the expandable list */\n  title: string;\n  /** If defined, screen readers will read this text instead of the list title */\n  srText?: string;\n  /** Boolean to programatically expand or collapse section */\n  isExpanded?: boolean;\n  /** Anything that can be rendered inside of the expandable list */\n  children?: React.ReactNode;\n  /** Additional classes added to the container */\n  className?: string;\n  /** Group identifier, will be returned with the onToggle and onSelect callback passed to the Nav component */\n  groupId?: string | number;\n  /** If true makes the expandable list title active */\n  isActive?: boolean;\n  /** Identifier to use for the section aria label */\n  id?: string;\n  /** allow consumer to optionally override this callback and manage expand state externally */\n  onExpand?: (e: React.MouseEvent<HTMLLIElement, MouseEvent>, val: boolean) => void;\n}\n\ninterface NavExpandableState {\n  expandedState: boolean;\n}\n\nexport class NavExpandable extends React.Component<NavExpandableProps, NavExpandableState> {\n  static defaultProps: PickOptional<NavExpandableProps> = {\n    srText: '',\n    isExpanded: false,\n    children: '',\n    className: '',\n    groupId: null as string,\n    isActive: false,\n    id: ''\n  };\n\n  expandableRef = React.createRef<HTMLAnchorElement>();\n  id = this.props.id || getUniqueId();\n\n  state = {\n    expandedState: this.props.isExpanded\n  };\n\n  componentDidMount() {\n    this.setState({ expandedState: this.props.isExpanded });\n  }\n\n  componentDidUpdate(prevProps: NavExpandableProps) {\n    if (this.props.isExpanded !== prevProps.isExpanded) {\n      this.setState({ expandedState: this.props.isExpanded });\n    }\n  }\n\n  onExpand = (e: React.MouseEvent<HTMLLIElement, MouseEvent>, val: boolean) => {\n    if (this.props.onExpand) {\n      this.props.onExpand(e, val);\n    } else {\n      this.setState({ expandedState: val });\n    }\n  };\n\n  handleToggle = (\n    e: React.MouseEvent<HTMLLIElement, MouseEvent>,\n    onToggle: (\n      event: React.MouseEvent<HTMLLIElement, MouseEvent>,\n      groupId: string | number,\n      expandedState: boolean\n    ) => void\n  ) => {\n    // Item events can bubble up, ignore those\n    if (!this.expandableRef.current || !this.expandableRef.current.contains(e.target as Node)) {\n      return;\n    }\n\n    const { groupId } = this.props;\n    const { expandedState } = this.state;\n    onToggle(e, groupId, !expandedState);\n    this.onExpand(e, !expandedState);\n  };\n\n  render() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { id, title, srText, children, className, isActive, groupId, isExpanded, onExpand, ...props } = this.props;\n    const { expandedState } = this.state;\n\n    return (\n      <NavContext.Consumer>\n        {(context: any) => (\n          <li\n            className={css(\n              styles.navItem,\n              expandedState && styles.modifiers.expanded,\n              isActive && styles.modifiers.current,\n              className\n            )}\n            onClick={(e: React.MouseEvent<HTMLLIElement, MouseEvent>) => this.handleToggle(e, context.onToggle)}\n            {...props}\n          >\n            <a\n              ref={this.expandableRef}\n              className={styles.navLink}\n              id={srText ? null : this.id}\n              href=\"#\"\n              onClick={e => e.preventDefault()}\n              onMouseDown={e => e.preventDefault()}\n              aria-expanded={expandedState}\n            >\n              {title}\n              <span className={css(styles.navToggle)}>\n                <span className={css(styles.navToggleIcon)}>\n                  <AngleRightIcon aria-hidden=\"true\" />\n                </span>\n              </span>\n            </a>\n            <section className={css(styles.navSubnav)} aria-labelledby={this.id} hidden={expandedState ? null : true}>\n              {srText && (\n                <h2 className={css(a11yStyles.screenReader)} id={this.id}>\n                  {srText}\n                </h2>\n              )}\n              <ul className={css(styles.navList)}>{children}</ul>\n            </section>\n          </li>\n        )}\n      </NavContext.Consumer>\n    );\n  }\n}\n","import * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Nav/nav';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/js/icons/angle-right-icon';\nimport { isElementInView } from '../../helpers/util';\nimport { NavContext } from './Nav';\n\nexport interface NavListProps\n  extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLUListElement>, HTMLUListElement> {\n  /** Children nodes */\n  children?: React.ReactNode;\n  /** Additional classes added to the list */\n  className?: string;\n  /** Aria-label for the left scroll button */\n  ariaLeftScroll?: string;\n  /** Aria-label for the right scroll button */\n  ariaRightScroll?: string;\n}\n\nexport class NavList extends React.Component<NavListProps> {\n  static contextType = NavContext;\n\n  static defaultProps: NavListProps = {\n    ariaLeftScroll: 'Scroll left',\n    ariaRightScroll: 'Scroll right'\n  };\n\n  state = {\n    scrollViewAtStart: false,\n    scrollViewAtEnd: false\n  };\n\n  navList = React.createRef<HTMLUListElement>();\n\n  handleScrollButtons = () => {\n    const container = this.navList.current;\n    if (container) {\n      // check if it elements are in view\n      const scrollViewAtStart = isElementInView(container, container.firstChild as HTMLElement, false);\n      const scrollViewAtEnd = isElementInView(container, container.lastChild as HTMLElement, false);\n      this.setState({\n        scrollViewAtStart,\n        scrollViewAtEnd\n      });\n      this.context.updateIsScrollable(!scrollViewAtStart || !scrollViewAtEnd);\n    }\n  };\n\n  scrollLeft = () => {\n    // find first Element that is fully in view on the left, then scroll to the element before it\n    const container = this.navList.current;\n    if (container) {\n      const childrenArr = Array.from(container.children);\n      let firstElementInView: Element;\n      let lastElementOutOfView: Element;\n      for (let i = 0; i < childrenArr.length && !firstElementInView; i++) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          firstElementInView = childrenArr[i];\n          lastElementOutOfView = childrenArr[i - 1];\n        }\n      }\n      if (lastElementOutOfView) {\n        container.scrollLeft -= lastElementOutOfView.scrollWidth;\n      }\n      this.handleScrollButtons();\n    }\n  };\n\n  scrollRight = () => {\n    // find last Element that is fully in view on the right, then scroll to the element after it\n    const container = this.navList.current;\n    if (container) {\n      const childrenArr = Array.from(container.children);\n      let lastElementInView: Element;\n      let firstElementOutOfView: Element;\n      for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n        if (isElementInView(container, childrenArr[i] as HTMLElement, false)) {\n          lastElementInView = childrenArr[i];\n          firstElementOutOfView = childrenArr[i + 1];\n        }\n      }\n      if (firstElementOutOfView) {\n        container.scrollLeft += firstElementOutOfView.scrollWidth;\n      }\n      this.handleScrollButtons();\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('resize', this.handleScrollButtons, false);\n    this.handleScrollButtons();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleScrollButtons, false);\n  }\n\n  render() {\n    const { children, className, ariaLeftScroll, ariaRightScroll, ...props } = this.props;\n    const { scrollViewAtStart, scrollViewAtEnd } = this.state;\n\n    return (\n      <NavContext.Consumer>\n        {({ isHorizontal }) => (\n          <React.Fragment>\n            {isHorizontal && (\n              <button\n                className={css(styles.navScrollButton)}\n                aria-label={ariaLeftScroll}\n                onClick={this.scrollLeft}\n                disabled={scrollViewAtStart}\n              >\n                <AngleLeftIcon />\n              </button>\n            )}\n            <ul\n              ref={this.navList}\n              className={css(styles.navList, className)}\n              onScroll={this.handleScrollButtons}\n              {...props}\n            >\n              {children}\n            </ul>\n            {isHorizontal && (\n              <button\n                className={css(styles.navScrollButton)}\n                aria-label={ariaRightScroll}\n                onClick={this.scrollRight}\n                disabled={scrollViewAtEnd}\n              >\n                <AngleRightIcon />\n              </button>\n            )}\n          </React.Fragment>\n        )}\n      </NavContext.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport { NavItem } from '@patternfly/react-core/dist/js/components/Nav/NavItem';\nimport PropTypes from 'prop-types';\n\nconst basepath = document.baseURI;\n\nconst NavigationItem = ({ itemID, title, parent, navigate, ...props }) => (\n    <NavItem\n        {...props}\n        itemId={itemID}\n        preventDefault\n        to={navigate || `${basepath}${parent}/${itemID}`}\n    >\n        {title}\n    </NavItem>\n);\n\nNavigationItem.propTypes = {\n    itemID: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    title: PropTypes.node,\n    navigate: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    parent: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\n\nNavigationItem.defaultProps = {\n    parent: ''\n};\n\nexport default NavigationItem;\n","import React, { Component } from 'react';\nimport { Nav } from '@patternfly/react-core/dist/js/components/Nav/Nav';\nimport  { NavItem } from '@patternfly/react-core/dist/js/components/Nav/NavItem';\nimport { NavExpandable } from '@patternfly/react-core/dist/js/components/Nav/NavExpandable';\nimport { NavList } from '@patternfly/react-core/dist/js/components/Nav/NavList';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { appNavClick, clearActive } from '../../redux/actions';\nimport NavigationItem from './NavigationItem';\n\nimport './Navigation.scss';\n\nconst basepath = document.baseURI;\n\nconst openshiftLinks = {\n    supportcases: {\n        title: 'Support Cases',\n        link: 'https://access.redhat.com/support/cases'\n    },\n    feedback: {\n        title: 'Cluster Manager Feedback',\n        link: 'mailto:ocm-feedback@redhat.com'\n    },\n    marketplace: {\n        title: 'Red Hat Marketplace',\n        link: 'https://marketplace.redhat.com'\n    }\n};\n\nconst insightsLinks = {\n    subscriptionWatch: {\n        title: 'Subscription Watch',\n        link: './subscriptions/'\n    }\n};\n\nexport class Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.onSelect = this.onSelect.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onSelect({ groupId, itemID }) {\n        this.setState({\n            activeGroup: groupId,\n            activeItem: itemID\n        });\n    };\n\n    onClick(event, item, parent) {\n        event.persist();\n        const { onNavigate, onClearActive, activeGroup, activeLocation, settings, appId } = this.props;\n\n        const isMetaKey = (event.ctrlKey || event.metaKey || event.which === 2);\n        let url;\n\n        if (parent && parent.active) {\n            const activeLevel = settings.find(navItem => navItem.id === appId);\n            if (activeLevel) {\n                const activeItem = activeLevel.subItems.find(navItem => navItem.id === activeGroup);\n                if (activeItem && activeItem.reload && !item.reload) {\n                    url = `${basepath}${activeLocation}/${appId}/${item.id}`;\n                    isMetaKey ? window.open(url) : window.location.href = url;\n                }\n            }\n\n            if (!item.reload) {\n                isMetaKey ?  window.open(`${basepath}${activeLocation}/${item.reload}`) :  onNavigate && onNavigate(item, event);\n            } else {\n                url = `${basepath}${activeLocation}/${item.reload}`;\n                isMetaKey ? window.open(url) : window.location.href = url;\n            }\n        } else {\n            if (item.group && activeGroup === item.group) {\n                if (isMetaKey) {\n                    window.open(`${basepath}${activeLocation}/${item.id}`);\n                } else {\n                    onClearActive && onClearActive();\n                    onNavigate && onNavigate(item, event);\n                }\n            } else {\n                const prefix = (parent && parent.id && !item.reload) ? `/${parent.id}/` : '/';\n                url = `${basepath}${activeLocation}${prefix}${item.reload || item.id}`;\n                isMetaKey ? window.open(url) : window.location.href = url;\n            }\n        }\n    }\n\n    render() {\n        const { settings, activeApp, /*navHidden,*/ activeLocation, documentation } = this.props;\n        // if (navHidden) {\n        //     //document.querySelector('aside').setAttribute('hidden', true);\n        // }\n\n        return (\n            <Nav onSelect={this.onSelect} aria-label=\"Insights Global Navigation\" data-ouia-safe=\"true\">\n                <NavList>\n                    {\n                        settings.map((item, key) => {\n                            if (!(item.disabled_on_stable && window.location.pathname.indexOf('/beta') === -1)) {\n                                if (item.subItems) {\n                                    return <NavExpandable\n                                        title={item.title}\n                                        ouia-nav-group={item.id}\n                                        itemID={item.id}\n                                        key={key}\n                                        isActive={item.active}\n                                        isExpanded={item.active}>\n                                        {\n                                            item.subItems.map((subItem, subKey) => {\n                                                if (!(subItem.disabled_on_stable\n                                                    && window.location.pathname.indexOf('/beta') === -1)) {\n                                                    return <NavigationItem\n                                                        itemID={subItem.reload || subItem.id}\n                                                        ouia-nav-item={subItem.reload || subItem.id}\n                                                        key={subKey}\n                                                        title={subItem.title}\n                                                        parent={`${activeLocation}${item.id ? `/${item.id}` : ''}`}\n                                                        isActive={item.active && subItem.id === activeApp}\n                                                        onClick={event => this.onClick(event, subItem, item)}\n                                                    />;\n                                                }\n                                            })\n                                        }\n                                    </NavExpandable>;\n                                } else {\n                                    return <NavigationItem\n                                        itemID={item.id}\n                                        ouia-nav-item={item.id}\n                                        key={key}\n                                        title={item.title}\n                                        parent={activeLocation}\n                                        isActive={item.active || item.id === activeApp}\n                                        onClick={event => this.onClick(event, item)}\n                                    />;\n                                }\n                            }\n                        })\n                    }\n                    { activeLocation === 'insights' &&\n                        Object.entries(insightsLinks).map(\n                            ([key, value]) => {\n                                return <NavItem\n                                    key={key}\n                                    to={value.link}\n                                    target='_blank'\n                                    rel='noopener noreferrer'>\n                                    {value.title}\n                                </NavItem>;\n                            }\n                        )\n                    }\n                    { documentation &&\n                        <React.Fragment>\n                            <NavItem\n                                className=\"ins-c-page__documentation\"\n                                to={documentation}\n                                rel='noopener noreferrer'\n                                target='_blank'>Documentation\n                            </NavItem>\n                        </React.Fragment>\n                    }\n                    { activeLocation === 'openshift' &&\n                        Object.entries(openshiftLinks).map(\n                            ([key, value]) => {\n                                return <NavItem\n                                    key={key}\n                                    to={value.link}\n                                    target='_blank'\n                                    rel='noopener noreferrer'>\n                                    {value.title}\n                                </NavItem>;\n                            }\n                        )\n                    }\n                </NavList>\n            </Nav>\n        );\n    }\n}\n\nNavigation.propTypes = {\n    appId: PropTypes.string,\n    settings: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string,\n            subItems: () => Navigation.propTypes.settings\n        })\n    ),\n    activeApp: PropTypes.string,\n    navHidden: PropTypes.bool,\n    activeLocation: PropTypes.string,\n    documentation: PropTypes.string,\n    onNavigate: PropTypes.func,\n    onClearActive: PropTypes.func,\n    activeGroup: PropTypes.string\n};\n\nfunction stateToProps({ chrome: { globalNav, activeApp, navHidden, activeLocation, activeGroup, appId } }) {\n    return ({ settings: globalNav, activeApp, navHidden, activeLocation, activeGroup, appId });\n}\n\nexport function dispatchToProps(dispatch) {\n    return {\n        onNavigate: (item, event) => dispatch(appNavClick(item, event)),\n        onClearActive: () => dispatch(clearActive())\n    };\n}\n\nexport default connect(stateToProps, dispatchToProps)(Navigation);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport { Dropdown } from '@patternfly/react-core/dist/js/components/Dropdown/Dropdown';\nimport { DropdownItem } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownItem';\nimport { DropdownToggle } from '@patternfly/react-core/dist/js/components/Dropdown/DropdownToggle';\nimport { CaretDownIcon } from '@patternfly/react-icons/dist/js/icons/caret-down-icon';\n\nimport './AppSwitcher.scss';\n\nconst AppSwitcher = ({ currentApp }) => {\n\n    const [isOpen, setIsOpen] = useState(false);\n\n    const dropdownItems = (activeApp) => {\n\n        const appList = [\n            { title: 'Red Hat Insights', id: 'insights' },\n            { title: 'Red Hat OpenShift Cluster Manager', id: 'openshift' },\n            { title: 'Red Hat Ansible Automation Platform', id: 'ansible' },\n            { title: 'Cost Management', id: 'cost-management' },\n            { title: 'Migration Services', id: 'migrations' },\n            { title: 'Subscription Watch', id: 'subscriptions' }\n        ];\n\n        const renderNavItems = appList.map(app =>\n            <DropdownItem\n                component='a'\n                href={`${document.baseURI}${app.id}`}\n                className={classNames({ 'ins-c-app-switcher__current': app.title === activeApp })}\n                key={app.id}>\n                {app.title}\n            </DropdownItem>\n        );\n\n        return renderNavItems;\n\n    };\n\n    return (\n        <section className='ins-c-app-switcher'>\n            <Dropdown\n                isPlain\n                className='ins-c-app-switcher__dropdown'\n                onSelect={() => setIsOpen(!isOpen)}\n                toggle={\n                    <DropdownToggle id=\"toggle-id\" onToggle={() => setIsOpen(!isOpen)} toggleIndicator={CaretDownIcon}>\n                        { currentApp }\n                    </DropdownToggle>\n                }\n                isOpen={isOpen}\n                dropdownItems={dropdownItems(currentApp)}\n            />\n        </section>\n    );\n};\n\nexport default AppSwitcher;\n\nAppSwitcher.propTypes = {\n    currentApp: PropTypes.string\n};\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Navigation from './Navigation';\nimport { connect } from 'react-redux';\n\nimport AppSwitcher from './AppSwitcher';\n\nconst documentationLink = {\n    insights: 'https://access.redhat.com/documentation/en-us/red_hat_insights/',\n    openshift: 'https://docs.openshift.com/dedicated/4/',\n    subscriptions: 'https://access.redhat.com/products/subscription-central',\n    'cost-management': 'https://access.redhat.com/documentation/en-us/openshift_container_platform/#category-cost-management',\n    ansible: 'https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/'\n};\n\nexport class SideNav extends Component {\n    render() {\n        const { activeTechnology, activeLocation } = this.props;\n        return (<Fragment>\n            <AppSwitcher currentApp={activeTechnology}/>\n            <Navigation documentation={documentationLink[activeLocation]} />\n        </Fragment>);\n    }\n}\n\nSideNav.propTypes = {\n    activeTechnology: PropTypes.string,\n    activeLocation: PropTypes.string\n};\n\nSideNav.defaultProps = {\n    activeTechnology: '',\n    activeLocation: ''\n};\n\nexport default connect(({ chrome: {\n    activeTechnology,\n    activeLocation\n} }) => ({\n    activeTechnology,\n    activeLocation\n}))(SideNav);\n","export { default  as Footer } from './Footer';\nexport { default  as Header } from './Header/index';\nexport { unauthed as UnauthedHeader } from './Header/index';\nexport { default  as Sidenav } from './Sidenav/index';\nexport { default as RootApp } from './RootApp';\nexport { default as NoAccess } from './NoAccess';\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n"]}