{"version":3,"file":"node_modules_patternfly_react-core_dist_esm_components_Avatar_index_js-_ffab0.9996d6f4c3e9a5c3.js","mappings":";;;;;;;;;;;;;;;;;;AAA+B;AACA;AACgD;AAChC;AACxC;AACP,UAAU,8CAA8C,cAAc,6CAAM;AAC5E,YAAY,gDAAmB,wBAAwB,+BAA+B,6DAAG,CAAC,iGAAM,SAAS,iGAAM,wCAAwC,iGAAM,uCAAuC,iGAAM,6BAA6B;AACvO;AACA;AACA;;;;;;;;;;;;;;;;ACTyB;AACzB;;;;;;;;;;;;;;;ACDA;AACA;AACA,WAAW,KAAK;AAChB;AACO;AACP;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;AC7BA;;;;;;;;;;;;;;;;ACAsB;AACtB,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC","sources":["webpack://insights-chrome/./node_modules/@patternfly/react-core/dist/esm/components/Avatar/Avatar.js","webpack://insights-chrome/./node_modules/@patternfly/react-core/dist/esm/components/Avatar/index.js","webpack://insights-chrome/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Avatar|./avatar.css","webpack://insights-chrome/./node_modules/@patternfly/react-styles/css/components/Avatar/avatar.mjs"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Avatar/avatar.mjs';\nimport { css } from '@patternfly/react-styles';\nexport const Avatar = (_a) => {\n    var { className = '', src = '', alt, border, size } = _a, props = __rest(_a, [\"className\", \"src\", \"alt\", \"border\", \"size\"]);\n    return (React.createElement(\"img\", Object.assign({ src: src, alt: alt, className: css(styles.avatar, styles.modifiers[size], border === 'light' && styles.modifiers.light, border === 'dark' && styles.modifiers.dark, className) }, props)));\n};\nAvatar.displayName = 'Avatar';\n//# sourceMappingURL=Avatar.js.map","export * from './Avatar';\n//# sourceMappingURL=index.js.map","/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","/* (ignored) */","import './avatar.css';\nexport default {\n  \"avatar\": \"pf-v5-c-avatar\",\n  \"modifiers\": {\n    \"light\": \"pf-m-light\",\n    \"dark\": \"pf-m-dark\",\n    \"sm\": \"pf-m-sm\",\n    \"md\": \"pf-m-md\",\n    \"lg\": \"pf-m-lg\",\n    \"xl\": \"pf-m-xl\"\n  }\n};"],"names":[],"sourceRoot":""}