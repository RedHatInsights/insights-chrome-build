{"version":3,"file":"vendors-node_modules_scalprum_react-core_esm_index_js.171264e2bd46451b.js","mappings":"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","sources":["webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/async-loader.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/default-error-component.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/index.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/prefetch-context.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/scalprum-component.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/scalprum-context.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/scalprum-provider.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/use-load-module.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/use-module.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/use-prefetch.js","webpack://insights-chrome/./node_modules/@scalprum/react-core/esm/use-scalprum.js","webpack://insights-chrome/./node_modules/lodash/isEqual.js"],"sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { getCachedModule, getScalprum } from '@scalprum/core';\nexport function loadComponent(scope, module, importName) {\n    if (importName === void 0) { importName = 'default'; }\n    return __awaiter(this, void 0, void 0, function () {\n        var pluginStore, mod, cachedModule;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    pluginStore = getScalprum().pluginStore;\n                    mod = void 0;\n                    cachedModule = getCachedModule(scope, module).cachedModule;\n                    mod = cachedModule;\n                    if (!!mod) return [3 /*break*/, 2];\n                    return [4 /*yield*/, pluginStore.getExposedModule(scope, module)];\n                case 1:\n                    mod = _a.sent();\n                    _a.label = 2;\n                case 2: return [2 /*return*/, {\n                        prefetch: mod.prefetch,\n                        component: mod[importName],\n                    }];\n            }\n        });\n    });\n}\n//# sourceMappingURL=async-loader.js.map","import React from 'react';\nfunction isErrorWithCause(error) {\n    return (error === null || error === void 0 ? void 0 : error.cause) && typeof error.cause === 'object';\n}\nvar DefaultErrorComponent = function (_a) {\n    var error = _a.error, errorInfo = _a.errorInfo;\n    if (isErrorWithCause(error)) {\n        return React.createElement(DefaultErrorComponent, { error: error.cause, errorInfo: errorInfo });\n    }\n    return (React.createElement(\"div\", null,\n        React.createElement(\"h2\", null, \"Error loading component\"),\n        typeof error === 'string' && React.createElement(\"p\", null, error),\n        (error === null || error === void 0 ? void 0 : error.cause) && typeof (error === null || error === void 0 ? void 0 : error.cause) !== 'object' && React.createElement(\"p\", null, error.cause),\n        (error === null || error === void 0 ? void 0 : error.message) && React.createElement(\"p\", null, error.message),\n        (errorInfo === null || errorInfo === void 0 ? void 0 : errorInfo.componentStack) ? React.createElement(\"pre\", null, errorInfo === null || errorInfo === void 0 ? void 0 : errorInfo.componentStack) : (error === null || error === void 0 ? void 0 : error.stack) && React.createElement(\"pre\", null, error.stack)));\n};\nexport default DefaultErrorComponent;\n//# sourceMappingURL=default-error-component.js.map","export * from './scalprum-component';\nexport * from './scalprum-provider';\nexport * from './use-scalprum';\nexport * from './scalprum-context';\nexport * from './use-module';\nexport * from './use-load-module';\nexport * from './use-prefetch';\nexport * from './prefetch-context';\nexport { ScalprumProvider as default } from './scalprum-provider';\n//# sourceMappingURL=index.js.map","import React from 'react';\nimport { createContext } from 'react';\nexport var PrefetchContext = createContext(undefined);\nexport var PrefetchProvider = function (_a) {\n    var children = _a.children, prefetchPromise = _a.prefetchPromise;\n    return React.createElement(PrefetchContext.Provider, { value: prefetchPromise }, children);\n};\n//# sourceMappingURL=prefetch-context.js.map","import { __assign, __awaiter, __extends, __generator, __rest } from \"tslib\";\nimport React, { useEffect, Suspense, useState, useReducer, useRef } from 'react';\nimport { getCachedModule, handlePrefetchPromise, getAppData, processManifest, getPendingLoading, setPendingLoading, getPendingPrefetch, } from '@scalprum/core';\nimport isEqual from 'lodash/isEqual';\nimport { loadComponent } from './async-loader';\nimport DefaultErrorComponent from './default-error-component';\nimport { PrefetchProvider } from './prefetch-context';\nimport { useScalprum } from './use-scalprum';\nfunction setComponentFromModule(scope, module, isMounted, importName, setComponent) {\n    return __awaiter(this, void 0, void 0, function () {\n        var _a, prefetch, component;\n        return __generator(this, function (_b) {\n            switch (_b.label) {\n                case 0: return [4 /*yield*/, loadComponent(scope, module, importName)];\n                case 1:\n                    _a = _b.sent(), prefetch = _a.prefetch, component = _a.component;\n                    isMounted && setComponent(function () { return component; });\n                    return [2 /*return*/, prefetch];\n            }\n        });\n    });\n}\nvar LoadModule = function (_a) {\n    var _b = _a.fallback, fallback = _b === void 0 ? 'loading' : _b, scope = _a.scope, module = _a.module, ErrorComponent = _a.ErrorComponent, processor = _a.processor, innerRef = _a.innerRef, _c = _a.skipCache, skipCache = _c === void 0 ? false : _c, _d = _a.importName, importName = _d === void 0 ? 'default' : _d, props = __rest(_a, [\"fallback\", \"scope\", \"module\", \"ErrorComponent\", \"processor\", \"innerRef\", \"skipCache\", \"importName\"]);\n    var _e = getAppData(scope), manifestLocation = _e.manifestLocation, pluginManifest = _e.pluginManifest;\n    var _f = useReducer(function (prev) { return prev + 1; }, 0), reRender = _f[0], forceRender = _f[1];\n    var _g = useState(undefined), Component = _g[0], setComponent = _g[1];\n    var _h = useState(), prefetchPromise = _h[0], setPrefetchPromise = _h[1];\n    var _j = useState(), loadingError = _j[0], setLoadingError = _j[1];\n    if (loadingError) {\n        // Error has to be thrown during render loop. Promise based errors won't be catched by error boundary.\n        throw loadingError;\n    }\n    var scalprumApi = useScalprum();\n    useEffect(function () {\n        var prefetchID = \"\".concat(scope, \"#\").concat(module);\n        var _a = getCachedModule(scope, module), cachedModule = _a.cachedModule, prefetchPromise = _a.prefetchPromise;\n        setPrefetchPromise(prefetchPromise);\n        var isMounted = true;\n        var handleLoadingError = function (error) {\n            if (isMounted) {\n                setLoadingError(error);\n                setComponent(function () { return function (props) { return React.createElement(ErrorComponent, __assign({ error: error }, props)); }; });\n            }\n        };\n        var pref;\n        /**\n         * Check if module is being pre-loaded\n         */\n        var pendingLoading = getPendingLoading(scope, module);\n        if (!cachedModule && pendingLoading) {\n            pendingLoading.finally(function () {\n                forceRender();\n            });\n        }\n        else {\n            /**\n             * Here will be registry check\n             */\n            if (!cachedModule) {\n                if (manifestLocation || pluginManifest) {\n                    var processPromise = processManifest((manifestLocation !== null && manifestLocation !== void 0 ? manifestLocation : pluginManifest), scope, module, processor)\n                        .then(function () {\n                        pref = setComponentFromModule(scope, module, isMounted, importName, setComponent);\n                        pref.then(function (result) {\n                            if (result) {\n                                var prefetch = getPendingPrefetch(prefetchID) || result(scalprumApi);\n                                setPrefetchPromise(prefetch);\n                                handlePrefetchPromise(prefetchID, prefetch);\n                            }\n                        });\n                        return pref;\n                    })\n                        .catch(handleLoadingError);\n                    // lock module preload\n                    setPendingLoading(scope, module, processPromise);\n                }\n            }\n            else {\n                try {\n                    isMounted && setComponent(function () { return cachedModule[importName]; });\n                    pref = cachedModule.prefetch;\n                    if (pref) {\n                        var prefetch = getPendingPrefetch(prefetchID) || pref(scalprumApi);\n                        setPrefetchPromise(prefetch);\n                        handlePrefetchPromise(prefetchID, prefetch);\n                    }\n                }\n                catch (e) {\n                    handleLoadingError(e);\n                }\n            }\n        }\n        return function () {\n            isMounted = false;\n            setLoadingError(undefined);\n        };\n    }, [scope, skipCache, reRender]);\n    // clear prefetchPromise (from factory)\n    var initialPrefetch = useRef(false);\n    useEffect(function () {\n        if (initialPrefetch.current) {\n            setPrefetchPromise(undefined);\n        }\n        initialPrefetch.current = true;\n    }, [scope, module]);\n    return (React.createElement(PrefetchProvider, { prefetchPromise: prefetchPromise },\n        React.createElement(Suspense, { fallback: fallback }, Component ? React.createElement(Component, __assign({ ref: innerRef }, props)) : fallback)));\n};\nvar BaseScalprumComponent = /** @class */ (function (_super) {\n    __extends(BaseScalprumComponent, _super);\n    function BaseScalprumComponent(props) {\n        var _this = _super.call(this, props) || this;\n        _this.state = { hasError: false };\n        _this.selfRepairAttempt = false;\n        return _this;\n    }\n    BaseScalprumComponent.getDerivedStateFromError = function () {\n        return { hasError: true };\n    };\n    BaseScalprumComponent.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        if (this.state.hasError !== nextState.hasError) {\n            return true;\n        }\n        return !isEqual(nextProps, this.props) || !isEqual(nextState, this.state);\n    };\n    // TODO: Use ErrorWithCause once the type is available\n    BaseScalprumComponent.prototype.componentDidCatch = function (error, errorInfo) {\n        if (this.selfRepairAttempt === true) {\n            console.error('Scalprum encountered an error!', (error === null || error === void 0 ? void 0 : error.cause) || error.message, error);\n            this.setState({ error: error, errorInfo: errorInfo });\n        }\n        else {\n            console.warn('Scalprum failed to render component. Attempting to skip module cache.');\n            this.setState({ repairAttempt: true });\n        }\n    };\n    BaseScalprumComponent.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, _b = _a.ErrorComponent, ErrorComponent = _b === void 0 ? React.createElement(DefaultErrorComponent, __assign({}, this.state)) : _b, props = __rest(_a, [\"ErrorComponent\"]);\n        var PreparedError = function (props) {\n            return React.cloneElement(ErrorComponent, __assign(__assign({}, _this.state), props));\n        };\n        if (this.state.repairAttempt && !this.selfRepairAttempt) {\n            /**\n             * Retry fetching module with disabled cache\n             */\n            this.selfRepairAttempt = true;\n            return React.createElement(LoadModule, __assign({}, props, { skipCache: true, ErrorComponent: PreparedError }));\n        }\n        if (this.state.hasError && this.selfRepairAttempt) {\n            return React.cloneElement(ErrorComponent, __assign({}, this.state));\n        }\n        return React.createElement(LoadModule, __assign({}, props, { ErrorComponent: PreparedError }));\n    };\n    BaseScalprumComponent.defaultProps = {\n        ErrorComponent: React.createElement(DefaultErrorComponent, null),\n    };\n    return BaseScalprumComponent;\n}(React.Component));\nexport var ScalprumComponent = React.forwardRef(function (props, ref) { return (React.createElement(BaseScalprumComponent, __assign({}, props, { innerRef: ref }))); });\n//# sourceMappingURL=scalprum-component.js.map","import { createContext } from 'react';\nexport var ScalprumContext = createContext({\n    initialized: false,\n    config: {},\n    api: {},\n    pluginStore: {},\n});\n//# sourceMappingURL=scalprum-context.js.map","import { __assign } from \"tslib\";\nimport React, { useMemo } from 'react';\nimport { initialize } from '@scalprum/core';\nimport { ScalprumContext } from './scalprum-context';\nimport { PluginStoreProvider } from '@openshift/dynamic-plugin-sdk';\nfunction isInstanceProps(props) {\n    return 'scalprum' in props;\n}\nfunction baseTransformPluginManifest(manifest) {\n    return __assign(__assign({}, manifest), { loadScripts: manifest.loadScripts.map(function (script) { return \"\".concat(manifest.baseURL).concat(script); }) });\n}\nexport function ScalprumProvider(props) {\n    var state = useMemo(function () {\n        var _a;\n        if (isInstanceProps(props)) {\n            return props.scalprum;\n        }\n        var config = props.config, api = props.api, pluginSDKOptions = props.pluginSDKOptions;\n        var _b = (pluginSDKOptions === null || pluginSDKOptions === void 0 ? void 0 : pluginSDKOptions.pluginLoaderOptions) || {}, postProcessManifest = _b.postProcessManifest, transformPluginManifest = _b.transformPluginManifest;\n        // SDK v4 and v5 compatibility layer\n        var internalTransformPluginManifest = (_a = (postProcessManifest || transformPluginManifest)) !== null && _a !== void 0 ? _a : baseTransformPluginManifest;\n        if (postProcessManifest) {\n            console.error(\"[Scalprum] Deprecation warning!\\n  Please use pluginSDKOptions.pluginLoaderOptions.transformPluginManifest instead of pluginSDKOptions.pluginLoaderOptions.postProcessManifest.\\n  The postProcessManifest option will be removed in the next major release.\");\n        }\n        return initialize(__assign(__assign({ appsConfig: config, api: api }, pluginSDKOptions), { pluginLoaderOptions: __assign(__assign({}, pluginSDKOptions === null || pluginSDKOptions === void 0 ? void 0 : pluginSDKOptions.pluginLoaderOptions), { transformPluginManifest: internalTransformPluginManifest }) }));\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n    }, [props.api, props.config, props.scalprum]);\n    var value = useMemo(function () { return ({\n        config: state.appsConfig,\n        api: state.api,\n        initialized: true,\n        pluginStore: state.pluginStore,\n    }); }, \n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    [props.api, props.config, props.scalprum, state]);\n    return (React.createElement(ScalprumContext.Provider, { value: value },\n        React.createElement(PluginStoreProvider, { store: state.pluginStore }, props.children)));\n}\n//# sourceMappingURL=scalprum-provider.js.map","import { __awaiter, __generator } from \"tslib\";\nimport { useEffect, useState, useRef } from 'react';\nimport { getCachedModule, getAppData, processManifest, getScalprum } from '@scalprum/core';\nexport function useLoadModule(_a, defaultState) {\n    var _this = this;\n    var scope = _a.scope, module = _a.module, processor = _a.processor;\n    var manifestLocation = getAppData(scope).manifestLocation;\n    var _b = useState(defaultState), data = _b[0], setData = _b[1];\n    var _c = useState(), error = _c[0], setError = _c[1];\n    var cachedModule = getCachedModule(scope, module).cachedModule;\n    var isMounted = useRef(true);\n    var pluginStore = getScalprum().pluginStore;\n    useEffect(function () {\n        if (isMounted.current) {\n            if (!cachedModule) {\n                if (manifestLocation) {\n                    processManifest(manifestLocation, scope, module, processor)\n                        .then(function () { return __awaiter(_this, void 0, void 0, function () {\n                        var Module;\n                        return __generator(this, function (_a) {\n                            switch (_a.label) {\n                                case 0: return [4 /*yield*/, pluginStore.getExposedModule(scope, module)];\n                                case 1:\n                                    Module = _a.sent();\n                                    setData(function () { return Module; });\n                                    return [2 /*return*/];\n                            }\n                        });\n                    }); })\n                        .catch(function (e) {\n                        setError(function () { return e; });\n                    });\n                }\n            }\n            else {\n                try {\n                    pluginStore.getExposedModule(scope, module).then(function (Module) {\n                        setData(function () { return Module; });\n                    });\n                }\n                catch (e) {\n                    setError(function () { return e; });\n                }\n            }\n        }\n        return function () {\n            isMounted.current = false;\n        };\n    }, [scope, cachedModule]);\n    return [data, error];\n}\n//# sourceMappingURL=use-load-module.js.map","import { __awaiter, __generator } from \"tslib\";\nimport { useEffect, useState, useCallback } from 'react';\nimport { getModule } from '@scalprum/core';\nexport function useModule(scope, module, defaultState, importName) {\n    var _this = this;\n    if (importName === void 0) { importName = 'default'; }\n    var _a = useState(defaultState), data = _a[0], setData = _a[1];\n    var fetchModule = useCallback(function () { return __awaiter(_this, void 0, void 0, function () {\n        var Module_1, error_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    _a.trys.push([0, 2, , 3]);\n                    return [4 /*yield*/, getModule(scope, module, importName)];\n                case 1:\n                    Module_1 = _a.sent();\n                    setData(function () { return Module_1; });\n                    return [3 /*break*/, 3];\n                case 2:\n                    error_1 = _a.sent();\n                    console.error(error_1);\n                    return [3 /*break*/, 3];\n                case 3: return [2 /*return*/];\n            }\n        });\n    }); }, [scope, module]);\n    useEffect(function () {\n        fetchModule();\n    }, [scope, module, importName]);\n    return data;\n}\n//# sourceMappingURL=use-module.js.map","import { __assign } from \"tslib\";\nimport { useEffect } from 'react';\nimport { useContext, useState } from 'react';\nimport { PrefetchContext } from './prefetch-context';\nvar defaultState = {\n    data: undefined,\n    ready: false,\n    error: undefined,\n};\nexport var usePrefetch = function () {\n    var _a = useState(defaultState), currState = _a[0], setCurrState = _a[1];\n    var promise = useContext(PrefetchContext);\n    useEffect(function () {\n        currState.ready = false;\n        promise === null || promise === void 0 ? void 0 : promise.then(function (res) {\n            setCurrState(__assign(__assign({}, currState), { error: undefined, data: res, ready: true }));\n        }).catch(function (e) {\n            setCurrState(__assign(__assign({}, currState), { ready: true, data: undefined, error: e }));\n        });\n    }, [promise]);\n    return currState;\n};\n//# sourceMappingURL=use-prefetch.js.map","import { useContext } from 'react';\nimport { ScalprumContext } from './scalprum-context';\nexport function useScalprum(selector) {\n    var state = useContext(ScalprumContext);\n    if (typeof selector === 'function') {\n        return selector(state);\n    }\n    return state;\n}\n//# sourceMappingURL=use-scalprum.js.map","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n"],"names":[],"sourceRoot":""}