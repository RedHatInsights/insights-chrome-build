{"version":3,"file":"src_components_NotEntitledModal_index_tsx.10f5250f9d243b58.css","mappings":";;;AAIE;EACI;EACA;EACA;EACA;EACA;AAHN;AAKE;EACI;EACA;EACA;AAHN;AAIM;EAAU;AADhB;AAEM;EAAsB;AAC5B;;AAGA;EAAsB;AACtB;;AACA;ECuBE,YAxBgB;EAyBhB,eAxBiB;ADInB,C","sources":["webpack://insights-chrome/./src/components/NotEntitledModal/styles.scss","webpack://insights-chrome/./node_modules/@redhat-cloud-services/frontend-components-utilities/styles/_mixins.scss"],"sourcesContent":["@import '~@redhat-cloud-services/frontend-components-utilities/styles/_mixins';\n\n// Unentitled Modal Styles\n.chr-c-error-modal {\n  &__header {\n      text-align: center;\n      max-width: 75%;\n      margin-left: auto;\n      margin-right: auto;\n      padding-bottom: var(--pf-v5-global--spacer--md);\n  }\n  &__content {\n      align-items: center;\n      justify-content: center;\n      text-align: center;\n      &--body { width: 75%; }\n      &--footer-secondary { margin-top: var(--pf-v5-global--spacer--sm);}\n  }\n}\n\n.chr-c-icon__active { fill: var(--pf-v5-global--active-color--100); }\n\nimg.chr-c-application-info__logo {\n  @include rem('height', 76px);\n}","@use \"sass:math\";\n\n// Convert px to rem\n// =================================================================/\n@mixin rem($property, $values) {\n\n  // Create a couple of empty lists as output buffers.\n  $font-size: 16px;\n  $px-values: ();\n  $rem-values: ();\n\n  // Loop through the $values list\n  @each $value in $values {\n\n    // For each property value, if it's in rem or px, derive both rem and\n    // px values for it and add those to the end of the appropriate buffer.\n    // Ensure all pixel values are rounded to the nearest pixel.\n    @if type-of($value) == number and not unitless($value) and (unit($value) == px) {\n\n      // px value given - calculate rem value from font-size\n      $new-rem-value: math.div($value, $font-size);\n      $px-values: join($px-values, round($value));\n      $rem-values: join($rem-values, unquote(\"#{$new-rem-value}rem\"));\n\n    } @else if type-of($value) == number and not unitless($value) and (unit($value) == '%') {\n\n      // % value given - don't add px or rem\n      $px-values: join($px-values, unquote(#{$value}));\n      $rem-values: join($rem-values, unquote(#{$value}));\n\n    } @else if $value == auto {\n\n      // auto - don't add px or rem\n      $px-values: join($px-values, auto);\n      $rem-values: join($rem-values, auto);\n\n    } @else {\n\n      // unitless value - use those directly as rem and calculate the px-fallback\n      $px-values: join($px-values, round($value * $font-size));\n      $rem-values: join($rem-values, unquote(\"#{$value}rem\"));\n    }\n  }\n\n  // output the converted rules\n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n\n}\n\n\n\n// Generate font-size in rem\n// =================================================================/\n@mixin font-size($size, $line: $size * 1.4) {\n  font-size: ($size);\n  font-size: math.div($size, $ins-fontSize) + rem;\n\n  @if $line == 1 {\n    line-height: 1;\n\n  } @else if $line != null {\n    line-height: $line;\n    line-height: math.div($line, $ins-fontSize) + rem;\n  }\n}\n\n\n\n// Generate transition\n// =================================================================/\n@mixin transition($property) {\n\n  transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  -o-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  -ms-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  -moz-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  -webkit-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n}"],"names":[],"sourceRoot":""}