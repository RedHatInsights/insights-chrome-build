{"version":3,"file":"src_components_FavoriteServices_LandingNavFavorites_tsx.a73a32934b9500cb.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA4G;AAC1B;AACS;AAChB;AACY;AACe;AACtB;AACxC;AAC4B;AACZ;AACF;AAClB;AACI;AAExC,IAAMoB,sBAAsB;IAC1B,IAAMC,oBAAoBL,uEAAoBA;IAC9C,IAAwBD,6BAAAA,+CAAQA,CAAC,QAA1BO,OAAiBP,cAAXQ,UAAWR;IACxB,IAA8BD,mCAAAA,qDAAc,CAAC,QAAtCU,UAAuBV,oBAAdW,aAAcX;IAE9B,IAAMY,YAAY,SAACC,QAA6DC;QAC9EL,QAAQK;IACV;IAEA,IAAMC,kBAAkB,SAACF,QAA6DG,YAAoBF;QACxGH,WAAWK;QACXP,QAAQK;IACV;IAEA,IAAMG,YAAY,SAACC;eAAiBd,4DAAa,CAACc,KAAKC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;;IAErE,IAAMC,iBAAiB;QACrB,OAAOb,kBAAkBc,KAAK,CAAC,CAACb,OAAO,KAAKE,SAASF,OAAOE,SAASY,GAAG,CAAC,SAACC,UAAUC;iCAClF,2DAAC/B,4FAAWA;gBAACgC,KAAKD;6BAChB,2DAACnB,mDAAIA;gBAACqB,IAAIH,SAASI,QAAQ;gBAAEC,WAAU;6BACrC,2DAAC1C,qFAAIA;gBAAC0C,WAAU;gBAAyBC,aAAAA;6BACvC,2DAACzC,2FAAUA;gBAAC0C,mBAAmB;oBAAEC,oBAAoB;oBAAMC,gCAAgC;gBAAiB;gBAAGJ,WAAU;6BACvH,2DAACvC,0FAASA;gBAACuC,WAAU;eAA2EL,SAASU,IAAI,kBAE/G,2DAAC9C,yFAAQA;gBAACyC,WAAU;eAAoEX,UAAUM,SAASI,QAAQ;;IAK7H;IAEA,qBACE,2DAAC3B,uDAAc,sBACb,2DAACV,kFAAIA,sBACH,2DAACC,sFAAQA,sBACP,2DAACM,4FAAWA,sBACV,2DAACD,qFAAIA;QAACuC,WAAWrC,6FAAYA,CAACsC,EAAE;QAAER,WAAU;qBAC1C,2DAAClC,qFAAIA;QAACkC,WAAU;QAAgBS,QAAO;qBACrC,2DAACtC,0FAAQA,UACJ,uCAGT,2DAACH,qFAAIA;QAACuC,WAAWrC,6FAAYA,CAACwC,CAAC;QAAEV,WAAU;qBACzC,2DAACvB,mDAAIA;QAACqB,IAAG;OAAe,uCAI9B,2DAACnC,sFAAQA;QAACgD,OAAO;YAAEC,SAAS;QAAa;qBACvC,2DAAC7C,iGAAUA;QACT8C,WAAAA;QACAC,SAAQ;QACRC,WAAWpC,kBAAkBqC,MAAM;QACnCpC,MAAMA;QACNE,SAASA;QACTK,iBAAiBA;QACjBH,WAAWA;QACXiC,UAAS;QACTjB,WAAU;UAKfrB,kBAAkBqC,MAAM,KAAK,kBAC5B,2DAACzC,oEAAUA,wBAEX,2DAACH,uDAAc,sBACb,2DAACR,wFAAOA;QAACoC,WAAU;QAAgBkB,WAAAA;OAChC1B;AAMb;AAEA,iEAAed,mBAAmBA,EAAC","sources":["webpack://insights-chrome/./src/components/FavoriteServices/LandingNavFavorites.scss?4070","webpack://insights-chrome/./src/components/FavoriteServices/LandingNavFavorites.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import { Card, CardBody, CardHeader, CardTitle } from '@patternfly/react-core/dist/dynamic/components/Card';\nimport { Flex, FlexItem } from '@patternfly/react-core/dist/dynamic/layouts/Flex';\nimport { Gallery, GalleryItem } from '@patternfly/react-core/dist/dynamic/layouts/Gallery';\nimport { Icon } from '@patternfly/react-core/dist/dynamic/components/Icon';\nimport { Pagination } from '@patternfly/react-core/dist/dynamic/components/Pagination';\nimport { Text, TextContent, TextVariants } from '@patternfly/react-core/dist/dynamic/components/Text';\nimport { StarIcon } from '@patternfly/react-icons/dist/dynamic/icons/star-icon';\nimport React, { useState } from 'react';\nimport useFavoritedServices from '../../hooks/useFavoritedServices';\nimport EmptyState from '../FavoriteServices/EmptyState';\nimport { bundleMapping } from '../../hooks/useBundle';\nimport './LandingNavFavorites.scss';\nimport { Link } from 'react-router-dom';\n\nconst LandingNavFavorites = () => {\n  const favoritedServices = useFavoritedServices();\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = React.useState(4);\n\n  const onSetPage = (_event: React.MouseEvent | React.KeyboardEvent | MouseEvent, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const onPerPageSelect = (_event: React.MouseEvent | React.KeyboardEvent | MouseEvent, newPerPage: number, newPage: number) => {\n    setPerPage(newPerPage);\n    setPage(newPage);\n  };\n\n  const getBundle = (href: string) => bundleMapping[href.split('/')[1]];\n\n  const buildFavorites = () => {\n    return favoritedServices.slice((page - 1) * perPage, page * perPage).map((favorite, index) => (\n      <GalleryItem key={index}>\n        <Link to={favorite.pathname} className=\"chr-c-favorite-service__tile\">\n          <Card className=\"chr-c-card-landing-fav\" isClickable>\n            <CardHeader selectableActions={{ selectableActionId: 'id', selectableActionAriaLabelledby: 'clickable-card' }} className=\"pf-v5-u-pb-0\">\n              <CardTitle className=\"pf-v5-u-text-align-center pf-v5-u-active-color-100 pf-v5-u-font-size-sm\">{favorite.name}</CardTitle>\n            </CardHeader>\n            <CardBody className=\"pf-v5-u-text-align-center pf-v5-u-color-100 pf-v5-u-font-size-xs\">{getBundle(favorite.pathname)}</CardBody>\n          </Card>\n        </Link>\n      </GalleryItem>\n    ));\n  };\n\n  return (\n    <React.Fragment>\n      <Flex>\n        <FlexItem>\n          <TextContent>\n            <Text component={TextVariants.h2} className=\"pf-v5-u-display-inline pf-v5-u-pr-lg\">\n              <Icon className=\"pf-v5-u-mr-sm\" status=\"warning\">\n                <StarIcon />\n              </Icon>\n              My favorite services\n            </Text>\n            <Text component={TextVariants.p} className=\"pf-v5-u-display-inline\">\n              <Link to=\"/allservices\">View all services</Link>\n            </Text>\n          </TextContent>\n        </FlexItem>\n        <FlexItem align={{ default: 'alignRight' }}>\n          <Pagination\n            isCompact\n            variant=\"top\"\n            itemCount={favoritedServices.length}\n            page={page}\n            perPage={perPage}\n            onPerPageSelect={onPerPageSelect}\n            onSetPage={onSetPage}\n            widgetId=\"favorites-cards-pagination\"\n            className=\"chr-c-pagination-landing-favorites\"\n          />\n        </FlexItem>\n      </Flex>\n\n      {favoritedServices.length === 0 ? (\n        <EmptyState />\n      ) : (\n        <React.Fragment>\n          <Gallery className=\"pf-v5-u-pt-md\" hasGutter>\n            {buildFavorites()}\n          </Gallery>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default LandingNavFavorites;\n"],"names":["Card","CardBody","CardHeader","CardTitle","Flex","FlexItem","Gallery","GalleryItem","Icon","Pagination","Text","TextContent","TextVariants","StarIcon","React","useState","useFavoritedServices","EmptyState","bundleMapping","Link","LandingNavFavorites","favoritedServices","page","setPage","perPage","setPerPage","onSetPage","_event","newPage","onPerPageSelect","newPerPage","getBundle","href","split","buildFavorites","slice","map","favorite","index","key","to","pathname","className","isClickable","selectableActions","selectableActionId","selectableActionAriaLabelledby","name","Fragment","component","h2","status","p","align","default","isCompact","variant","itemCount","length","widgetId","hasGutter"],"sourceRoot":""}