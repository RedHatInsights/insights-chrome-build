{"version":3,"sources":["App/Footer.js","App/Header/Logo.js","App/Header/Brand.js","App/Header/UserToggle.js","App/Header/UserIcon.js","App/Header/ToolbarToggle.js","App/Header/InsightsAbout.js","App/Header/Tools.js","App/Header/index.js","App/Sidenav/NavigationItem.js","App/Sidenav/Navigation.js","App/Sidenav/index.js","App/index.js"],"names":["logo","Brand","toggleNav","navHidden","mapDispatchToProps","dispatch","chrome","buildItems","accountNumber","extraItems","window","insights","auth","logout","UserToggle","props","state","isOpen","onSelect","bind","onToggle","setState","account","isSmall","toggle","name","DropdownPosition","right","number","Component","propTypes","PropTypes","shape","oneOfType","string","bool","arrayOf","node","defaultProps","user","account_number","firstName","lastName","UserIcon","img","Image","src","login","fallback","width","ToolbarToggle","_ev","url","location","document","baseURI","dropdownItems","map","title","ev","onClick","icon","InsightsAbout","app","globalNav","find","item","active","subItems","subApp","subItem","id","activeApp","reload","appDetails","apps","path","version","currentApp","updateAppVersion","term","details","buildId","appDetail","forEach","fetch","then","response","json","catch","travis","data","src_hash","build_id","isModalOpen","onClose","getItem","username","pathname","mapStateToProps","appId","aboutButton","QuestionCircleIcon","widget","actions","Tools","onModalToggle","oneItem","key","items","event","action","basepath","itemId","parent","Navigation","groupId","activeGroup","activeItem","_event","onNavigate","onClearActive","href","group","indexOf","prefix","settings","activeLocation","querySelector","setAttribute","disabled","subKey","stateToProps","dispatchToProps","SideNav","activeTechnology"],"mappings":"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","file":"App.48fd6253.map","sourceRoot":"../../src/js","sourcesContent":["import React from 'react';\n\nexport default () => <div>I am Footer</div>;\n","import React from 'react';\nimport logo from '../../../../static/images/logo-cs.svg';\n\nexport default () => <img src={logo} alt=\"Red Hat Cloud Services Logo\" />;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { onToggle } from '../../redux/actions';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport Logo from './Logo';\n\nconst Brand = ({ toggleNav, navHidden }) => (<div className=\"pf-l-page__header-brand pf-c-page__header-brand\">\n    <div hidden={navHidden}>\n        <Button\n            variant=\"plain\"\n            aria-label=\"Toggle primary navigation\"\n            widget-type=\"InsightsNavToggle\"\n            onClick={() => toggleNav && toggleNav()}\n        >\n            <BarsIcon size=\"md\"/>\n        </Button>\n    </div>\n    <a className=\"pf-l-page__header-brand-link pf-c-page__header-brand-link\" href=\"./\">\n        <Logo />\n    </a>\n</div>);\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleNav: () => {\n            dispatch(onToggle());\n        }\n    };\n}\n\nexport default connect(({ chrome: { navHidden } }) => ({ navHidden }), mapDispatchToProps)(Brand);\n","import React, { Component } from 'react';\nimport {\n    Dropdown,\n    DropdownToggle,\n    KebabToggle,\n    DropdownItem,\n    DropdownSeparator,\n    DropdownPosition\n} from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction buildItems(accountNumber = -1, extraItems) {\n    return [\n        <DropdownItem key=\"logout\" component=\"button\" onClick={() => window.insights.chrome.auth.logout()}>\n            Logout\n        </DropdownItem>,\n        <DropdownSeparator key=\"separator\" />,\n        <DropdownItem key=\"Account\" isDisabled>\n            <dl className='account-number'>\n                <dt className=\"account-number__header\">Account Number:</dt>\n                <dd className=\"account-number__value\">{accountNumber}</dd>\n            </dl>\n        </DropdownItem>,\n        [...extraItems]\n    ];\n}\n\nclass UserToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    }\n\n    render() {\n        const { isOpen } = this.state;\n        const { account, isSmall, extraItems } = this.props;\n        const toggle = isSmall ?\n            <KebabToggle onToggle={this.onToggle} /> :\n            <DropdownToggle onToggle={this.onToggle}>{account.name}</DropdownToggle>;\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                aria-label=\"Overflow actions\"\n                widget-type=\"InsightsOverflowActions\"\n                onSelect={this.onSelect}\n                toggle={toggle}\n                isPlain\n                isOpen={isOpen}\n                dropdownItems={buildItems(account.number, extraItems)}\n            />\n        );\n    }\n}\n\nUserToggle.propTypes = {\n    account: PropTypes.shape({\n        number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        name: PropTypes.string\n    }),\n    isSmall: PropTypes.bool,\n    extraItems: PropTypes.arrayOf(PropTypes.node)\n};\n\nUserToggle.defaultProps = {\n    account: {\n        number: 1,\n        name: 'Foo'\n    },\n    isSmall: false,\n    extraItems: []\n};\n\nexport default connect(({ chrome: { user: { account_number: accountNumber, firstName, lastName } } }) => ({\n    account: {\n        number: accountNumber,\n        name: `${firstName} ${lastName}`\n    }\n}))(UserToggle);\n","import React, { Component } from 'react';\nimport { Avatar } from '@patternfly/react-core/dist/esm/components/Avatar';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass UserIcon extends Component {\n\n    render() {\n        const { account } = this.props;\n\n        // If a user has an image, it gets returned as 140x140px\n        // Check to see if the user has an image by looking at the width\n        const img = new Image();\n        img.src = `https://access.redhat.com/api/users/avatar/${account.login}/`;\n\n        const fallback = 'apps/chrome/assets/images/img_avatar.svg';\n        return (\n            <Avatar src={ img.width === 140 ? img.src : fallback }/>\n        );\n    }\n}\n\nUserIcon.propTypes = {\n    account: PropTypes.shape({\n        login: PropTypes.string\n    })\n};\n\nexport default connect(({ chrome: { user: { login } } }) => ({\n    account: {\n        login: login\n    }\n}))(UserIcon);\n","import React, { Component } from 'react';\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownItem,\n    DropdownPosition\n} from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport PropTypes from 'prop-types';\n\nclass ToolbarToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    onClick(_ev, url) {\n        window.location = `${document.baseURI}/${url}`;\n    }\n\n    render() {\n        const dropdownItems = this.props.dropdownItems.map(({ url, title }) =>\n            <DropdownItem component='button' onClick={ev => this.onClick(ev, url)}>{ title }</DropdownItem>\n        );\n\n        const toggle = <DropdownToggle iconComponent={null} onToggle={this.onToggle}>\n            <this.props.icon />\n        </DropdownToggle>;\n\n        return (\n            <Dropdown\n                aria-label='Settings'\n                position={DropdownPosition.right}\n                toggle={toggle}\n                isOpen={this.state.isOpen}\n                dropdownItems={dropdownItems}\n                onSelect={this.onSelect}\n                isPlain\n            />\n        );\n    }\n}\n\nToolbarToggle.propTypes = {\n    icon: PropTypes.node,\n    dropdownItems: PropTypes.arrayOf(PropTypes.node)\n};\n\nexport default ToolbarToggle;\n","import React, { Component } from 'react';\n\nimport {\n    AboutModal,\n    TextContent, TextList, TextListItem,\n    Level, LevelItem,\n    Stack, StackItem\n} from '@patternfly/react-core';\n\nimport logo from '../../../../static/images/logo-cs.svg';\nimport { connect } from 'react-redux';\n\nimport './InsightsAbout.scss';\n\nclass InsightsAbout extends Component {\n    constructor(props) {\n        super(props);\n\n        let app;\n        if (this.props.globalNav) {\n            app = this.props.globalNav.find(item => item.active);\n            if (app.subItems) {\n                const subApp = app.subItems.find(subItem => subItem.id === this.props.activeApp);\n                app = subApp && subApp.reload ? subApp : app;\n            }\n        }\n\n        this.state = {\n            appDetails: { apps: [\n                { name: 'Chrome', path: 'apps/chrome/app.info.json', version: 'N/A' },\n                { name: 'Dashboard', path: `apps/dashboard/app.info.json`, version: 'N/A' },\n                { name: 'Inventory', path: `apps/inventory/app.info.json`, version: 'N/A' },\n                { name: 'Remediations', path: `apps/remediations/app.info.json`, version: 'N/A' },\n                { name: 'Vulnerabilities', path: 'apps/vulnerability/app.info.json', version: 'N/A' },\n                { name: 'Compliance', path: 'apps/compliance/app.info.json', version: 'N/A' },\n                { name: 'Cost Management', path: 'apps/cost-management/app.info.json', version: 'N/A' },\n                { name: 'Insights', path: 'apps/advisor/app.info.json', version: 'N/A' }\n            ] },\n            currentApp: app && app.title\n        };\n        this.updateAppVersion = this.updateAppVersion.bind(this);\n    }\n\n    getItem(term, details) {\n        return <React.Fragment>\n            <TextListItem component=\"dt\">{term}:</TextListItem>\n            <TextListItem component=\"dd\">\n                {\n                    (typeof details === 'function') ? details() : details\n                }\n            </TextListItem>\n        </React.Fragment>;\n    }\n\n    updateAppVersion(app, version, buildId) {\n        const { appDetails } = this.state;\n        let currentApp = appDetails.apps.find(appDetail => appDetail.name === app.name);\n\n        if (currentApp) {\n            if (buildId) {\n                version = `${version}.${buildId}`;\n            }\n\n            currentApp.version = version;\n        }\n\n        this.setState(appDetails);\n    }\n\n    componentDidMount() {\n        this.state.appDetails.apps.forEach((app) => {\n            fetch(app.path)\n            .then(response => response.json())\n            .catch(() => ({ travis: {} }))\n            .then(data => this.updateAppVersion(app, data.src_hash, data.build_id));\n        });\n    }\n\n    render() {\n        const { isModalOpen, onClose, user } = this.props;\n\n        return (\n            <AboutModal\n                isOpen={isModalOpen}\n                onClose={onClose}\n                brandImageSrc={logo}\n                brandImageAlt=\"Red Hat Cloud Services Logo\"\n                heroImageSrc={`${document.baseURI}/static/chrome/assets/images/pfbg_2000.jpg`}\n                trademark='Copyright © 2018 Red Hat, Inc.'\n            >\n                <Stack gutter='sm'>\n                    <StackItem>\n                        Please include these details when opening a support case against Insights\n                    </StackItem>\n                    <StackItem>\n                        <TextContent>\n                            <TextList component=\"dl\" className='ins-debug-info'>\n                                {this.getItem('User Name', user && user.username)}\n                                {this.getItem('Current Application', this.state.currentApp)}\n                                {this.getItem('Application Path', window.location.pathname)}\n                                {this.state.appDetails.apps.map((app) => {\n                                    return this.getItem(app.name + ' Version', app.version);\n                                })}\n                            </TextList>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem className='ins-c-about-modal__footer'>\n                        <Level>\n                            <LevelItem>\n                                <a class=\"nav-link\"\n                                    href=\"https://www.redhat.com/en/about/privacy-policy\"\n                                    target=\"_blank\">\n                                    Privacy Policy\n                                </a>\n                            </LevelItem>\n                            <LevelItem>\n                                <a class=\"nav-link\"\n                                    href=\"https://ci.foo.redhat.com:1337/help/terms/\"\n                                    target=\"_blank\">\n                                    Customer Portal Terms of Use\n                                </a>\n                            </LevelItem>\n                            <LevelItem>\n                                <a class=\"nav-link\"\n                                    href=\"https://www.redhat.com/en/about/all-policies-guidelines\"\n                                    target=\"_blank\">\n                                    All Policies and Guidelines\n                                </a>\n                            </LevelItem>\n                        </Level>\n                    </StackItem>\n                </Stack>\n            </AboutModal>\n        );\n    }\n}\n\nfunction mapStateToProps({ chrome: { user, appId, globalNav, activeApp } }) {\n    return { appId, globalNav, user, activeApp };\n}\n\nexport default connect(mapStateToProps)(InsightsAbout);\n","import React, { Component } from 'react';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport { Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core/dist/esm/layouts/Toolbar';\nimport { DropdownItem } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n// import SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\n// import BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\n// import CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport UserToggle from './UserToggle';\nimport UserIcon from './UserIcon';\nimport ToolbarToggle from './ToolbarToggle';\nimport InsightsAbout from './InsightsAbout';\n\nconst aboutButton = {\n    title: 'FAQ',\n    icon: QuestionCircleIcon,\n    widget: 'InsightsFAQ'\n};\n\nconst actions = [\n    // {\n    //     title: 'Search',\n    //     icon: SearchIcon,\n    //     widget: 'InsightsSearch'\n    // },\n    // {\n    //     title: 'Notification',\n    //     icon: BellIcon,\n    //     widget: 'InsightsNotifications'\n    // },\n    // {\n    //     title: 'Settings',\n    //     icon: CogIcon,\n    //     widget: 'InsightsSettings',\n    //     items: [\n    //         {\n    //             title: 'Topological Inventory',\n    //             url: 'topological-inventory'\n    //         }\n    //     ]\n    // },\n    aboutButton\n];\n\nclass Tools extends Component {\n    constructor(props) {\n        super(props);\n        this.onModalToggle = this.onModalToggle.bind(this);\n        aboutButton.onClick = this.onModalToggle.bind(this);\n        this.state = {\n            isModalOpen: false\n        };\n    }\n    onModalToggle() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        const { isModalOpen } = this.state;\n        return (\n            <div className=\"pf-l-page__header-tools pf-c-page__header-tools\" widget-type=\"InsightsToolbar\">\n                <Toolbar>\n                    <ToolbarGroup className=\"pf-u-sr-only pf-u-visible-on-lg\">\n                        {actions.map((oneItem, key) => (\n                            oneItem.items ?\n                                <ToolbarToggle icon={oneItem.icon} dropdownItems={oneItem.items} /> :\n                                <ToolbarItem key={key} data-key={key}>\n                                    <Button\n                                        variant=\"plain\"\n                                        aria-label={`Overflow ${oneItem.title}`}\n                                        widget-type={oneItem.widget}\n                                        onClick={event => oneItem.onClick && oneItem.onClick(event)}\n                                    >\n                                        <oneItem.icon />\n                                    </Button>\n                                </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                    <ToolbarGroup>\n                        <ToolbarItem className=\"pf-u-hidden-on-lg pf-u-mr-0\">\n                            <UserToggle isSmall extraItems={actions.map((action, key) => (\n                                <DropdownItem key={key} component=\"button\" isDisabled>{action.title}</DropdownItem>\n                            ))} />\n                        </ToolbarItem>\n                        <ToolbarItem className=\"pf-u-sr-only pf-u-visible-on-lg\">\n                            <UserToggle className='ins-c-dropdown__user'/>\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                    { isModalOpen && <InsightsAbout isModalOpen={isModalOpen} onClose={this.onModalToggle} /> }\n                </Toolbar>\n                <UserIcon/>\n            </div>\n        );\n    }\n}\n\nexport default Tools;\n","import React, { Fragment } from 'react';\nimport Brand from './Brand';\nimport Tools from './Tools';\n\nexport default () => (\n    <Fragment>\n        <Brand />\n        <Tools />\n    </Fragment>\n);\n","import React from 'react';\nimport { NavItem } from '@patternfly/react-core/dist/esm/components/Nav';\n\nconst basepath = document.baseURI;\n\nexport default ({ itemId, title, parent = '', ...props }) => (\n    <NavItem {...props} itemId={itemId} preventDefault to={`${basepath}${parent}/${itemId}`}>{title}</NavItem>\n);\n","import React, { Component } from 'react';\nimport { Nav, NavExpandable, NavList } from '@patternfly/react-core/dist/esm/components/Nav';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { appNavClick, clearActive } from '../../redux/actions';\nimport NavigationItem from './NavigationItem';\n\nconst basepath = document.baseURI;\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.onSelect = this.onSelect.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onSelect({ groupId, itemId }) {\n        this.setState({\n            activeGroup: groupId,\n            activeItem: itemId\n        });\n    };\n\n    onClick(_event, item, parent) {\n        const { onNavigate, onClearActive } = this.props;\n        if (parent && parent.active) {\n            if (!item.reload) {\n                onNavigate && onNavigate(item);\n            } else {\n                window.location.href = `${basepath}${item.reload}`;\n            }\n        } else {\n            if (item.group && window.location.href.indexOf(item.group) !== -1) {\n                onClearActive && onClearActive();\n                onNavigate && onNavigate(item);\n            } else {\n                const prefix = parent ? parent.id : item.group || '';\n                window.location.href = `${basepath}${prefix}${prefix ? '/' : ''}${item.id}`;\n            }\n        }\n    }\n\n    render() {\n        const { settings, activeApp, navHidden, activeLocation } = this.props;\n\n        if (navHidden) {\n            document.querySelector('aside').setAttribute('hidden', true);\n        }\n\n        return (\n            <Nav onSelect={this.onSelect} aria-label=\"Insights Global Navigation\" >\n                <NavList>\n                    {\n                        settings.map((item, key) => {\n                            if (!item.disabled) {\n                                if (item.subItems) {\n                                    return <NavExpandable\n                                        title={item.title}\n                                        itemId={item.id}\n                                        key={key}\n                                        isActive={item.active}\n                                        isExpanded={item.active}>\n                                        {\n                                            item.subItems.map((subItem, subKey) => (\n                                                <NavigationItem\n                                                    itemId={subItem.id}\n                                                    key={subKey}\n                                                    title={subItem.title}\n                                                    parent={`${activeLocation}/${item.id}`}\n                                                    isActive={item.active && subItem.id === activeApp}\n                                                    onClick={event => this.onClick(event, subItem, item)}\n                                                />\n                                            ))\n                                        }\n                                    </NavExpandable>;\n                                } else {\n                                    return <NavigationItem\n                                        itemId={item.id}\n                                        key={key}\n                                        title={item.title}\n                                        parent={activeLocation}\n                                        isActive={item.active || item.id === activeApp}\n                                        onClick={event => this.onClick(event, item)}\n                                    />;\n                                }\n                            }\n                        })\n                    }\n                </NavList>\n            </Nav>\n        );\n    }\n}\n\nNavigation.propTypes = {\n    settings: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string,\n            subItems: () => Navigation.propTypes.settings\n        })\n    ),\n    activeApp: PropTypes.string,\n    navHidden: PropTypes.bool,\n    activeLocation: PropTypes.string\n};\n\nfunction stateToProps({ chrome: { globalNav, activeApp, navHidden, activeLocation } }) {\n    return ({ settings: globalNav, activeApp, navHidden, activeLocation });\n}\n\nfunction dispatchToProps(dispatch) {\n    return {\n        onNavigate: (item) => dispatch(appNavClick(item)),\n        onClearActive: () => dispatch(clearActive())\n    };\n}\n\nexport default connect(stateToProps, dispatchToProps)(Navigation);\n","import React, { Fragment, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Navigation from './Navigation';\nimport { Split, SplitItem } from '@patternfly/react-core/dist/esm/layouts/Split';\nimport HomeIcon from '@patternfly/react-icons/dist/esm/icons/home-icon';\nimport { connect } from 'react-redux';\n\nclass SideNav extends Component {\n    render() {\n        const { activeTechnology } = this.props;\n        return (<Fragment>\n            <Split className=\"ins-c-navigation__header\">\n                <SplitItem className=\"ins-c-page__home-icon\">\n                    <a href={`${ document.baseURI }`}>\n                        <HomeIcon size=\"md\" />\n                    </a>\n                </SplitItem>\n                <SplitItem isMain className=\"pf-u-display-flex pf-u-align-items-center\">\n                    {activeTechnology}\n                </SplitItem>\n            </Split>\n            <Navigation />\n        </Fragment>);\n    }\n}\n\nSideNav.propTypes = {\n    activeTechnology: PropTypes.string\n};\n\nSideNav.defaultProps = {\n    activeTechnology: ''\n};\n\nexport default connect(({ chrome: { activeTechnology } }) => ({ activeTechnology }))(SideNav);\n","export { default as Footer } from './Footer';\nexport { default as Header } from './Header/index';\nexport { default as Sidenav } from './Sidenav/index';\n"]}