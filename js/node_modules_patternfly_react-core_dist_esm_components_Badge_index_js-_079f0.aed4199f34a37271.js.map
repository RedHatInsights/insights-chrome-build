{"version":3,"file":"node_modules_patternfly_react-core_dist_esm_components_Badge_index_js-_079f0.aed4199f34a37271.js","mappings":";;;;;;;;;;;;;;;;;;AAA+B;AACA;AACgB;AAC8B;AACtE;AACP,UAAU,kEAAkE,cAAc,6CAAM;AAChG,YAAY,gDAAmB,yBAAyB,WAAW,WAAW,6DAAG,CAAC,+FAAM,kBAAkB,+FAAM,kBAAkB,+FAAM,gCAAgC;AACxK;AACA,4BAA4B,gDAAmB,WAAW,kCAAkC;AAC5F;AACA;AACA;;;;;;;;;;;;;;;;ACXwB;AACxB;;;;;;;;;;;;;;;ACDA;AACA;AACA,WAAW,KAAK;AAChB;AACO;AACP;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;;;;;;;;;AC7BA;;;;;;;;;;;;;;;;ACAqB;AACrB,iEAAe;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC","sources":["webpack://insights-chrome/./node_modules/@patternfly/react-core/dist/esm/components/Badge/Badge.js","webpack://insights-chrome/./node_modules/@patternfly/react-core/dist/esm/components/Badge/index.js","webpack://insights-chrome/./node_modules/@patternfly/react-styles/dist/esm/index.js","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Badge|./badge.css","webpack://insights-chrome/./node_modules/@patternfly/react-styles/css/components/Badge/badge.mjs"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Badge/badge.mjs';\nexport const Badge = (_a) => {\n    var { isRead = false, className = '', children = '', screenReaderText } = _a, props = __rest(_a, [\"isRead\", \"className\", \"children\", \"screenReaderText\"]);\n    return (React.createElement(\"span\", Object.assign({}, props, { className: css(styles.badge, (isRead ? styles.modifiers.read : styles.modifiers.unread), className) }),\n        children,\n        screenReaderText && React.createElement(\"span\", { className: \"pf-v5-screen-reader\" }, screenReaderText)));\n};\nBadge.displayName = 'Badge';\n//# sourceMappingURL=Badge.js.map","export * from './Badge';\n//# sourceMappingURL=index.js.map","/** Joins args into a className string\n *\n * @param {any} args list of objects, string, or arrays to reduce\n */\nexport function css(...args) {\n    // Adapted from https://github.com/JedWatson/classnames/blob/master/index.js\n    const classes = [];\n    const hasOwn = {}.hasOwnProperty;\n    args.filter(Boolean).forEach((arg) => {\n        const argType = typeof arg;\n        if (argType === 'string' || argType === 'number') {\n            classes.push(arg);\n        }\n        else if (Array.isArray(arg) && arg.length) {\n            const inner = css(...arg);\n            if (inner) {\n                classes.push(inner);\n            }\n        }\n        else if (argType === 'object') {\n            for (const key in arg) {\n                if (hasOwn.call(arg, key) && arg[key]) {\n                    classes.push(key);\n                }\n            }\n        }\n    });\n    return classes.join(' ');\n}\n//# sourceMappingURL=index.js.map","/* (ignored) */","import './badge.css';\nexport default {\n  \"badge\": \"pf-v5-c-badge\",\n  \"modifiers\": {\n    \"read\": \"pf-m-read\",\n    \"unread\": \"pf-m-unread\"\n  },\n  \"themeDark\": \"pf-v5-theme-dark\"\n};"],"names":[],"sourceRoot":""}