"use strict";
(self["webpackChunkinsights_chrome"] = self["webpackChunkinsights_chrome"] || []).push([["vendors-node_modules_patternfly_react-core_dist_esm_components_ClipboardCopy_index_js"],{

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClipboardCopy: () => (/* binding */ ClipboardCopy),
/* harmony export */   ClipboardCopyVariant: () => (/* binding */ ClipboardCopyVariant),
/* harmony export */   clipboardCopyFunc: () => (/* binding */ clipboardCopyFunc)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?1a75");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs */ "./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../Tooltip */ "./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js");
/* harmony import */ var _TextInput__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../TextInput */ "./node_modules/@patternfly/react-core/dist/esm/components/TextInput/TextInput.js");
/* harmony import */ var _helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/GenerateId/GenerateId */ "./node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js");
/* harmony import */ var _ClipboardCopyButton__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ClipboardCopyButton */ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js");
/* harmony import */ var _ClipboardCopyToggle__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ClipboardCopyToggle */ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js");
/* harmony import */ var _ClipboardCopyExpanded__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ClipboardCopyExpanded */ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers */ "./node_modules/@patternfly/react-core/dist/esm/helpers/OUIA/ouia.js");











const clipboardCopyFunc = (_event, text) => {
    try {
        navigator.clipboard.writeText(text.toString());
    }
    catch (error) {
        // eslint-disable-next-line no-console
        console.warn("Clipboard API not found, this copy function will not work. This is likely because you're using an", "unsupported browser or you're not using HTTPS. \n\nIf you're a developer building an application which needs", "to support copying to the clipboard without the clipboard API, you'll have to create your own copy", 'function and pass it to the ClipboardCopy component as the onCopy prop. For more information see', 'https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard');
        // eslint-disable-next-line no-console
        console.error(error);
    }
};
var ClipboardCopyVariant;
(function (ClipboardCopyVariant) {
    ClipboardCopyVariant["inline"] = "inline";
    ClipboardCopyVariant["expansion"] = "expansion";
    ClipboardCopyVariant["inlineCompact"] = "inline-compact";
})(ClipboardCopyVariant || (ClipboardCopyVariant = {}));
class ClipboardCopy extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    constructor(props) {
        super(props);
        this.timer = null;
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        this.componentDidUpdate = (prevProps, prevState) => {
            if (prevProps.children !== this.props.children) {
                const newText = this.props.children;
                this.setState({ text: newText, textWhenExpanded: newText });
            }
        };
        this.componentWillUnmount = () => {
            if (this.timer) {
                window.clearTimeout(this.timer);
            }
        };
        this.expandContent = (_event) => {
            this.setState((prevState) => ({
                expanded: !prevState.expanded
            }));
        };
        this.updateText = (event, text) => {
            this.setState({ text });
            this.props.onChange(event, text);
        };
        this.updateTextWhenExpanded = (event, text) => {
            this.setState({ textWhenExpanded: text });
            this.props.onChange(event, text);
        };
        this.render = () => {
            const _a = this.props, { 
            /* eslint-disable @typescript-eslint/no-unused-vars */
            isExpanded, onChange, // Don't pass to <div>
            /* eslint-enable @typescript-eslint/no-unused-vars */
            isReadOnly, isCode, isBlock, exitDelay, maxWidth, entryDelay, onCopy, hoverTip, clickTip, textAriaLabel, toggleAriaLabel, variant, position, className, additionalActions, ouiaId, ouiaSafe } = _a, divProps = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["isExpanded", "onChange", "isReadOnly", "isCode", "isBlock", "exitDelay", "maxWidth", "entryDelay", "onCopy", "hoverTip", "clickTip", "textAriaLabel", "toggleAriaLabel", "variant", "position", "className", "additionalActions", "ouiaId", "ouiaSafe"]);
            const textIdPrefix = 'text-input-';
            const toggleIdPrefix = 'toggle-';
            const contentIdPrefix = 'content-';
            return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].clipboardCopy, variant === 'inline-compact' && _patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.inline, isBlock && _patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.block, this.state.expanded && _patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.expanded, className) }, divProps, (0,_helpers__WEBPACK_IMPORTED_MODULE_4__.getOUIAProps)(ClipboardCopy.displayName, ouiaId, ouiaSafe)),
                variant === 'inline-compact' && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_5__.GenerateId, { prefix: "" }, (id) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                    !isCode && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].clipboardCopyText), id: `${textIdPrefix}${id}` }, this.state.text)),
                    isCode && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("code", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].clipboardCopyText, _patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].modifiers.code), id: `${textIdPrefix}${id}` }, this.state.text)),
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].clipboardCopyActions) },
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].clipboardCopyActionsItem) },
                            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ClipboardCopyButton__WEBPACK_IMPORTED_MODULE_6__.ClipboardCopyButton, { variant: "plain", exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, "aria-label": hoverTip, onClick: (event) => {
                                    onCopy(event, this.state.text);
                                    this.setState({ copied: true });
                                }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),
                        additionalActions && additionalActions))))),
                variant !== 'inline-compact' && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_helpers_GenerateId_GenerateId__WEBPACK_IMPORTED_MODULE_5__.GenerateId, { prefix: "" }, (id) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].clipboardCopyGroup) },
                        variant === 'expansion' && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ClipboardCopyToggle__WEBPACK_IMPORTED_MODULE_7__.ClipboardCopyToggle, { isExpanded: this.state.expanded, onClick: (_event) => {
                                this.expandContent(_event);
                                if (this.state.expanded) {
                                    this.setState({ text: this.state.textWhenExpanded });
                                }
                                else {
                                    this.setState({ textWhenExpanded: this.state.text });
                                }
                            }, id: `${toggleIdPrefix}${id}`, textId: `${textIdPrefix}${id}`, contentId: `${contentIdPrefix}${id}`, "aria-label": toggleAriaLabel })),
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_TextInput__WEBPACK_IMPORTED_MODULE_8__.TextInput, Object.assign({ readOnlyVariant: isReadOnly || this.state.expanded ? 'default' : undefined, onChange: this.updateText, value: this.state.expanded ? this.state.textWhenExpanded : this.state.text, id: `text-input-${id}`, "aria-label": textAriaLabel }, (isCode && { dir: 'ltr' }))),
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ClipboardCopyButton__WEBPACK_IMPORTED_MODULE_6__.ClipboardCopyButton, { exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, id: `copy-button-${id}`, textId: `text-input-${id}`, "aria-label": hoverTip, onClick: (event) => {
                                onCopy(event, this.state.expanded ? this.state.textWhenExpanded : this.state.text);
                                this.setState({ copied: true });
                            }, onTooltipHidden: () => this.setState({ copied: false }) }, this.state.copied ? clickTip : hoverTip)),
                    this.state.expanded && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_ClipboardCopyExpanded__WEBPACK_IMPORTED_MODULE_9__.ClipboardCopyExpanded, { isReadOnly: isReadOnly, isCode: isCode, id: `content-${id}`, onChange: this.updateTextWhenExpanded }, this.state.text))))))));
        };
        const text = Array.isArray(this.props.children) ? this.props.children.join('') : this.props.children;
        this.state = {
            text,
            expanded: this.props.isExpanded,
            copied: false,
            textWhenExpanded: text
        };
    }
}
ClipboardCopy.displayName = 'ClipboardCopy';
ClipboardCopy.defaultProps = {
    hoverTip: 'Copy to clipboard',
    clickTip: 'Successfully copied to clipboard!',
    isReadOnly: false,
    isExpanded: false,
    isCode: false,
    variant: 'inline',
    position: _Tooltip__WEBPACK_IMPORTED_MODULE_10__.TooltipPosition.top,
    maxWidth: '150px',
    exitDelay: 1500,
    entryDelay: 300,
    onCopy: clipboardCopyFunc,
    onChange: () => undefined,
    textAriaLabel: 'Copyable input',
    toggleAriaLabel: 'Show content',
    additionalActions: null,
    ouiaSafe: true
};

//# sourceMappingURL=ClipboardCopy.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyAction.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyAction.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClipboardCopyAction: () => (/* binding */ ClipboardCopyAction)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?1a75");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs */ "./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");




const ClipboardCopyAction = (_a) => {
    var { children = null, className = '' } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["children", "className"]);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].clipboardCopyActionsItem, className) }, props), children));
};
ClipboardCopyAction.displayName = 'ClipboardCopyAction';
//# sourceMappingURL=ClipboardCopyAction.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClipboardCopyButton: () => (/* binding */ ClipboardCopyButton)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?1a75");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_copy_icon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/copy-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/copy-icon.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Button */ "./node_modules/@patternfly/react-core/dist/esm/components/Button/Button.js");
/* harmony import */ var _Tooltip__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Tooltip */ "./node_modules/@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js");





const ClipboardCopyButton = (_a) => {
    var { onClick, exitDelay = 0, entryDelay = 300, maxWidth = '100px', position = 'top', 'aria-label': ariaLabel = 'Copyable input', id, textId, children, variant = 'control', onTooltipHidden = () => { }, className } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["onClick", "exitDelay", "entryDelay", "maxWidth", "position", 'aria-label', "id", "textId", "children", "variant", "onTooltipHidden", "className"]);
    const triggerRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Tooltip__WEBPACK_IMPORTED_MODULE_2__.Tooltip, { trigger: "mouseenter focus click", triggerRef: triggerRef, exitDelay: exitDelay, entryDelay: entryDelay, maxWidth: maxWidth, position: position, "aria-live": "polite", aria: "none", content: react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null, children), onTooltipHidden: onTooltipHidden },
        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button__WEBPACK_IMPORTED_MODULE_3__.Button, Object.assign({ type: "button", variant: variant, onClick: onClick, "aria-label": ariaLabel, className: className, id: id, "aria-labelledby": `${id} ${textId}` }, props, { ref: triggerRef }),
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_copy_icon__WEBPACK_IMPORTED_MODULE_4__["default"], null))));
};
ClipboardCopyButton.displayName = 'ClipboardCopyButton';
//# sourceMappingURL=ClipboardCopyButton.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyExpanded.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClipboardCopyExpanded: () => (/* binding */ ClipboardCopyExpanded)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?1a75");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs */ "./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");




class ClipboardCopyExpanded extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    constructor(props) {
        super(props);
    }
    render() {
        const _a = this.props, { className, children, onChange, isReadOnly, isCode } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["className", "children", "onChange", "isReadOnly", "isCode"]);
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ suppressContentEditableWarning: true, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_2__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_3__["default"].clipboardCopyExpandableContent, className), onInput: (e) => onChange(e, e.target.innerText), contentEditable: !isReadOnly }, props), isCode ? react__WEBPACK_IMPORTED_MODULE_0__.createElement("pre", { dir: "ltr" }, children) : children));
    }
}
ClipboardCopyExpanded.displayName = 'ClipboardCopyExpanded';
ClipboardCopyExpanded.defaultProps = {
    onChange: () => undefined,
    className: '',
    isReadOnly: false,
    isCode: false
};

//# sourceMappingURL=ClipboardCopyExpanded.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyToggle.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClipboardCopyToggle: () => (/* binding */ ClipboardCopyToggle)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?1a75");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs */ "./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_angle_right_icon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/angle-right-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/angle-right-icon.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Button */ "./node_modules/@patternfly/react-core/dist/esm/components/Button/Button.js");






const ClipboardCopyToggle = (_a) => {
    var { onClick, id, textId, contentId, isExpanded = false } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["onClick", "id", "textId", "contentId", "isExpanded"]);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Button__WEBPACK_IMPORTED_MODULE_2__.Button, Object.assign({ type: "button", variant: "control", onClick: onClick, id: id, "aria-labelledby": `${id} ${textId}`, "aria-controls": contentId, "aria-expanded": isExpanded }, props),
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_3__.css)(_patternfly_react_styles_css_components_ClipboardCopy_clipboard_copy_mjs__WEBPACK_IMPORTED_MODULE_4__["default"].clipboardCopyToggleIcon) },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_angle_right_icon__WEBPACK_IMPORTED_MODULE_5__["default"], { "aria-hidden": "true" }))));
};
ClipboardCopyToggle.displayName = 'ClipboardCopyToggle';
//# sourceMappingURL=ClipboardCopyToggle.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/index.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/index.js ***!
  \****************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ClipboardCopy: () => (/* reexport safe */ _ClipboardCopy__WEBPACK_IMPORTED_MODULE_0__.ClipboardCopy),
/* harmony export */   ClipboardCopyAction: () => (/* reexport safe */ _ClipboardCopyAction__WEBPACK_IMPORTED_MODULE_1__.ClipboardCopyAction),
/* harmony export */   ClipboardCopyButton: () => (/* reexport safe */ _ClipboardCopyButton__WEBPACK_IMPORTED_MODULE_2__.ClipboardCopyButton),
/* harmony export */   ClipboardCopyVariant: () => (/* reexport safe */ _ClipboardCopy__WEBPACK_IMPORTED_MODULE_0__.ClipboardCopyVariant),
/* harmony export */   clipboardCopyFunc: () => (/* reexport safe */ _ClipboardCopy__WEBPACK_IMPORTED_MODULE_0__.clipboardCopyFunc)
/* harmony export */ });
/* harmony import */ var _ClipboardCopy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ClipboardCopy */ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopy.js");
/* harmony import */ var _ClipboardCopyAction__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ClipboardCopyAction */ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyAction.js");
/* harmony import */ var _ClipboardCopyButton__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ClipboardCopyButton */ "./node_modules/@patternfly/react-core/dist/esm/components/ClipboardCopy/ClipboardCopyButton.js");



//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-icons/dist/esm/icons/copy-icon.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@patternfly/react-icons/dist/esm/icons/copy-icon.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CopyIcon: () => (/* binding */ CopyIcon),
/* harmony export */   CopyIconConfig: () => (/* binding */ CopyIconConfig),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _createIcon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../createIcon */ "./node_modules/@patternfly/react-icons/dist/esm/createIcon.js");


const CopyIconConfig = {
  name: 'CopyIcon',
  height: 512,
  width: 448,
  svgPath: 'M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z',
  yOffset: 0,
  xOffset: 0,
};

const CopyIcon = (0,_createIcon__WEBPACK_IMPORTED_MODULE_0__.createIcon)(CopyIconConfig);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (CopyIcon);

/***/ }),

/***/ "./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _clipboard_copy_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./clipboard-copy.css */ "?9b31");

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  "button": "pf-v5-c-button",
  "clipboardCopy": "pf-v5-c-clipboard-copy",
  "clipboardCopyActions": "pf-v5-c-clipboard-copy__actions",
  "clipboardCopyActionsItem": "pf-v5-c-clipboard-copy__actions-item",
  "clipboardCopyExpandableContent": "pf-v5-c-clipboard-copy__expandable-content",
  "clipboardCopyGroup": "pf-v5-c-clipboard-copy__group",
  "clipboardCopyText": "pf-v5-c-clipboard-copy__text",
  "clipboardCopyToggleIcon": "pf-v5-c-clipboard-copy__toggle-icon",
  "dirRtl": "pf-v5-m-dir-rtl",
  "modifiers": {
    "expanded": "pf-m-expanded",
    "inline": "pf-m-inline",
    "block": "pf-m-block",
    "code": "pf-m-code"
  },
  "themeDark": "pf-v5-theme-dark"
});

/***/ })

}]);