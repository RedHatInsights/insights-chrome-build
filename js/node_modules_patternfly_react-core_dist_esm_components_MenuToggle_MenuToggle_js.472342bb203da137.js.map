{"version":3,"file":"node_modules_patternfly_react-core_dist_esm_components_MenuToggle_MenuToggle_js.472342bb203da137.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAA+B;AACA;AACyD;AACzC;AACoC;AACI;AACY;AACI;AAChG;AACP;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C,6BAA6B,4CAAe;AAC5C;AACA;AACA;AACA;AACA;AACA,iCAAiC,mLAAmL,mBAAmB,6CAAM;AAC7O;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,gDAAmB,CAAC,gGAAe,IAAI,uBAAuB;AAChG;AACA;AACA,kCAAkC,gDAAmB,CAAC,wGAAuB,IAAI,uBAAuB;AACxG;AACA;AACA,kCAAkC,gDAAmB,CAAC,sGAAqB,IAAI,uBAAuB;AACtG;AACA;AACA;AACA,gCAAgC,gDAAmB,WAAW,WAAW,6DAAG,CAAC,0GAAM,sBAAsB;AACzG,oCAAoC,gDAAmB,WAAW,WAAW,6DAAG,CAAC,0GAAM,wBAAwB;AAC/G,YAAY,gDAAmB,WAAW,WAAW,6DAAG,CAAC,0GAAM,wBAAwB;AACvF,gBAAgB,gDAAmB,CAAC,8FAAa,IAAI,qBAAqB;AAC1E,yBAAyB,gDAAmB,CAAC,2CAAc;AAC3D,oBAAoB,gDAAmB,WAAW,WAAW,6DAAG,CAAC,0GAAM,kBAAkB;AACzF,qCAAqC,gDAAmB,WAAW,WAAW,6DAAG,CAAC,0GAAM,kBAAkB;AAC1G,YAAY,iDAAoB,WAAW,gDAAmB,WAAW,WAAW,6DAAG,CAAC,0GAAM,mBAAmB;AACjH,2BAA2B,gDAAmB,aAAa,2BAA2B,6DAAG,CAAC,0GAAM,6GAA6G;AAC7M,6BAA6B,6DAAG,CAAC,0GAAM,2BAA2B,0GAAM,8CAA8C,0GAAM,+CAA+C,0GAAM,gCAAgC,0GAAM,gDAAgD,0GAAM,iCAAiC,0GAAM,iCAAiC,0GAAM,sCAAsC,0GAAM,oCAAoC,0GAAM;AACjb,6DAA6D,wCAAwC,mBAAmB,gBAAgB;AACxI;AACA,oBAAoB,gDAAmB,wBAAwB,0BAA0B,6DAAG,eAAe,0GAAM,uBAAuB;AACxI;AACA;AACA,oBAAoB,gDAAmB,UAAU,0BAA0B,6DAAG,eAAe,0GAAM,6IAA6I,0GAAM,oBAAoB;AAC1Q;AACA,gBAAgB,gDAAmB,2BAA2B,WAAW,6DAAG,CAAC,0GAAM,kIAAkI,iBAAiB,SAAS,mEAAmE;AAClT,gCAAgC,gDAAmB,WAAW,WAAW,6DAAG,CAAC,0GAAM,kBAAkB;AACrG;AACA;AACA,gBAAgB,gDAAmB,2BAA2B,WAAW,6DAAG,6IAA6I;AACzN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,mBAAmB,6CAAgB,kBAAkB,gDAAmB,iCAAiC,eAAe;AAC/H;AACA;;;;;;;;;;;;;;;;;;ACvE2C;;AAEpC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO,sBAAsB,uDAAU;;AAEvC,iEAAe,aAAa;;;;;;;;;;ACb5B;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;ACA2B;AAC3B,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC","sources":["webpack://insights-chrome/./node_modules/@patternfly/react-core/dist/esm/components/MenuToggle/MenuToggle.js","webpack://insights-chrome/./node_modules/@patternfly/react-icons/dist/esm/icons/caret-down-icon.js","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-core/dist/esm/helpers/Popper|@patternfly/react-styles/css/components/Popper/Popper.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Badge|./badge.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Breadcrumb|./breadcrumb.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Button|./button.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Check|./check.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Dropdown|./dropdown.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/FormControl|./form-control.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/MenuToggle|./menu-toggle.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Menu|./menu.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Pagination|./pagination.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Spinner|./spinner.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Tooltip|./tooltip.css","webpack://insights-chrome/./node_modules/@patternfly/react-styles/css/components/MenuToggle/menu-toggle.mjs"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/MenuToggle/menu-toggle.mjs';\nimport { css } from '@patternfly/react-styles';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nexport var MenuToggleStatus;\n(function (MenuToggleStatus) {\n    MenuToggleStatus[\"success\"] = \"success\";\n    MenuToggleStatus[\"danger\"] = \"danger\";\n    MenuToggleStatus[\"warning\"] = \"warning\";\n})(MenuToggleStatus || (MenuToggleStatus = {}));\nclass MenuToggleBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.displayName = 'MenuToggleBase';\n    }\n    render() {\n        const _a = this.props, { children, className, icon, badge, isExpanded, isDisabled, isFullHeight, isFullWidth, splitButtonOptions, variant, status, statusIcon, innerRef, onClick, 'aria-label': ariaLabel } = _a, otherProps = __rest(_a, [\"children\", \"className\", \"icon\", \"badge\", \"isExpanded\", \"isDisabled\", \"isFullHeight\", \"isFullWidth\", \"splitButtonOptions\", \"variant\", \"status\", \"statusIcon\", \"innerRef\", \"onClick\", 'aria-label']);\n        const isPlain = variant === 'plain';\n        const isPlainText = variant === 'plainText';\n        const isTypeahead = variant === 'typeahead';\n        let _statusIcon = statusIcon;\n        if (!statusIcon) {\n            switch (status) {\n                case MenuToggleStatus.success:\n                    _statusIcon = React.createElement(CheckCircleIcon, { \"aria-hidden\": \"true\" });\n                    break;\n                case MenuToggleStatus.warning:\n                    _statusIcon = React.createElement(ExclamationTriangleIcon, { \"aria-hidden\": \"true\" });\n                    break;\n                case MenuToggleStatus.danger:\n                    _statusIcon = React.createElement(ExclamationCircleIcon, { \"aria-hidden\": \"true\" });\n                    break;\n            }\n        }\n        const toggleControls = (React.createElement(\"span\", { className: css(styles.menuToggleControls) },\n            status !== undefined && React.createElement(\"span\", { className: css(styles.menuToggleStatusIcon) }, _statusIcon),\n            React.createElement(\"span\", { className: css(styles.menuToggleToggleIcon) },\n                React.createElement(CaretDownIcon, { \"aria-hidden\": true }))));\n        const content = (React.createElement(React.Fragment, null,\n            icon && React.createElement(\"span\", { className: css(styles.menuToggleIcon) }, icon),\n            isTypeahead ? children : React.createElement(\"span\", { className: css(styles.menuToggleText) }, children),\n            React.isValidElement(badge) && React.createElement(\"span\", { className: css(styles.menuToggleCount) }, badge),\n            isTypeahead ? (React.createElement(\"button\", { type: \"button\", className: css(styles.menuToggleButton), \"aria-expanded\": isExpanded, onClick: onClick, \"aria-label\": ariaLabel || 'Menu toggle' }, toggleControls)) : (toggleControls)));\n        const commonStyles = css(styles.menuToggle, isExpanded && styles.modifiers.expanded, variant === 'primary' && styles.modifiers.primary, variant === 'secondary' && styles.modifiers.secondary, status && styles.modifiers[status], (isPlain || isPlainText) && styles.modifiers.plain, isPlainText && styles.modifiers.text, isFullHeight && styles.modifiers.fullHeight, isFullWidth && styles.modifiers.fullWidth, isDisabled && styles.modifiers.disabled, className);\n        const componentProps = Object.assign(Object.assign({ children: isPlain ? children : content }, (isDisabled && { disabled: true })), otherProps);\n        if (isTypeahead) {\n            return (React.createElement(\"div\", Object.assign({ ref: innerRef, className: css(commonStyles, styles.modifiers.typeahead) }, componentProps)));\n        }\n        if (splitButtonOptions) {\n            return (React.createElement(\"div\", { ref: innerRef, className: css(commonStyles, styles.modifiers.splitButton, (splitButtonOptions === null || splitButtonOptions === void 0 ? void 0 : splitButtonOptions.variant) === 'action' && styles.modifiers.action) }, splitButtonOptions === null || splitButtonOptions === void 0 ? void 0 :\n                splitButtonOptions.items,\n                React.createElement(\"button\", Object.assign({ className: css(styles.menuToggleButton), type: \"button\", \"aria-expanded\": isExpanded, \"aria-label\": ariaLabel, disabled: isDisabled, onClick: onClick }, (children && { style: { display: 'flex', paddingLeft: 'var(--pf-v5-global--spacer--sm)' } }), otherProps),\n                    children && React.createElement(\"span\", { className: css(styles.menuToggleText) }, children),\n                    toggleControls)));\n        }\n        return (React.createElement(\"button\", Object.assign({ className: css(commonStyles), type: \"button\", \"aria-label\": ariaLabel, \"aria-expanded\": isExpanded, ref: innerRef, disabled: isDisabled, onClick: onClick }, componentProps)));\n    }\n}\nMenuToggleBase.defaultProps = {\n    className: '',\n    isExpanded: false,\n    isDisabled: false,\n    isFullWidth: false,\n    isFullHeight: false\n};\nexport const MenuToggle = React.forwardRef((props, ref) => (React.createElement(MenuToggleBase, Object.assign({ innerRef: ref }, props))));\nMenuToggle.displayName = 'MenuToggle';\n//# sourceMappingURL=MenuToggle.js.map","import { createIcon } from '../createIcon';\n\nexport const CaretDownIconConfig = {\n  name: 'CaretDownIcon',\n  height: 512,\n  width: 320,\n  svgPath: 'M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CaretDownIcon = createIcon(CaretDownIconConfig);\n\nexport default CaretDownIcon;","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","import './menu-toggle.css';\nexport default {\n  \"check\": \"pf-v5-c-check\",\n  \"checkInput\": \"pf-v5-c-check__input\",\n  \"menuToggle\": \"pf-v5-c-menu-toggle\",\n  \"menuToggleButton\": \"pf-v5-c-menu-toggle__button\",\n  \"menuToggleControls\": \"pf-v5-c-menu-toggle__controls\",\n  \"menuToggleCount\": \"pf-v5-c-menu-toggle__count\",\n  \"menuToggleIcon\": \"pf-v5-c-menu-toggle__icon\",\n  \"menuToggleStatusIcon\": \"pf-v5-c-menu-toggle__status-icon\",\n  \"menuToggleText\": \"pf-v5-c-menu-toggle__text\",\n  \"menuToggleToggleIcon\": \"pf-v5-c-menu-toggle__toggle-icon\",\n  \"modifiers\": {\n    \"primary\": \"pf-m-primary\",\n    \"secondary\": \"pf-m-secondary\",\n    \"expanded\": \"pf-m-expanded\",\n    \"plain\": \"pf-m-plain\",\n    \"text\": \"pf-m-text\",\n    \"fullHeight\": \"pf-m-full-height\",\n    \"disabled\": \"pf-m-disabled\",\n    \"typeahead\": \"pf-m-typeahead\",\n    \"splitButton\": \"pf-m-split-button\",\n    \"action\": \"pf-m-action\",\n    \"active\": \"pf-m-active\",\n    \"fullWidth\": \"pf-m-full-width\",\n    \"success\": \"pf-m-success\",\n    \"warning\": \"pf-m-warning\",\n    \"danger\": \"pf-m-danger\"\n  },\n  \"textInputGroup\": \"pf-v5-c-text-input-group\",\n  \"themeDark\": \"pf-v5-theme-dark\"\n};"],"names":[],"sourceRoot":""}