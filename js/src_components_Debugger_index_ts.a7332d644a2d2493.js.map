{"version":3,"file":"src_components_Debugger_index_ts.a7332d644a2d2493.js","mappings":"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","sources":["webpack://insights-chrome/./src/components/Debugger/Debugger.scss?4a06","webpack://insights-chrome/./src/components/Debugger/DebuggerModal.tsx","webpack://insights-chrome/./src/components/Debugger/DebuggerTable.tsx","webpack://insights-chrome/./src/components/Debugger/index.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","import React from 'react';\nimport { Button } from '@patternfly/react-core/dist/dynamic/components/Button';\nimport { Modal, ModalVariant } from '@patternfly/react-core/dist/dynamic/components/Modal';\nimport { TextContent } from '@patternfly/react-core/dist/dynamic/components/Text';\nimport { BugIcon } from '@patternfly/react-icons/dist/dynamic/icons/bug-icon';\nimport { ChromeUser } from '@redhat-cloud-services/types';\nimport { DeepRequired } from 'utility-types';\nimport { MenuToggle, MenuToggleElement } from '@patternfly/react-core/dist/dynamic/components/MenuToggle';\nimport { Select, SelectList, SelectOption } from '@patternfly/react-core/dist/dynamic/components/Select';\n\nimport DebuggerTable from './DebuggerTable';\n\nimport './Debugger.scss';\nimport { useAtom } from 'jotai';\nimport { isDebuggerModalOpenAtom } from '../../state/atoms/debuggerModalatom';\n\nexport type DebuggerModalProps = {\n  user: DeepRequired<ChromeUser>;\n};\n\nconst DebuggerModal = ({ user }: DebuggerModalProps) => {\n  const [isOpen, setIsModalOpen] = useAtom(isDebuggerModalOpenAtom);\n  const [isDropdownOpen, setIsOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState<string>('Entitlements');\n  const menuRef = React.useRef<HTMLDivElement>(null);\n  const onToggleClick = () => {\n    setIsOpen(!isDropdownOpen);\n  };\n  const onSelect = (_event: React.MouseEvent<Element, MouseEvent> | undefined, itemId: string | number | undefined) => {\n    setSelected(itemId as string);\n    setIsOpen(false);\n  };\n  const toggle = (toggleRef: React.Ref<MenuToggleElement>) => (\n    <MenuToggle ref={toggleRef} onClick={onToggleClick} isExpanded={isDropdownOpen} className=\"chr-c-debugger-dropdown\">\n      {selected}\n    </MenuToggle>\n  );\n\n  return (\n    <React.Fragment>\n      <Button\n        ouiaId=\"debugger-button\"\n        className=\"chr-c-button-debugger\"\n        onClick={() => {\n          setIsModalOpen(true);\n        }}\n      >\n        <BugIcon />\n      </Button>\n      <Modal\n        aria-label=\"Debugger modal\"\n        isOpen={isOpen}\n        className=\"chr-c-debugger-modal\"\n        variant={ModalVariant.medium}\n        onClose={() => setIsModalOpen(false)}\n      >\n        <div className=\"chr-c-debugger-content\">\n          <TextContent>\n            <h1>Chrome Debugger</h1>\n          </TextContent>\n          <Select\n            id=\"single-select\"\n            ref={menuRef}\n            isOpen={isDropdownOpen}\n            selected={selected}\n            onSelect={onSelect}\n            onOpenChange={(isOpen) => setIsOpen(isOpen)}\n            toggle={toggle}\n          >\n            <SelectList>\n              <SelectOption itemId=\"Entitlements\">Entitlements</SelectOption>\n              <SelectOption itemId=\"Roles\">Roles</SelectOption>\n            </SelectList>\n          </Select>\n          <DebuggerTable user={user} selected={selected} />\n        </div>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default DebuggerModal;\n","import React, { useContext } from 'react';\nimport { Table, Tbody, Th, Thead, Tr } from '@patternfly/react-table';\nimport { ChromeUser } from '@redhat-cloud-services/types';\nimport InternalChromeContext from '../../utils/internalChromeContext';\n\nexport interface DebuggerTableProps {\n  user: ChromeUser;\n  selected: string;\n}\n\nconst DebuggerTable = (props: DebuggerTableProps) => {\n  let table;\n  const entitlements = Object.entries(props.user.entitlements).reduce(\n    (acc, [key, entitlement]) => ({\n      ...acc,\n      [`entitlements_${key}`]: entitlement.is_entitled,\n      [`entitlements_${key}_trial`]: entitlement.is_trial,\n    }),\n    {}\n  );\n  const [permissions, setPermissions] = React.useState<{ [key: string]: React.ReactNode }>({});\n  const chrome = useContext(InternalChromeContext);\n  React.useEffect(() => {\n    async function getPermissions() {\n      const userPermissions = await chrome.getUserPermissions();\n      const userPermissionsList = Object.entries(userPermissions).reduce(\n        (acc, [key, userPermission]) => ({\n          ...acc,\n          [`userPermissionsList_${key}`]: userPermission.permission,\n        }),\n        {}\n      );\n      setPermissions(userPermissionsList);\n    }\n    getPermissions();\n  }, []);\n\n  if (props.selected === 'Entitlements') {\n    table = (\n      <Table variant=\"compact\">\n        <Thead>\n          <Tr>\n            <Th>Entitlements given to {props.user.identity.user?.username}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {Object.entries(entitlements).map((val, index) => {\n            //remove entitlement if false\n            if (val[1] === true) {\n              return (\n                <tr key={index}>\n                  <td>{val[0].replace(/entitlements_/g, '')}</td>\n                </tr>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </Tbody>\n      </Table>\n    );\n  } else if (props.selected === 'Roles') {\n    table = (\n      <Table variant=\"compact\">\n        <Thead>\n          <Tr>\n            <Th>Roles given to {props.user.identity.user?.username}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {Object.values(permissions).map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{val}</td>\n              </tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    );\n  }\n  return <React.Fragment>{table}</React.Fragment>;\n};\n\nexport default DebuggerTable;\n","export { default } from './DebuggerModal';\n"],"names":["React","Button","Modal","ModalVariant","TextContent","BugIcon","MenuToggle","Select","SelectList","SelectOption","DebuggerTable","useAtom","isDebuggerModalOpenAtom","DebuggerModal","user","isOpen","setIsModalOpen","useState","isDropdownOpen","setIsOpen","selected","setSelected","menuRef","useRef","onToggleClick","onSelect","_event","itemId","toggle","toggleRef","ref","onClick","isExpanded","className","Fragment","ouiaId","aria-label","variant","medium","onClose","div","h1","id","onOpenChange","useContext","Table","Tbody","Th","Thead","Tr","InternalChromeContext","props","table","entitlements","Object","entries","reduce","acc","key","entitlement","is_entitled","is_trial","permissions","setPermissions","chrome","useEffect","getPermissions","userPermissions","userPermissionsList","getUserPermissions","userPermission","permission","identity","username","map","val","index","tr","td","replace","values","default"],"sourceRoot":""}