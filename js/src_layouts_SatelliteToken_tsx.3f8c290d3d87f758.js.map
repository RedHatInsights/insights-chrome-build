{"version":3,"file":"src_layouts_SatelliteToken_tsx.3f8c290d3d87f758.js","mappings":"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","sources":["webpack://insights-chrome/./src/components/NotFoundRoute/NotFoundRoute.tsx","webpack://insights-chrome/./src/components/NotFoundRoute/index.ts","webpack://insights-chrome/./src/components/Satellite/IPWhitelistTable.tsx","webpack://insights-chrome/./src/components/Satellite/SatelliteTable.tsx","webpack://insights-chrome/./src/layouts/SatelliteToken.tsx","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-core/dist/esm/helpers/Popper|@patternfly/react-styles/css/components/Popper/Popper.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Backdrop|./backdrop.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Badge|./badge.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Breadcrumb|./breadcrumb.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Button|./button.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Check|./check.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Content|./content.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Divider|./divider.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Dropdown|./dropdown.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/EmptyState|./empty-state.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/FormControl|./form-control.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Form|./form.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/HelperText|./helper-text.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/InlineEdit|./inline-edit.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/MenuToggle|./menu-toggle.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Menu|./menu.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/ModalBox|./modal-box.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Popover|./popover.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Skeleton|./skeleton.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Spinner|./spinner.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Table|./table-grid.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Table|./table-scrollable.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Table|./table-tree-view.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Table|./table.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/components/Tooltip|./tooltip.css","webpack://insights-chrome/ignored|/home/travis/build/RedHatInsights/insights-chrome/node_modules/@patternfly/react-styles/css/layouts/Bullseye|./bullseye.css"],"sourcesContent":["import React from 'react';\nimport { EmptyState, EmptyStateBody } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\n\nconst NotFoundRoute = () => (\n  <EmptyState id=\"not-found\">\n    <EmptyStateBody>\n      <InvalidObject />\n    </EmptyStateBody>\n  </EmptyState>\n);\nexport default NotFoundRoute;\n","export { default } from './NotFoundRoute';\n","import React, { useEffect, useState } from 'react';\nimport { debounce } from 'lodash';\nimport {\n  ActionGroup,\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateHeader,\n  EmptyStateVariant,\n  Form,\n  FormGroup,\n  FormHelperText,\n  HelperText,\n  HelperTextItem,\n  Modal,\n  ModalVariant,\n  Text,\n  TextContent,\n  TextInput,\n  ValidatedOptions,\n} from '@patternfly/react-core';\nimport { InnerScrollContainer, OuterScrollContainer, Table, TableText, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport axios from 'axios';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable';\n\ntype IPBlock = {\n  ip_block: string;\n  org_id: string;\n  created_at: string;\n};\n\nconst IPWhitelistTable: React.FC = () => {\n  const [allAddresses, setAllAddresses] = useState<IPBlock[]>([]);\n  const [loaded, setLoaded] = useState(false);\n  const [actionPending, setActionPending] = useState(false);\n  const [inputAddresses, setInputAddresses] = useState('');\n  const [inputAddressesValidated, setInputAddressesesValidated] = useState(false);\n  const [removeAddresses, setRemoveAddresses] = useState('');\n  const [isIPModalOpen, setIsIPModalOpen] = useState(false);\n  const [isIPRemoveModalOpen, setIsIPRemoveModalOpen] = useState(false);\n\n  const getIPAddresses = () => {\n    return axios.get('/api/mbop/v1/allowlist');\n  };\n\n  const removeIPAddresses = (ipBlock: string) => {\n    return axios.delete(`/api/mbop/v1/allowlist?block=${ipBlock}`);\n  };\n\n  const addIPAddresses = (ipBlock: string) => {\n    return axios.post('/api/mbop/v1/allowlist', { ip_block: ipBlock });\n  };\n\n  useEffect(() => {\n    if (!loaded && !actionPending) {\n      getIPAddresses()\n        .then((res) => {\n          setAllAddresses(res.data);\n          setLoaded(true);\n        })\n        .catch((err) => console.error(err));\n    }\n  }, [loaded, actionPending]);\n\n  const onChangedAddresses = (value: string) => {\n    setInputAddresses(value);\n    setInputAddressesesValidated(validateIPAddress(value));\n  };\n\n  const onSubmitAddresses = () => {\n    setActionPending(true);\n    addIPAddresses(inputAddresses)\n      .then(() => {\n        setInputAddresses('');\n        setIsIPModalOpen(false);\n        setLoaded(false);\n        return getIPAddresses();\n      })\n      .then((res) => {\n        setAllAddresses(res.data);\n        setLoaded(true);\n      })\n      .catch((err) => console.error(err))\n      .finally(() => setActionPending(false));\n  };\n\n  const onRemoveAddresses = () => {\n    setActionPending(true);\n    removeIPAddresses(removeAddresses)\n      .then(() => {\n        setRemoveAddresses('');\n        setIsIPRemoveModalOpen(false);\n        setLoaded(false);\n        return getIPAddresses();\n      })\n      .then((res) => {\n        setAllAddresses(res.data);\n        setLoaded(true);\n      })\n      .catch((err) => console.error(err))\n      .finally(() => setActionPending(false));\n  };\n\n  const onChangedAddressesDebounced = debounce(onChangedAddresses, 500);\n\n  const validateIPAddress = (address: string) => {\n    return /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\/([1-9]|[12][0-9]|3[0-2]))?$/.test(\n      address\n    );\n  };\n\n  const validationError = inputAddresses.length > 0 && !inputAddressesValidated;\n\n  const addIPModal = (\n    <Modal\n      isOpen={isIPModalOpen}\n      onClose={() => {\n        setInputAddresses('');\n        setIsIPModalOpen(false);\n      }}\n      title={'Add IP Addresses to Allow List'}\n      variant={ModalVariant.medium}\n    >\n      <Form onSubmit={(event: React.FormEvent<HTMLFormElement>) => event.preventDefault()}>\n        <FormGroup>\n          <TextContent>\n            <Text>Before connecting to your satellite servers, Red Hat needs to add your IP address or range of IP addresses to an allow-list.</Text>\n          </TextContent>\n          <TextInput\n            validated={validationError ? ValidatedOptions.error : ValidatedOptions.default}\n            placeholder=\"127.0.0.1/32\"\n            onChange={(_event, value) => onChangedAddressesDebounced(value)}\n          ></TextInput>\n          {validationError && (\n            <FormHelperText>\n              <HelperText>\n                <HelperTextItem icon={<ExclamationCircleIcon />} variant={ValidatedOptions.error}>\n                  Enter a valid IP address or CIDR notation IP range\n                </HelperTextItem>\n              </HelperText>\n            </FormHelperText>\n          )}\n        </FormGroup>\n        <ActionGroup>\n          <Button isDisabled={inputAddresses.length <= 0 || validationError || actionPending} onClick={onSubmitAddresses}>\n            Submit\n          </Button>\n        </ActionGroup>\n      </Form>\n    </Modal>\n  );\n\n  const removeIPModal = (\n    <Modal\n      isOpen={isIPRemoveModalOpen}\n      onClose={() => {\n        setRemoveAddresses('');\n        setIsIPRemoveModalOpen(false);\n      }}\n      title={'Remove IP Addresses from Allow List'}\n      variant={ModalVariant.medium}\n    >\n      <Form onSubmit={(event: React.FormEvent<HTMLFormElement>) => event.preventDefault()}>\n        <FormGroup>\n          <TextContent>\n            <Text>The following IP addresses will be removed from the allow list</Text>\n          </TextContent>\n          <TextInput isDisabled value={removeAddresses}></TextInput>\n        </FormGroup>\n        <ActionGroup>\n          <Button onClick={onRemoveAddresses} isDisabled={actionPending} variant=\"danger\">\n            Remove\n          </Button>\n        </ActionGroup>\n      </Form>\n    </Modal>\n  );\n\n  const columnNames = {\n    ip_block: 'IP Block',\n    org_id: 'Org ID',\n    created_at: 'Created At',\n    remove: '',\n  };\n\n  const skeletonTable = <SkeletonTable variant={TableVariant.compact} rows={9} columns={Object.values(columnNames)} />;\n\n  const emptyTable = (\n    <Tr style={{ border: 'none' }}>\n      <Td colSpan={8}>\n        <Bullseye>\n          <EmptyState variant={EmptyStateVariant.sm}>\n            <EmptyStateHeader titleText=\"No IP Addresses Allowed\" headingLevel=\"h2\" />\n            <EmptyStateBody>\n              Before connecting to your satellite servers, Red Hat needs to add your IP address or range of IP addresses to an allow-list.\n            </EmptyStateBody>\n          </EmptyState>\n        </Bullseye>\n      </Td>\n    </Tr>\n  );\n\n  const ipTable = (\n    <OuterScrollContainer style={{ maxHeight: '25rem' }}>\n      <InnerScrollContainer>\n        <Table aria-label=\"IP Address Allow List\" variant={TableVariant.compact} isStickyHeader>\n          <Thead>\n            <Tr>\n              <Th>{columnNames.ip_block}</Th>\n              <Th>{columnNames.org_id}</Th>\n              <Th>{columnNames.created_at}</Th>\n              <Th>{columnNames.remove}</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {allAddresses.length <= 0 && emptyTable}\n            {allAddresses.map((ipBlock) => (\n              <Tr key={ipBlock.ip_block}>\n                <Td dataLabel={columnNames.ip_block}>{ipBlock.ip_block}</Td>\n                <Td dataLabel={columnNames.org_id}>{ipBlock.org_id}</Td>\n                <Td dataLabel={columnNames.created_at}>{new Date(ipBlock.created_at).toLocaleString()}</Td>\n                <Td dataLabel={columnNames.remove} modifier=\"fitContent\">\n                  <TableText>\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => {\n                        setRemoveAddresses(ipBlock.ip_block);\n                        setIsIPRemoveModalOpen(true);\n                      }}\n                    >\n                      Remove\n                    </Button>\n                  </TableText>\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      </InnerScrollContainer>\n    </OuterScrollContainer>\n  );\n\n  return (\n    <>\n      {addIPModal}\n      {removeIPModal}\n      <>\n        {loaded ? ipTable : skeletonTable}\n        <div>\n          <Button onClick={() => setIsIPModalOpen(true)}>Add IP Addresses</Button>\n        </div>\n      </>\n    </>\n  );\n};\n\nexport default IPWhitelistTable;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table, TableText, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { Button } from '@patternfly/react-core/dist/dynamic/components/Button';\nimport { EmptyState } from '@patternfly/react-core/dist/dynamic/components/EmptyState';\n\ninterface Registration {\n  uid: string;\n  display_name: string;\n  created_at: string;\n  singleAction: string;\n}\n\nconst SatelliteTable: React.FC = () => {\n  const [registrations, setRegistrations] = useState([]);\n  const [ready, setReady] = useState(false);\n  const columnNames = {\n    display_name: 'Name',\n    created_at: 'Created At',\n    singleAction: 'Single action',\n  };\n\n  const getRegistrations = () => {\n    axios\n      .get('/api/identity/certificate/registrations')\n      .then((res) => {\n        setRegistrations(\n          res.data.registrations.map((ele: Registration) => {\n            return { ...ele, singleAction: 'unregister' };\n          })\n        );\n        setReady(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const unregisterSystem = (uid: string) => {\n    axios\n      .delete(`/api/identity/certificate/registrations/${uid}`)\n      .then((res) => {\n        console.log(res.data);\n        getRegistrations();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n  useEffect(() => {\n    if (!ready) {\n      getRegistrations();\n    }\n  }, [ready]);\n  if (registrations?.length < 1) {\n    return <EmptyState>There are no registrations</EmptyState>;\n  }\n  return (\n    <Table aria-label=\"Misc table\">\n      <Thead noWrap>\n        <Tr>\n          <Th>{columnNames.display_name}</Th>\n          <Th>{columnNames.created_at}</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {registrations?.map((reg: Registration) => {\n          const unregisterButton = (\n            <TableText>\n              <Button variant=\"secondary\" onClick={() => unregisterSystem(reg.uid)}>\n                {reg.singleAction}\n              </Button>\n            </TableText>\n          );\n          return (\n            <Tr key={reg.uid}>\n              <Td dataLabel={columnNames.display_name}>{reg.display_name}</Td>\n              <Td dataLabel={columnNames.created_at}>{reg.created_at}</Td>\n              <Td dataLabel={columnNames.singleAction} modifier=\"fitContent\">\n                {unregisterButton}\n              </Td>\n            </Tr>\n          );\n        })}\n      </Tbody>\n    </Table>\n  );\n};\n\nexport default SatelliteTable;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useFlag } from '@unleash/proxy-client-react';\nimport { Button } from '@patternfly/react-core/dist/dynamic/components/Button';\nimport { Card, CardBody, CardTitle } from '@patternfly/react-core/dist/dynamic/components/Card';\nimport { ClipboardCopy } from '@patternfly/react-core/dist/dynamic/components/ClipboardCopy';\nimport { List, ListComponent, ListItem, OrderType } from '@patternfly/react-core/dist/dynamic/components/List';\nimport { Page, PageSection } from '@patternfly/react-core/dist/dynamic/components/Page';\nimport SatelliteTable from '../components/Satellite/SatelliteTable';\nimport IPWhitelistTable from '../components/Satellite/IPWhitelistTable';\nimport { getEnv } from '../utils/common';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport NotFoundRoute from '../components/NotFoundRoute';\n\nconst SatelliteToken: React.FC = () => {\n  const [token, setToken] = useState('');\n  const [error, setError] = useState(null);\n  const [isOrgAdmin, setIsOrgAdmin] = useState<boolean>(false);\n  const { auth } = useChrome();\n  const isITLess = useFlag('platform.chrome.itless');\n\n  if (!isITLess) {\n    return <NotFoundRoute />;\n  }\n\n  useEffect(() => {\n    auth.getUser().then((user) => user && setIsOrgAdmin(!!user?.identity?.user?.is_org_admin));\n  }, []);\n\n  const generateToken = () => {\n    axios\n      .get('/api/identity/certificate/token')\n      .then((res) => {\n        setToken(res.data.token);\n      })\n      .catch((err) => {\n        console.log(err);\n        setError(err);\n      });\n  };\n  const itlessProd = getEnv() === 'frh';\n  const satelliteUrl = itlessProd ? 'https://mtls.console.openshiftusgov.com' : 'https://mtls.console.stage.openshiftusgov.com';\n  useEffect(() => {\n    if (token.length < 1 && error === null) {\n      generateToken();\n    }\n  }, [token]);\n\n  return (\n    <div>\n      <Page\n        className=\"chr-c-all-services\"\n        onPageResize={null} // required to disable PF resize observer that causes re-rendring issue\n      >\n        <PageSection padding={{ default: 'noPadding', md: 'padding', lg: 'padding' }}>\n          <Card>\n            <CardTitle>Your Registration Token</CardTitle>\n            <CardBody>\n              Use this token to register your Satellite server organization. Note: The token expires in 5 minutes.\n              <div>\n                <Button onClick={generateToken}>Generate Token</Button>\n              </div>\n              <ClipboardCopy className=\"pf-v5-u-mt-md\" isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\">\n                {token}\n              </ClipboardCopy>\n            </CardBody>\n          </Card>\n\n          <Card>\n            <CardTitle>Satellite organization registration.</CardTitle>\n            <CardBody>\n              Every Satellite server organization must be registered following the steps below.\n              <List component={ListComponent.ol} type={OrderType.number}>\n                <ListItem>Copy the registration token above</ListItem>\n                <ListItem>Run the following command from your Satellite server to get the organization id you want to register</ListItem>\n                <ClipboardCopy className=\"pf-v5-u-mt-md\" isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\">\n                  hammer organization list\n                </ClipboardCopy>\n                <ListItem>\n                  {`Run the Hybrid Cloud registration task to register your Red Hat Satellite organization, replacing \"<organization_id>\" with the organization id from\n                  Step 2. You will prompted to enter the token from Step 1.`}\n                </ListItem>\n                <ClipboardCopy className=\"pf-v5-u-mt-md\" isReadOnly hoverTip=\"Copy\" clickTip=\"Copied\">\n                  {`SATELLITE_RH_CLOUD_URL=${satelliteUrl} org_id=<organization_id> foreman-rake rh_cloud:hybridcloud_register`}\n                </ClipboardCopy>\n              </List>\n            </CardBody>\n          </Card>\n        </PageSection>\n        <PageSection>\n          <Card>\n            <CardTitle>Registrations</CardTitle>\n            <CardBody>\n              <SatelliteTable />\n            </CardBody>\n          </Card>\n        </PageSection>\n        {isOrgAdmin ? (\n          <PageSection>\n            <Card>\n              <CardTitle>IP Address Allow List</CardTitle>\n              <CardBody>\n                <IPWhitelistTable />\n              </CardBody>\n            </Card>\n          </PageSection>\n        ) : null}\n      </Page>\n    </div>\n  );\n};\n\nexport default SatelliteToken;\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":["React","EmptyState","EmptyStateBody","InvalidObject","NotFoundRoute","id","default","useEffect","useState","debounce","ActionGroup","Bullseye","Button","EmptyStateHeader","EmptyStateVariant","Form","FormGroup","FormHelperText","HelperText","HelperTextItem","Modal","ModalVariant","Text","TextContent","TextInput","ValidatedOptions","InnerScrollContainer","OuterScrollContainer","Table","TableText","TableVariant","Tbody","Td","Th","Thead","Tr","ExclamationCircleIcon","axios","SkeletonTable","IPWhitelistTable","allAddresses","setAllAddresses","loaded","setLoaded","actionPending","setActionPending","inputAddresses","setInputAddresses","inputAddressesValidated","setInputAddressesesValidated","removeAddresses","setRemoveAddresses","isIPModalOpen","setIsIPModalOpen","isIPRemoveModalOpen","setIsIPRemoveModalOpen","getIPAddresses","get","removeIPAddresses","ipBlock","delete","addIPAddresses","post","ip_block","then","res","data","catch","err","console","error","onChangedAddresses","value","validateIPAddress","onSubmitAddresses","finally","onRemoveAddresses","onChangedAddressesDebounced","address","test","validationError","length","addIPModal","isOpen","onClose","title","variant","medium","onSubmit","event","preventDefault","validated","placeholder","onChange","_event","icon","isDisabled","onClick","removeIPModal","columnNames","org_id","created_at","remove","skeletonTable","compact","rows","columns","Object","values","emptyTable","style","border","colSpan","sm","titleText","headingLevel","ipTable","maxHeight","aria-label","isStickyHeader","map","key","dataLabel","Date","toLocaleString","modifier","div","SatelliteTable","registrations","setRegistrations","ready","setReady","display_name","singleAction","getRegistrations","ele","log","unregisterSystem","uid","noWrap","reg","unregisterButton","useFlag","Card","CardBody","CardTitle","ClipboardCopy","List","ListComponent","ListItem","OrderType","Page","PageSection","getEnv","useChrome","SatelliteToken","token","setToken","setError","isOrgAdmin","setIsOrgAdmin","auth","isITLess","getUser","user","identity","is_org_admin","generateToken","itlessProd","satelliteUrl","className","onPageResize","padding","md","lg","isReadOnly","hoverTip","clickTip","component","ol","type","number"],"sourceRoot":""}