{"version":3,"sources":["App/Header/InsightsAbout.scss","../../node_modules/@red-hat-insights/insights-frontend-components/Utilities/_mixins.scss"],"names":[],"mappings":"AAEA,iDACI,4BAA6B,CCyC/B,oBAxBkE,CDbpE,4BACI,2GAAkD","file":"App.eaea8698.css","sourceRoot":"../../src/js","sourcesContent":["@import '~@red-hat-insights/insights-frontend-components/Utilities/_mixins.scss';\n\n.pf-c-about-modal-box .ins-c-about-modal__footer {\n    border-top: 1px solid #3b3b3b;\n    @include rem('padding-top', 15px);\n}\n\n.pf-c-about-modal-box__hero {\n    --pf-c-about-modal-box__hero--sm--BackgroundImage: url('/../../build/assets/images/hero-image.jpg');\n} ","// Convert px to rem\n// =================================================================/\n@mixin rem($property, $values) {\n\n  // Create a couple of empty lists as output buffers.\n  $font-size: 16px;\n  $px-values: ();\n  $rem-values: ();\n\n  // Loop through the $values list\n  @each $value in $values {\n\n    // For each property value, if it's in rem or px, derive both rem and\n    // px values for it and add those to the end of the appropriate buffer.\n    // Ensure all pixel values are rounded to the nearest pixel.\n    @if type-of($value) == number and not unitless($value) and (unit($value) == px) {\n\n      // px value given - calculate rem value from font-size\n      $new-rem-value: $value / $font-size;\n      $px-values: join($px-values, round($value));\n      $rem-values: join($rem-values, unquote(\"#{$new-rem-value}rem\"));\n\n    } @else if type-of($value) == number and not unitless($value) and (unit($value) == '%') {\n\n      // % value given - don't add px or rem\n      $px-values: join($px-values, unquote(#{$value}));\n      $rem-values: join($rem-values, unquote(#{$value}));\n\n    } @else if $value == auto {\n\n      // auto - don't add px or rem\n      $px-values: join($px-values, auto);\n      $rem-values: join($rem-values, auto);\n\n    } @else {\n\n      // unitless value - use those directly as rem and calculate the px-fallback\n      $px-values: join($px-values, round($value * $font-size));\n      $rem-values: join($rem-values, unquote(\"#{$value}rem\"));\n    }\n  }\n\n  // output the converted rules\n  #{$property}: $px-values;\n  #{$property}: $rem-values;\n\n}\n\n\n\n// Generate font-size in rem\n// =================================================================/\n@mixin font-size($size, $line: $size * 1.4) {\n  font-size: ($size);\n  font-size: ($size / $ins-fontSize) + rem;\n\n  @if $line == 1 {\n    line-height: 1;\n\n  } @else if $line != null {\n    line-height: $line;\n    line-height: ($line / $ins-fontSize) + rem;\n  }\n}\n\n\n\n// Generate transition\n// =================================================================/\n@mixin transition($property) {\n\n  transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  -o-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  -ms-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  -moz-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  -webkit-transition: $property 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n}"]}