"use strict";
(self["webpackChunkinsights_chrome"] = self["webpackChunkinsights_chrome"] || []).push([["vendors-node_modules_patternfly_react-core_dist_esm_deprecated_components_Select_index_js"],{

/***/ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/ApplicationLauncher/ApplicationLauncherSeparator.js":
/*!********************************************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/deprecated/components/ApplicationLauncher/ApplicationLauncherSeparator.js ***!
  \********************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ApplicationLauncherSeparator: () => (/* binding */ ApplicationLauncherSeparator)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _Dropdown_DropdownSeparator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Dropdown/DropdownSeparator */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Dropdown/DropdownSeparator.js");



const ApplicationLauncherSeparator = (_a) => {
    var { 
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    children } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["children"]);
    return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_Dropdown_DropdownSeparator__WEBPACK_IMPORTED_MODULE_2__.DropdownSeparator, Object.assign({}, props));
};
ApplicationLauncherSeparator.displayName = 'ApplicationLauncherSeparator';
//# sourceMappingURL=ApplicationLauncherSeparator.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/Select.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/Select.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Select: () => (/* binding */ Select)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Select/select */ "./node_modules/@patternfly/react-styles/css/components/Select/select.js");
/* harmony import */ var _patternfly_react_styles_css_components_Badge_badge__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Badge/badge */ "./node_modules/@patternfly/react-styles/css/components/Badge/badge.js");
/* harmony import */ var _patternfly_react_styles_css_components_FormControl_form_control__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @patternfly/react-styles/css/components/FormControl/form-control */ "./node_modules/@patternfly/react-styles/css/components/FormControl/form-control.js");
/* harmony import */ var _patternfly_react_styles_css_components_Button_button__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Button/button */ "./node_modules/@patternfly/react-styles/css/components/Button/button.js");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_times_circle_icon__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/times-circle-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/times-circle-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_check_circle_icon__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/check-circle-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/check-circle-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_exclamation_triangle_icon__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/exclamation-circle-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon.js");
/* harmony import */ var _SelectMenu__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./SelectMenu */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectMenu.js");
/* harmony import */ var _SelectOption__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./SelectOption */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectOption.js");
/* harmony import */ var _SelectGroup__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SelectGroup */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectGroup.js");
/* harmony import */ var _SelectToggle__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./SelectToggle */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectToggle.js");
/* harmony import */ var _selectConstants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./selectConstants */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/selectConstants.js");
/* harmony import */ var _components_Chip__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../../components/Chip */ "./node_modules/@patternfly/react-core/dist/esm/components/Chip/ChipGroup.js");
/* harmony import */ var _components_Chip__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../../components/Chip */ "./node_modules/@patternfly/react-core/dist/esm/components/Chip/Chip.js");
/* harmony import */ var _components_Spinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../components/Spinner */ "./node_modules/@patternfly/react-core/dist/esm/components/Spinner/Spinner.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers */ "./node_modules/@patternfly/react-core/dist/esm/helpers/OUIA/ouia.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/util */ "./node_modules/@patternfly/react-core/dist/esm/helpers/util.js");
/* harmony import */ var _helpers__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../../../helpers */ "./node_modules/@patternfly/react-core/dist/esm/helpers/GenerateId/GenerateId.js");
/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../../helpers/constants */ "./node_modules/@patternfly/react-core/dist/esm/helpers/constants.js");
/* harmony import */ var _components_Divider__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../components/Divider */ "./node_modules/@patternfly/react-core/dist/esm/components/Divider/Divider.js");
/* harmony import */ var _helpers_Popper_Popper__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../../../helpers/Popper/Popper */ "./node_modules/@patternfly/react-core/dist/esm/helpers/Popper/Popper.js");
/* harmony import */ var _helpers_favorites__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/favorites */ "./node_modules/@patternfly/react-core/dist/esm/helpers/favorites.js");
/* harmony import */ var _components_TextInput__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../../components/TextInput */ "./node_modules/@patternfly/react-core/dist/esm/components/TextInput/TextInput.js");



























// seed for the aria-labelledby ID
let currentId = 0;
class Select extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    constructor() {
        super(...arguments);
        this.parentRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.menuComponentRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.filterRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.clearRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.inputRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.refCollection = [[]];
        this.optionContainerRefCollection = [];
        this.footerRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.state = {
            focusFirstOption: false,
            typeaheadInputValue: null,
            typeaheadFilteredChildren: react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(this.props.children),
            favoritesGroup: [],
            typeaheadCurrIndex: -1,
            typeaheadStoredIndex: -1,
            creatableValue: '',
            tabbedIntoFavoritesMenu: false,
            ouiaStateId: (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.getDefaultOUIAId)(Select.displayName, this.props.variant),
            viewMoreNextIndex: -1
        };
        this.getTypeaheadActiveChild = (typeaheadCurrIndex) => this.refCollection[typeaheadCurrIndex] ? this.refCollection[typeaheadCurrIndex][0] : null;
        this.componentDidUpdate = (prevProps, prevState) => {
            if (this.props.hasInlineFilter) {
                this.refCollection[0][0] = this.filterRef.current;
            }
            // Move focus to top of the menu if state.focusFirstOption was updated to true and the menu does not have custom content
            if (!prevState.focusFirstOption && this.state.focusFirstOption && !this.props.customContent) {
                const firstRef = this.refCollection.find((ref) => 
                // If a select option is disabled then ref[0] will be undefined, so we want to return
                // the first ref that both a) is not null and b) is not disabled.
                ref !== null && ref[0]);
                if (firstRef && firstRef[0]) {
                    firstRef[0].focus();
                }
            }
            else if (
            // if viewMoreNextIndex is not -1, view more was clicked, set focus on first newly loaded item
            this.state.viewMoreNextIndex !== -1 &&
                this.refCollection.length > this.state.viewMoreNextIndex &&
                this.props.loadingVariant !== 'spinner' &&
                this.refCollection[this.state.viewMoreNextIndex][0] &&
                this.props.variant !== 'typeahead' && // do not hard focus newly added items for typeahead variants
                this.props.variant !== 'typeaheadmulti') {
                this.refCollection[this.state.viewMoreNextIndex][0].focus();
                this.setState({ viewMoreNextIndex: -1 });
            }
            const checkUpdatedChildren = (prevChildren, currChildren) => Array.from(prevChildren).some((prevChild, index) => {
                const prevChildProps = prevChild.props;
                const currChild = currChildren[index];
                const { props: currChildProps } = currChild;
                if (prevChildProps && currChildProps) {
                    return (prevChildProps.value !== currChildProps.value ||
                        prevChildProps.label !== currChildProps.label ||
                        prevChildProps.isDisabled !== currChildProps.isDisabled ||
                        prevChildProps.isPlaceholder !== currChildProps.isPlaceholder);
                }
                else {
                    return prevChild !== currChild;
                }
            });
            const hasUpdatedChildren = prevProps.children.length !== this.props.children.length ||
                checkUpdatedChildren(prevProps.children, this.props.children) ||
                (this.props.isGrouped &&
                    Array.from(prevProps.children).some((prevChild, index) => prevChild.type === _SelectGroup__WEBPACK_IMPORTED_MODULE_2__.SelectGroup &&
                        prevChild.props.children &&
                        this.props.children[index].props.children &&
                        (prevChild.props.children.length !== this.props.children[index].props.children.length ||
                            checkUpdatedChildren(prevChild.props.children, this.props.children[index].props.children))));
            if (hasUpdatedChildren) {
                this.updateTypeAheadFilteredChildren(prevState.typeaheadInputValue || '', null);
            }
            // for menus with favorites,
            // if the number of favorites or typeahead filtered children has changed, the generated
            // list of favorites needs to be updated
            if (this.props.onFavorite &&
                (this.props.favorites.length !== prevProps.favorites.length ||
                    this.state.typeaheadFilteredChildren !== prevState.typeaheadFilteredChildren)) {
                const tempRenderableChildren = this.props.variant === 'typeahead' || this.props.variant === 'typeaheadmulti'
                    ? this.state.typeaheadFilteredChildren
                    : this.props.children;
                const renderableFavorites = (0,_helpers_favorites__WEBPACK_IMPORTED_MODULE_3__.createRenderableFavorites)(tempRenderableChildren, this.props.isGrouped, this.props.favorites);
                const favoritesGroup = renderableFavorites.length
                    ? [
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectGroup__WEBPACK_IMPORTED_MODULE_2__.SelectGroup, { key: "favorites", label: this.props.favoritesLabel }, renderableFavorites),
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_Divider__WEBPACK_IMPORTED_MODULE_4__.Divider, { key: "favorites-group-divider" })
                    ]
                    : [];
                this.setState({ favoritesGroup });
            }
        };
        this.onEnter = () => {
            this.setState({ focusFirstOption: true });
        };
        this.onToggle = (e, isExpanded) => {
            const { isInputValuePersisted, onSelect, onToggle, hasInlineFilter } = this.props;
            if (!isExpanded && isInputValuePersisted && onSelect) {
                onSelect(undefined, this.inputRef.current ? this.inputRef.current.value : '');
            }
            if (isExpanded && hasInlineFilter) {
                this.setState({
                    focusFirstOption: true
                });
            }
            onToggle(e, isExpanded);
        };
        this.onClose = () => {
            const { isInputFilterPersisted } = this.props;
            this.setState(Object.assign(Object.assign({ focusFirstOption: false, typeaheadInputValue: null }, (!isInputFilterPersisted && {
                typeaheadFilteredChildren: react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(this.props.children)
            })), { typeaheadCurrIndex: -1, tabbedIntoFavoritesMenu: false, viewMoreNextIndex: -1 }));
        };
        this.onChange = (e) => {
            if (e.target.value.toString() !== '' && !this.props.isOpen) {
                this.onToggle(e, true);
            }
            if (this.props.onTypeaheadInputChanged) {
                this.props.onTypeaheadInputChanged(e.target.value.toString());
            }
            this.setState({
                typeaheadCurrIndex: -1,
                typeaheadInputValue: e.target.value,
                creatableValue: e.target.value
            });
            this.updateTypeAheadFilteredChildren(e.target.value.toString(), e);
            this.refCollection = [[]];
        };
        this.updateTypeAheadFilteredChildren = (typeaheadInputValue, e) => {
            let typeaheadFilteredChildren;
            const { onFilter, isCreatable, isCreateOptionOnTop, onCreateOption, createText, noResultsFoundText, children, isGrouped, isCreateSelectOptionObject, loadingVariant } = this.props;
            if (onFilter) {
                /* The updateTypeAheadFilteredChildren callback is not only called on input changes but also when the children change.
                 * In this case the e is null but we can get the typeaheadInputValue from the state.
                 */
                typeaheadFilteredChildren = onFilter(e, e ? e.target.value : typeaheadInputValue) || children;
            }
            else {
                let input;
                try {
                    input = new RegExp(typeaheadInputValue.toString(), 'i');
                }
                catch (err) {
                    input = new RegExp(typeaheadInputValue.toString().replace(/[.*+?^${}()|[\]\\]/g, '\\$&'), 'i');
                }
                const childrenArray = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children);
                if (isGrouped) {
                    const childFilter = (child) => child.props.value &&
                        child.props.value.toString &&
                        this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;
                    typeaheadFilteredChildren =
                        typeaheadInputValue.toString() !== ''
                            ? react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (group) => {
                                if (react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(group) &&
                                    group.type === _SelectGroup__WEBPACK_IMPORTED_MODULE_2__.SelectGroup) {
                                    const filteredGroupChildren = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(group.props.children).filter(childFilter);
                                    if (filteredGroupChildren.length > 0) {
                                        return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(group, {
                                            titleId: group.props.label && group.props.label.replace(/\W/g, '-'),
                                            children: filteredGroupChildren
                                        });
                                    }
                                }
                                else {
                                    return react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(group).filter(childFilter);
                                }
                            })
                            : childrenArray;
                }
                else {
                    typeaheadFilteredChildren =
                        typeaheadInputValue.toString() !== ''
                            ? childrenArray.filter((child) => {
                                const valueToCheck = child.props.value;
                                // Dividers don't have value and should not be filtered
                                if (!valueToCheck) {
                                    return true;
                                }
                                const isSelectOptionObject = typeof valueToCheck !== 'string' &&
                                    valueToCheck.toString &&
                                    valueToCheck.compareTo;
                                // View more option should be returned as not a match
                                if (loadingVariant !== 'spinner' && (loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.text) === valueToCheck) {
                                    return true;
                                }
                                // spinner should be returned as not a match
                                if (loadingVariant === 'spinner' && valueToCheck === 'loading') {
                                    return true;
                                }
                                if (isSelectOptionObject) {
                                    return valueToCheck.compareTo(typeaheadInputValue);
                                }
                                else {
                                    return this.getDisplay(child.props.value.toString(), 'text').search(input) === 0;
                                }
                            })
                            : childrenArray;
                }
            }
            if (!typeaheadFilteredChildren) {
                typeaheadFilteredChildren = [];
            }
            if (typeaheadFilteredChildren.length === 0) {
                !isCreatable &&
                    typeaheadFilteredChildren.push(react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectOption__WEBPACK_IMPORTED_MODULE_5__.SelectOption, { isDisabled: true, key: "no-results", value: noResultsFoundText, isNoResultsOption: true }));
            }
            if (isCreatable && typeaheadInputValue !== '') {
                const newValue = typeaheadInputValue;
                if (!typeaheadFilteredChildren.find((i) => i.props.value && i.props.value.toString().toLowerCase() === newValue.toString().toLowerCase())) {
                    const newOptionValue = isCreateSelectOptionObject
                        ? {
                            toString: () => newValue,
                            compareTo: (value) => this.toString().toLowerCase().includes(value.toString().toLowerCase())
                        }
                        : newValue;
                    const createSelectOption = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectOption__WEBPACK_IMPORTED_MODULE_5__.SelectOption, { key: `create ${newValue}`, value: newOptionValue, onClick: () => onCreateOption && onCreateOption(newValue) },
                        createText,
                        " \"",
                        newValue,
                        "\""));
                    if (isCreateOptionOnTop) {
                        typeaheadFilteredChildren.unshift(createSelectOption);
                    }
                    else {
                        typeaheadFilteredChildren.push(createSelectOption);
                    }
                }
            }
            this.setState({
                typeaheadFilteredChildren
            });
        };
        this.onClick = (e) => {
            if (!this.props.isOpen) {
                this.onToggle(e, true);
            }
        };
        this.clearSelection = (_e) => {
            this.setState({
                typeaheadInputValue: null,
                typeaheadFilteredChildren: react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(this.props.children),
                typeaheadCurrIndex: -1
            });
        };
        this.sendRef = (optionRef, favoriteRef, optionContainerRef, index) => {
            this.refCollection[index] = [optionRef, favoriteRef];
            this.optionContainerRefCollection[index] = optionContainerRef;
        };
        this.handleMenuKeys = (index, innerIndex, position) => {
            (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.keyHandler)(index, innerIndex, position, this.refCollection, this.refCollection);
            if (this.props.variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.typeahead || this.props.variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.typeaheadMulti) {
                if (position !== 'tab') {
                    this.handleTypeaheadKeys(position);
                }
            }
        };
        this.moveFocus = (nextIndex, updateCurrentIndex = true) => {
            const { isCreatable, createText } = this.props;
            const hasDescriptionElm = Boolean(this.refCollection[nextIndex][0] && this.refCollection[nextIndex][0].classList.contains('pf-m-description'));
            const isLoad = Boolean(this.refCollection[nextIndex][0] && this.refCollection[nextIndex][0].classList.contains('pf-m-load'));
            const optionTextElm = hasDescriptionElm
                ? this.refCollection[nextIndex][0].firstElementChild
                : this.refCollection[nextIndex][0];
            let typeaheadInputValue = '';
            if (isCreatable && optionTextElm.textContent.includes(createText)) {
                typeaheadInputValue = this.state.creatableValue;
            }
            else if (optionTextElm && !isLoad) {
                // !isLoad prevents the view more button text from appearing the typeahead input
                typeaheadInputValue = optionTextElm.textContent;
            }
            this.setState((prevState) => ({
                typeaheadCurrIndex: updateCurrentIndex ? nextIndex : prevState.typeaheadCurrIndex,
                typeaheadStoredIndex: nextIndex,
                typeaheadInputValue
            }));
        };
        this.switchFocusToFavoriteMenu = () => {
            const { typeaheadCurrIndex, typeaheadStoredIndex } = this.state;
            let indexForFocus = 0;
            if (typeaheadCurrIndex !== -1) {
                indexForFocus = typeaheadCurrIndex;
            }
            else if (typeaheadStoredIndex !== -1) {
                indexForFocus = typeaheadStoredIndex;
            }
            if (this.refCollection[indexForFocus] !== null && this.refCollection[indexForFocus][0] !== null) {
                this.refCollection[indexForFocus][0].focus();
            }
            else {
                this.clearRef.current.focus();
            }
            this.setState({
                tabbedIntoFavoritesMenu: true,
                typeaheadCurrIndex: -1
            });
        };
        this.moveFocusToLastMenuItem = () => {
            const refCollectionLen = this.refCollection.length;
            if (refCollectionLen > 0 &&
                this.refCollection[refCollectionLen - 1] !== null &&
                this.refCollection[refCollectionLen - 1][0] !== null) {
                this.refCollection[refCollectionLen - 1][0].focus();
            }
        };
        this.handleTypeaheadKeys = (position, shiftKey = false) => {
            const { isOpen, onFavorite, isCreatable } = this.props;
            const { typeaheadCurrIndex, tabbedIntoFavoritesMenu } = this.state;
            const typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);
            if (isOpen) {
                if (position === 'enter') {
                    if ((typeaheadCurrIndex !== -1 || (isCreatable && this.refCollection.length === 1)) && // do not allow selection without moving to an initial option unless it is a single create option
                        (typeaheadActiveChild || (this.refCollection[0] && this.refCollection[0][0]))) {
                        if (typeaheadActiveChild) {
                            if (!typeaheadActiveChild.classList.contains('pf-m-load')) {
                                const hasDescriptionElm = typeaheadActiveChild.childElementCount > 1;
                                const typeaheadActiveChildText = hasDescriptionElm
                                    ? typeaheadActiveChild.firstChild.textContent
                                    : typeaheadActiveChild.textContent;
                                this.setState({
                                    typeaheadInputValue: typeaheadActiveChildText
                                });
                            }
                        }
                        else if (this.refCollection[0] && this.refCollection[0][0]) {
                            this.setState({
                                typeaheadInputValue: this.refCollection[0][0].textContent
                            });
                        }
                        if (typeaheadActiveChild) {
                            typeaheadActiveChild.click();
                        }
                        else {
                            this.refCollection[0][0].click();
                        }
                    }
                }
                else if (position === 'tab') {
                    if (onFavorite) {
                        // if the input has focus, tab to the first item or the last item that was previously focused.
                        if (this.inputRef.current === document.activeElement) {
                            // If shift is also clicked and there is a footer, tab to the last item in tabbable footer
                            if (this.props.footer && shiftKey) {
                                const tabbableItems = (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.findTabbableElements)(this.footerRef, _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectFooterTabbableItems);
                                if (tabbableItems.length > 0) {
                                    if (tabbableItems[tabbableItems.length - 1]) {
                                        tabbableItems[tabbableItems.length - 1].focus();
                                    }
                                }
                            }
                            else {
                                this.switchFocusToFavoriteMenu();
                            }
                        }
                        else {
                            // focus is on menu or footer
                            if (this.props.footer) {
                                let tabbedIntoMenu = false;
                                const tabbableItems = (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.findTabbableElements)(this.footerRef, _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectFooterTabbableItems);
                                if (tabbableItems.length > 0) {
                                    // if current element is not in footer, tab to first tabbable element in footer,
                                    // if shift was clicked, tab to input since focus is on menu
                                    const currentElementIndex = tabbableItems.findIndex((item) => item === document.activeElement);
                                    if (currentElementIndex === -1) {
                                        if (shiftKey) {
                                            // currently in menu, shift back to input
                                            this.inputRef.current.focus();
                                        }
                                        else {
                                            // currently in menu, tab to first tabbable item in footer
                                            tabbableItems[0].focus();
                                        }
                                    }
                                    else {
                                        // already in footer
                                        if (shiftKey) {
                                            // shift to previous item
                                            if (currentElementIndex === 0) {
                                                // on first footer item, shift back to menu
                                                this.switchFocusToFavoriteMenu();
                                                tabbedIntoMenu = true;
                                            }
                                            else {
                                                // shift to previous footer item
                                                tabbableItems[currentElementIndex - 1].focus();
                                            }
                                        }
                                        else {
                                            // tab to next tabbable item in footer or to input.
                                            if (tabbableItems[currentElementIndex + 1]) {
                                                tabbableItems[currentElementIndex + 1].focus();
                                            }
                                            else {
                                                this.inputRef.current.focus();
                                            }
                                        }
                                    }
                                }
                                else {
                                    // no tabbable items in footer, tab to input
                                    this.inputRef.current.focus();
                                    tabbedIntoMenu = false;
                                }
                                this.setState({ tabbedIntoFavoritesMenu: tabbedIntoMenu });
                            }
                            else {
                                this.inputRef.current.focus();
                                this.setState({ tabbedIntoFavoritesMenu: false });
                            }
                        }
                    }
                    else {
                        // Close if there is no footer
                        if (!this.props.footer) {
                            this.onToggle(null, false);
                            this.onClose();
                        }
                        else {
                            // has footer
                            const tabbableItems = (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.findTabbableElements)(this.footerRef, _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectFooterTabbableItems);
                            const currentElementIndex = tabbableItems.findIndex((item) => item === document.activeElement);
                            if (this.inputRef.current === document.activeElement) {
                                if (shiftKey) {
                                    // close toggle if shift key and tab on input
                                    this.onToggle(null, false);
                                    this.onClose();
                                }
                                else {
                                    // tab to first tabbable item in footer
                                    if (tabbableItems[0]) {
                                        tabbableItems[0].focus();
                                    }
                                    else {
                                        this.onToggle(null, false);
                                        this.onClose();
                                    }
                                }
                            }
                            else {
                                // focus is in footer
                                if (shiftKey) {
                                    if (currentElementIndex === 0) {
                                        // shift tab back to input
                                        this.inputRef.current.focus();
                                    }
                                    else {
                                        // shift to previous footer item
                                        tabbableItems[currentElementIndex - 1].focus();
                                    }
                                }
                                else {
                                    // tab to next footer item or close tab if last item
                                    if (tabbableItems[currentElementIndex + 1]) {
                                        tabbableItems[currentElementIndex + 1].focus();
                                    }
                                    else {
                                        // no next item, close toggle
                                        this.onToggle(null, false);
                                        this.inputRef.current.focus();
                                        this.onClose();
                                    }
                                }
                            }
                        }
                    }
                }
                else if (!tabbedIntoFavoritesMenu) {
                    if (this.refCollection[0][0] === null) {
                        return;
                    }
                    let nextIndex;
                    if (typeaheadCurrIndex === -1 && position === 'down') {
                        nextIndex = 0;
                    }
                    else if (typeaheadCurrIndex === -1 && position === 'up') {
                        nextIndex = this.refCollection.length - 1;
                    }
                    else if (position !== 'left' && position !== 'right') {
                        nextIndex = (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.getNextIndex)(typeaheadCurrIndex, position, this.refCollection);
                    }
                    else {
                        nextIndex = typeaheadCurrIndex;
                    }
                    if (this.refCollection[nextIndex] === null) {
                        return;
                    }
                    this.moveFocus(nextIndex);
                }
                else {
                    const nextIndex = this.refCollection.findIndex((ref) => ref !== undefined && (ref[0] === document.activeElement || ref[1] === document.activeElement));
                    this.moveFocus(nextIndex);
                }
            }
        };
        this.onClickTypeaheadToggleButton = () => {
            if (this.inputRef && this.inputRef.current) {
                this.inputRef.current.focus();
            }
        };
        this.getDisplay = (value, type = 'node') => {
            if (!value) {
                return;
            }
            const item = this.props.isGrouped
                ? react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(this.props.children)
                    .reduce((acc, curr) => [...acc, ...react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(curr.props.children)], [])
                    .find((child) => child.props.value.toString() === value.toString())
                : react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(this.props.children).find((child) => child.props.value &&
                    child.props.value.toString() === value.toString());
            if (item) {
                if (item && item.props.children) {
                    if (type === 'node') {
                        return item.props.children;
                    }
                    return this.findText(item);
                }
                return item.props.value.toString();
            }
            return value.toString();
        };
        this.findText = (item) => {
            if (typeof item === 'string') {
                return item;
            }
            else if (!react__WEBPACK_IMPORTED_MODULE_0__.isValidElement(item)) {
                return '';
            }
            else {
                const multi = [];
                react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(item.props.children).forEach((child) => multi.push(this.findText(child)));
                return multi.join('');
            }
        };
        this.generateSelectedBadge = () => {
            const { customBadgeText, selections } = this.props;
            if (customBadgeText !== null) {
                return customBadgeText;
            }
            if (Array.isArray(selections) && selections.length > 0) {
                return selections.length;
            }
            return null;
        };
        this.setVieMoreNextIndex = () => {
            this.setState({ viewMoreNextIndex: this.refCollection.length - 1 });
        };
        this.isLastOptionBeforeFooter = (index) => this.props.footer && index === this.refCollection.length - 1 ? true : false;
    }
    extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup) {
        const { isGrouped, onFavorite, createText } = this.props;
        const typeaheadChildren = favoritesGroup
            ? favoritesGroup.concat(this.state.typeaheadFilteredChildren)
            : this.state.typeaheadFilteredChildren;
        const activeElement = this.optionContainerRefCollection[typeaheadCurrIndex];
        let typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);
        if (typeaheadActiveChild && typeaheadActiveChild.classList.contains('pf-m-description')) {
            typeaheadActiveChild = typeaheadActiveChild.firstElementChild;
        }
        this.refCollection = [[]];
        this.optionContainerRefCollection = [];
        if (isGrouped) {
            return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(typeaheadChildren, (group) => {
                if (group.type === _components_Divider__WEBPACK_IMPORTED_MODULE_4__.Divider) {
                    return group;
                }
                else if (group.type === _SelectGroup__WEBPACK_IMPORTED_MODULE_2__.SelectGroup && onFavorite) {
                    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(group, {
                        titleId: group.props.label && group.props.label.replace(/\W/g, '-'),
                        children: react__WEBPACK_IMPORTED_MODULE_0__.Children.map(group.props.children, (child) => child.type === _components_Divider__WEBPACK_IMPORTED_MODULE_4__.Divider
                            ? child
                            : react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
                                isFocused: activeElement &&
                                    (activeElement.id === child.props.id ||
                                        (this.props.isCreatable &&
                                            typeaheadActiveChild.textContent ===
                                                `${createText} "${group.props.value}"`))
                            }))
                    });
                }
                else if (group.type === _SelectGroup__WEBPACK_IMPORTED_MODULE_2__.SelectGroup) {
                    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(group, {
                        titleId: group.props.label && group.props.label.replace(/\W/g, '-'),
                        children: react__WEBPACK_IMPORTED_MODULE_0__.Children.map(group.props.children, (child) => child.type === _components_Divider__WEBPACK_IMPORTED_MODULE_4__.Divider
                            ? child
                            : react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
                                isFocused: typeaheadActiveChild &&
                                    (typeaheadActiveChild.textContent === child.props.value.toString() ||
                                        (this.props.isCreatable &&
                                            typeaheadActiveChild.textContent ===
                                                `${createText} "${child.props.value}"`))
                            }))
                    });
                }
                else {
                    // group has been filtered down to SelectOption
                    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(group, {
                        isFocused: typeaheadActiveChild &&
                            (typeaheadActiveChild.textContent === group.props.value.toString() ||
                                (this.props.isCreatable && typeaheadActiveChild.textContent === `${createText} "${group.props.value}"`))
                    });
                }
            });
        }
        return typeaheadChildren.map((child, index) => {
            const childElement = child;
            return childElement.type.displayName === 'Divider'
                ? child
                : react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
                    isFocused: typeaheadActiveChild
                        ? typeaheadActiveChild.textContent === child.props.value.toString() ||
                            (this.props.isCreatable &&
                                typeaheadActiveChild.textContent === `${createText} "${child.props.value}"`)
                        : index === typeaheadCurrIndex // fallback for view more + typeahead use cases, when the new expanded list is loaded and refCollection hasn't be updated yet
                });
        });
    }
    render() {
        const _a = this.props, { children, chipGroupProps, chipGroupComponent, className, customContent, variant, direction, onSelect, onClear, onBlur, toggleId, toggleRef, isOpen, isGrouped, isPlain, isDisabled, hasPlaceholderStyle, validated, selections: selectionsProp, typeAheadAriaLabel, typeAheadAriaDescribedby, clearSelectionsAriaLabel, toggleAriaLabel, removeSelectionAriaLabel, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy, 'aria-describedby': ariaDescribedby, 'aria-invalid': ariaInvalid, placeholderText, width, maxHeight, toggleIcon, toggleIndicator, ouiaId, ouiaSafe, hasInlineFilter, isCheckboxSelectionBadgeHidden, inlineFilterPlaceholderText, 
        /* eslint-disable @typescript-eslint/no-unused-vars */
        onFilter, 
        /* eslint-disable @typescript-eslint/no-unused-vars */
        onTypeaheadInputChanged, onCreateOption, isCreatable, onToggle, createText, noResultsFoundText, customBadgeText, inputIdPrefix, inputAutoComplete, 
        /* eslint-disable @typescript-eslint/no-unused-vars */
        isInputValuePersisted, isInputFilterPersisted, 
        /* eslint-enable @typescript-eslint/no-unused-vars */
        menuAppendTo, favorites, onFavorite, 
        /* eslint-disable @typescript-eslint/no-unused-vars */
        favoritesLabel, footer, loadingVariant, isCreateSelectOptionObject, isCreateOptionOnTop, shouldResetOnSelect, isFlipEnabled, zIndex } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_8__.__rest)(_a, ["children", "chipGroupProps", "chipGroupComponent", "className", "customContent", "variant", "direction", "onSelect", "onClear", "onBlur", "toggleId", "toggleRef", "isOpen", "isGrouped", "isPlain", "isDisabled", "hasPlaceholderStyle", "validated", "selections", "typeAheadAriaLabel", "typeAheadAriaDescribedby", "clearSelectionsAriaLabel", "toggleAriaLabel", "removeSelectionAriaLabel", 'aria-label', 'aria-labelledby', 'aria-describedby', 'aria-invalid', "placeholderText", "width", "maxHeight", "toggleIcon", "toggleIndicator", "ouiaId", "ouiaSafe", "hasInlineFilter", "isCheckboxSelectionBadgeHidden", "inlineFilterPlaceholderText", "onFilter", "onTypeaheadInputChanged", "onCreateOption", "isCreatable", "onToggle", "createText", "noResultsFoundText", "customBadgeText", "inputIdPrefix", "inputAutoComplete", "isInputValuePersisted", "isInputFilterPersisted", "menuAppendTo", "favorites", "onFavorite", "favoritesLabel", "footer", "loadingVariant", "isCreateSelectOptionObject", "isCreateOptionOnTop", "shouldResetOnSelect", "isFlipEnabled", "zIndex"]);
        const { focusFirstOption: openedOnEnter, typeaheadCurrIndex, typeaheadInputValue, typeaheadFilteredChildren, favoritesGroup } = this.state;
        const selectToggleId = toggleId || `pf-select-toggle-id-${currentId++}`;
        const selections = Array.isArray(selectionsProp) ? selectionsProp : [selectionsProp];
        // Find out if the selected option is a placeholder
        const selectedOption = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children).find((option) => option.props.value === selections[0]);
        const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;
        const hasAnySelections = Boolean(selections[0] && selections[0] !== '');
        const typeaheadActiveChild = this.getTypeaheadActiveChild(typeaheadCurrIndex);
        let childPlaceholderText = null;
        // If onFavorites is set,  add isFavorite prop to children and add a Favorites group to the SelectMenu
        let renderableItems = [];
        if (onFavorite) {
            // if variant is type-ahead call the extendTypeaheadChildren before adding favorites
            let tempExtendedChildren = children;
            if (variant === 'typeahead' || variant === 'typeaheadmulti') {
                tempExtendedChildren = this.extendTypeaheadChildren(typeaheadCurrIndex, favoritesGroup);
            }
            else if (onFavorite) {
                tempExtendedChildren = favoritesGroup.concat(children);
            }
            // mark items that are favorited with isFavorite
            renderableItems = (0,_helpers_favorites__WEBPACK_IMPORTED_MODULE_3__.extendItemsWithFavorite)(tempExtendedChildren, isGrouped, favorites);
        }
        else {
            renderableItems = children;
        }
        if (!customContent) {
            if (!hasAnySelections && !placeholderText) {
                const childPlaceholder = react__WEBPACK_IMPORTED_MODULE_0__.Children.toArray(children).filter((child) => child.props.isPlaceholder === true);
                childPlaceholderText =
                    (childPlaceholder[0] && this.getDisplay(childPlaceholder[0].props.value, 'node')) ||
                        (children[0] && this.getDisplay(children[0].props.value, 'node'));
            }
        }
        if (isOpen) {
            if (renderableItems.find((item) => (item === null || item === void 0 ? void 0 : item.key) === 'loading') === undefined) {
                if (loadingVariant === 'spinner') {
                    renderableItems.push(react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectOption__WEBPACK_IMPORTED_MODULE_5__.SelectOption, { isLoading: true, key: "loading", value: "loading" },
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_Spinner__WEBPACK_IMPORTED_MODULE_9__.Spinner, { size: "lg" })));
                }
                else if (loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.text) {
                    renderableItems.push(react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectOption__WEBPACK_IMPORTED_MODULE_5__.SelectOption, { isLoad: true, key: "loading", value: loadingVariant.text, setViewMoreNextIndex: this.setVieMoreNextIndex, onClick: loadingVariant === null || loadingVariant === void 0 ? void 0 : loadingVariant.onClick }));
                }
            }
        }
        const hasOnClear = onClear !== Select.defaultProps.onClear;
        const clearBtn = (react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Button_button__WEBPACK_IMPORTED_MODULE_11__["default"].button, _patternfly_react_styles_css_components_Button_button__WEBPACK_IMPORTED_MODULE_11__["default"].modifiers.plain, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleClear), onClick: (e) => {
                this.clearSelection(e);
                onClear(e);
                e.stopPropagation();
            }, "aria-label": clearSelectionsAriaLabel, type: "button", disabled: isDisabled, ref: this.clearRef, onKeyDown: (event) => {
                if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.KeyTypes.Enter) {
                    this.clearRef.current.click();
                }
            } },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_times_circle_icon__WEBPACK_IMPORTED_MODULE_14__["default"], { "aria-hidden": true })));
        let selectedChips = null;
        if (variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.typeaheadMulti) {
            selectedChips = chipGroupComponent ? (chipGroupComponent) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_Chip__WEBPACK_IMPORTED_MODULE_15__.ChipGroup, Object.assign({}, chipGroupProps), selections &&
                selections.map((item) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_Chip__WEBPACK_IMPORTED_MODULE_16__.Chip, { key: item, onClick: (e) => onSelect(e, item), closeBtnAriaLabel: removeSelectionAriaLabel }, this.getDisplay(item, 'node'))))));
        }
        if (hasInlineFilter) {
            const filterBox = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { key: "inline-filter", className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectMenuSearch, _patternfly_react_styles_css_components_FormControl_form_control__WEBPACK_IMPORTED_MODULE_17__["default"].formControl) },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", { key: "inline-filter-input", type: "search", onChange: this.onChange, placeholder: inlineFilterPlaceholderText, onKeyDown: (event) => {
                            if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.KeyTypes.ArrowUp) {
                                this.handleMenuKeys(0, 0, 'up');
                                event.preventDefault();
                            }
                            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.KeyTypes.ArrowDown) {
                                this.handleMenuKeys(0, 0, 'down');
                                event.preventDefault();
                            }
                            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.KeyTypes.ArrowLeft) {
                                this.handleMenuKeys(0, 0, 'left');
                                event.preventDefault();
                            }
                            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.KeyTypes.ArrowRight) {
                                this.handleMenuKeys(0, 0, 'right');
                                event.preventDefault();
                            }
                            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.KeyTypes.Tab && variant !== _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox && this.props.footer) {
                                // tab to footer or close menu if shift key
                                if (event.shiftKey) {
                                    this.onToggle(event, false);
                                }
                                else {
                                    const tabbableItems = (0,_helpers__WEBPACK_IMPORTED_MODULE_6__.findTabbableElements)(this.footerRef, _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectFooterTabbableItems);
                                    if (tabbableItems.length > 0) {
                                        tabbableItems[0].focus();
                                        event.stopPropagation();
                                        event.preventDefault();
                                    }
                                    else {
                                        this.onToggle(event, false);
                                    }
                                }
                            }
                            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.KeyTypes.Tab && variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox) {
                                // More modal-like experience for checkboxes
                                // Let SelectOption handle this
                                if (event.shiftKey) {
                                    this.handleMenuKeys(0, 0, 'up');
                                }
                                else {
                                    this.handleMenuKeys(0, 0, 'down');
                                }
                                event.stopPropagation();
                                event.preventDefault();
                            }
                        }, ref: this.filterRef, autoComplete: inputAutoComplete })),
                react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_Divider__WEBPACK_IMPORTED_MODULE_4__.Divider, { key: "inline-filter-divider" })));
            renderableItems = [filterBox, ...typeaheadFilteredChildren].map((option, index) => react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(option, { key: index }));
        }
        let variantProps;
        let variantChildren;
        if (customContent) {
            variantProps = {
                selected: selections,
                openedOnEnter,
                isCustomContent: true
            };
            variantChildren = customContent;
        }
        else {
            switch (variant) {
                case 'single':
                    variantProps = {
                        selected: selections[0],
                        hasInlineFilter,
                        openedOnEnter
                    };
                    variantChildren = renderableItems;
                    break;
                case 'checkbox':
                    variantProps = {
                        checked: selections,
                        isGrouped,
                        hasInlineFilter,
                        openedOnEnter
                    };
                    variantChildren = renderableItems;
                    break;
                case 'typeahead':
                    variantProps = {
                        selected: selections[0],
                        openedOnEnter
                    };
                    variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);
                    if (variantChildren.length === 0) {
                        variantChildren.push(react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectOption__WEBPACK_IMPORTED_MODULE_5__.SelectOption, { isDisabled: true, key: 0, value: noResultsFoundText, isNoResultsOption: true }));
                    }
                    break;
                case 'typeaheadmulti':
                    variantProps = {
                        selected: selections,
                        openedOnEnter
                    };
                    variantChildren = onFavorite ? renderableItems : this.extendTypeaheadChildren(typeaheadCurrIndex);
                    if (variantChildren.length === 0) {
                        variantChildren.push(react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectOption__WEBPACK_IMPORTED_MODULE_5__.SelectOption, { isDisabled: true, key: 0, value: noResultsFoundText, isNoResultsOption: true }));
                    }
                    break;
            }
        }
        const isStatic = isFlipEnabled && menuAppendTo !== 'inline';
        const innerMenu = (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectMenu__WEBPACK_IMPORTED_MODULE_18__.SelectMenu, Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(isStatic && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.static) }, props, { isGrouped: isGrouped, selected: selections }, variantProps, { openedOnEnter: openedOnEnter, "aria-label": ariaLabel, "aria-labelledby": ariaLabelledBy, sendRef: this.sendRef, keyHandler: this.handleMenuKeys, maxHeight: maxHeight, ref: this.menuComponentRef, footer: footer, footerRef: this.footerRef, isLastOptionBeforeFooter: this.isLastOptionBeforeFooter }), variantChildren));
        const menuContainer = footer ? react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectMenu) },
            " ",
            innerMenu,
            " ") : innerMenu;
        const popperRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        const popperContainer = (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].select, isOpen && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.expanded, validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.success && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.success, validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.warning && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.warning, validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.error && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.invalid, direction === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectDirection.up && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.top, className), ref: popperRef }, (width && { style: { width } }), (validated !== _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.default && { 'aria-invalid': ariaInvalid })), isOpen && menuContainer));
        const mainContainer = (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].select, isOpen && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.expanded, validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.success && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.success, validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.warning && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.warning, validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.error && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.invalid, direction === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectDirection.up && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].modifiers.top, className), ref: this.parentRef }, (0,_helpers__WEBPACK_IMPORTED_MODULE_1__.getOUIAProps)(Select.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), (width && { style: { width } }), (validated !== _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.default && { 'aria-invalid': ariaInvalid })),
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(_SelectToggle__WEBPACK_IMPORTED_MODULE_19__.SelectToggle, Object.assign({ id: selectToggleId, parentRef: this.parentRef, menuRef: this.menuComponentRef, ref: toggleRef }, (footer && { footerRef: this.footerRef }), { isOpen: isOpen, isPlain: isPlain, hasPlaceholderStyle: hasPlaceholderStyle && (!selections.length || selections[0] === null || isSelectedPlaceholder), onToggle: this.onToggle, onEnter: this.onEnter, onClose: this.onClose, onBlur: onBlur, variant: variant, toggleIndicator: toggleIndicator, "aria-labelledby": `${ariaLabelledBy || ''} ${selectToggleId}`, "aria-label": toggleAriaLabel }, (ariaDescribedby && { 'aria-describedby': ariaDescribedby }), { handleTypeaheadKeys: this.handleTypeaheadKeys, moveFocusToLastMenuItem: this.moveFocusToLastMenuItem, isDisabled: isDisabled, hasClearButton: hasOnClear, hasFooter: footer !== undefined, onClickTypeaheadToggleButton: this.onClickTypeaheadToggleButton }),
                customContent && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleWrapper) },
                    toggleIcon && react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleIcon) }, toggleIcon),
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleText) }, placeholderText))),
                variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.single && !customContent && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleWrapper) },
                        toggleIcon && react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleIcon) }, toggleIcon),
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleText) }, this.getDisplay(selections[0], 'node') || placeholderText || childPlaceholderText)),
                    hasOnClear && hasAnySelections && clearBtn)),
                variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox && !customContent && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleWrapper) },
                        toggleIcon && react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleIcon) }, toggleIcon),
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleText) }, placeholderText),
                        !isCheckboxSelectionBadgeHidden && hasAnySelections && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleBadge) },
                            react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Badge_badge__WEBPACK_IMPORTED_MODULE_20__["default"].badge, _patternfly_react_styles_css_components_Badge_badge__WEBPACK_IMPORTED_MODULE_20__["default"].modifiers.read) }, this.generateSelectedBadge())))),
                    hasOnClear && hasAnySelections && clearBtn)),
                variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.typeahead && !customContent && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleWrapper) },
                        toggleIcon && react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleIcon) }, toggleIcon),
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_TextInput__WEBPACK_IMPORTED_MODULE_21__.TextInput, Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleTypeahead), "aria-activedescendant": typeaheadActiveChild && typeaheadActiveChild.id, id: `${selectToggleId}-select-typeahead`, "aria-label": typeAheadAriaLabel }, (typeAheadAriaDescribedby && { 'aria-describedby': typeAheadAriaDescribedby }), { placeholder: placeholderText, value: typeaheadInputValue !== null
                                ? typeaheadInputValue
                                : this.getDisplay(selections[0], 'text') || '', onChange: (event) => this.onChange(event), onClick: this.onClick, autoComplete: inputAutoComplete, isDisabled: isDisabled, ref: this.inputRef }))),
                    hasOnClear && (selections[0] || typeaheadInputValue) && clearBtn)),
                variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.typeaheadMulti && !customContent && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleWrapper) },
                        toggleIcon && react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleIcon) }, toggleIcon),
                        selections && Array.isArray(selections) && selections.length > 0 && selectedChips,
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_components_TextInput__WEBPACK_IMPORTED_MODULE_21__.TextInput, Object.assign({ className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleTypeahead), "aria-activedescendant": typeaheadActiveChild && typeaheadActiveChild.id, id: `${selectToggleId}-select-multi-typeahead-typeahead`, "aria-label": typeAheadAriaLabel, "aria-invalid": validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.error }, (typeAheadAriaDescribedby && { 'aria-describedby': typeAheadAriaDescribedby }), { placeholder: placeholderText, value: typeaheadInputValue !== null ? typeaheadInputValue : '', onChange: (event) => this.onChange(event), onClick: this.onClick, autoComplete: inputAutoComplete, isDisabled: isDisabled, ref: this.inputRef }))),
                    hasOnClear && ((selections && selections.length > 0) || typeaheadInputValue) && clearBtn)),
                validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.success && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleStatusIcon) },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_check_circle_icon__WEBPACK_IMPORTED_MODULE_22__["default"], { "aria-hidden": "true" }))),
                validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.error && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleStatusIcon) },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_23__["default"], { "aria-hidden": "true" }))),
                validated === _helpers_constants__WEBPACK_IMPORTED_MODULE_13__.ValidatedOptions.warning && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_10__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_12__["default"].selectToggleStatusIcon) },
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_exclamation_triangle_icon__WEBPACK_IMPORTED_MODULE_24__["default"], { "aria-hidden": "true" })))),
            isOpen && menuAppendTo === 'inline' && menuContainer));
        const getParentElement = () => {
            if (this.parentRef && this.parentRef.current) {
                return this.parentRef.current.parentElement;
            }
            return null;
        };
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_helpers__WEBPACK_IMPORTED_MODULE_25__.GenerateId, null, (randomId) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectContext.Provider, { value: {
                onSelect,
                onFavorite,
                onClose: this.onClose,
                variant,
                inputIdPrefix: inputIdPrefix || randomId,
                shouldResetOnSelect
            } }, menuAppendTo === 'inline' ? (mainContainer) : (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_helpers_Popper_Popper__WEBPACK_IMPORTED_MODULE_26__.Popper, { width: "auto", trigger: mainContainer, triggerRef: this.parentRef, popper: popperContainer, popperRef: popperRef, direction: direction, appendTo: menuAppendTo === 'parent' ? getParentElement() : menuAppendTo, isVisible: isOpen, zIndex: zIndex }))))));
    }
}
Select.displayName = 'Select';
Select.defaultProps = {
    children: [],
    className: '',
    position: _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectPosition.left,
    direction: _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectDirection.down,
    toggleId: null,
    isOpen: false,
    isGrouped: false,
    isPlain: false,
    isDisabled: false,
    hasPlaceholderStyle: false,
    isCreatable: false,
    isCreateOptionOnTop: false,
    validated: 'default',
    'aria-label': '',
    'aria-labelledby': '',
    'aria-describedby': '',
    'aria-invalid': false,
    typeAheadAriaLabel: '',
    typeAheadAriaDescribedby: '',
    clearSelectionsAriaLabel: 'Clear all',
    toggleAriaLabel: 'Options menu',
    removeSelectionAriaLabel: 'Remove',
    selections: [],
    createText: 'Create',
    placeholderText: '',
    noResultsFoundText: 'No results found',
    variant: _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.single,
    width: '',
    onClear: () => undefined,
    onCreateOption: () => undefined,
    toggleIcon: null,
    toggleIndicator: null,
    onFilter: null,
    onTypeaheadInputChanged: null,
    customContent: null,
    hasInlineFilter: false,
    inlineFilterPlaceholderText: null,
    customBadgeText: null,
    inputIdPrefix: '',
    inputAutoComplete: 'off',
    menuAppendTo: 'inline',
    favorites: [],
    favoritesLabel: 'Favorites',
    ouiaSafe: true,
    chipGroupComponent: null,
    isInputValuePersisted: false,
    isInputFilterPersisted: false,
    isCreateSelectOptionObject: false,
    shouldResetOnSelect: true,
    isFlipEnabled: true,
    zIndex: 9999
};
//# sourceMappingURL=Select.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectGroup.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectGroup.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectGroup: () => (/* binding */ SelectGroup)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Select/select */ "./node_modules/@patternfly/react-styles/css/components/Select/select.js");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _selectConstants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./selectConstants */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/selectConstants.js");





const SelectGroup = (_a) => {
    var { children = [], className = '', label = '', titleId = '' } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__rest)(_a, ["children", "className", "label", "titleId"]);
    return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectConsumer, null, ({ variant }) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({}, props, { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_3__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_4__["default"].selectMenuGroup, className) }),
        react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_3__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_4__["default"].selectMenuGroupTitle), id: titleId, "aria-hidden": true }, label),
        variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.checkbox ? children : react__WEBPACK_IMPORTED_MODULE_0__.createElement("ul", { role: "listbox" }, children)))));
};
SelectGroup.displayName = 'SelectGroup';
//# sourceMappingURL=SelectGroup.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectMenu.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectMenu.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectMenu: () => (/* binding */ SelectMenu)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Select/select */ "./node_modules/@patternfly/react-styles/css/components/Select/select.js");
/* harmony import */ var _patternfly_react_styles_css_components_Form_form__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Form/form */ "./node_modules/@patternfly/react-styles/css/components/Form/form.js");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _SelectOption__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./SelectOption */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectOption.js");
/* harmony import */ var _selectConstants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./selectConstants */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/selectConstants.js");
/* harmony import */ var _SelectGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SelectGroup */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectGroup.js");
/* harmony import */ var _components_Divider_Divider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../components/Divider/Divider */ "./node_modules/@patternfly/react-core/dist/esm/components/Divider/Divider.js");









class SelectMenuWithRef extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    extendChildren(randomId) {
        const { children, hasInlineFilter, isGrouped } = this.props;
        const childrenArray = children;
        let index = hasInlineFilter ? 1 : 0;
        if (isGrouped) {
            return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(childrenArray, (group) => {
                if (group.type === _SelectGroup__WEBPACK_IMPORTED_MODULE_1__.SelectGroup) {
                    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(group, {
                        titleId: group.props.label && group.props.label.replace(/\W/g, '-'),
                        children: react__WEBPACK_IMPORTED_MODULE_0__.Children.map(group.props.children, (option) => this.cloneOption(option, index++, randomId))
                    });
                }
                else {
                    return this.cloneOption(group, index++, randomId);
                }
            });
        }
        return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(childrenArray, (child) => this.cloneOption(child, index++, randomId));
    }
    cloneOption(child, index, randomId) {
        const { selected, sendRef, keyHandler } = this.props;
        const isSelected = this.checkForValue(child.props.value, selected);
        if (child.type === _components_Divider_Divider__WEBPACK_IMPORTED_MODULE_2__.Divider) {
            return child;
        }
        return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
            inputId: `${randomId}-${index}`,
            isSelected,
            sendRef,
            keyHandler,
            index
        });
    }
    checkForValue(valueToCheck, options) {
        if (!options || !valueToCheck) {
            return false;
        }
        const isSelectOptionObject = typeof valueToCheck !== 'string' &&
            valueToCheck.toString &&
            valueToCheck.compareTo;
        if (Array.isArray(options)) {
            if (isSelectOptionObject) {
                return options.some(option => option.compareTo(valueToCheck));
            }
            else {
                return options.includes(valueToCheck);
            }
        }
        else {
            if (isSelectOptionObject) {
                return options.compareTo(valueToCheck);
            }
            else {
                return options === valueToCheck;
            }
        }
    }
    extendCheckboxChildren(children) {
        const { isGrouped, checked, sendRef, keyHandler, hasInlineFilter, isLastOptionBeforeFooter } = this.props;
        let index = hasInlineFilter ? 1 : 0;
        if (isGrouped) {
            return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (group) => {
                if (group.type === _components_Divider_Divider__WEBPACK_IMPORTED_MODULE_2__.Divider) {
                    return group;
                }
                else if (group.type === _SelectOption__WEBPACK_IMPORTED_MODULE_3__.SelectOption) {
                    return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(group, {
                        isChecked: this.checkForValue(group.props.value, checked),
                        sendRef,
                        keyHandler,
                        index: index++,
                        isLastOptionBeforeFooter
                    });
                }
                return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(group, {
                    titleId: group.props.label && group.props.label.replace(/\W/g, '-'),
                    children: group.props.children ? (react__WEBPACK_IMPORTED_MODULE_0__.createElement("fieldset", { "aria-labelledby": group.props.label && group.props.label.replace(/\W/g, '-'), className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuFieldset) }, react__WEBPACK_IMPORTED_MODULE_0__.Children.map(group.props.children, (option) => option.type === _components_Divider_Divider__WEBPACK_IMPORTED_MODULE_2__.Divider
                        ? option
                        : react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(option, {
                            isChecked: this.checkForValue(option.props.value, checked),
                            sendRef,
                            keyHandler,
                            index: index++,
                            isLastOptionBeforeFooter
                        })))) : null
                });
            });
        }
        return react__WEBPACK_IMPORTED_MODULE_0__.Children.map(children, (child) => child.type === _components_Divider_Divider__WEBPACK_IMPORTED_MODULE_2__.Divider
            ? child
            : react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(child, {
                isChecked: this.checkForValue(child.props.value, checked),
                sendRef,
                keyHandler,
                index: index++,
                isLastOptionBeforeFooter
            }));
    }
    renderSelectMenu({ variant, inputIdPrefix }) {
        /* eslint-disable @typescript-eslint/no-unused-vars */
        const _a = this.props, { children, isCustomContent, className, isExpanded, openedOnEnter, selected, checked, isGrouped, position, sendRef, keyHandler, maxHeight, noResultsFoundText, createText, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledBy, hasInlineFilter, innerRef, footer, footerRef, isLastOptionBeforeFooter } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_6__.__rest)(_a, ["children", "isCustomContent", "className", "isExpanded", "openedOnEnter", "selected", "checked", "isGrouped", "position", "sendRef", "keyHandler", "maxHeight", "noResultsFoundText", "createText", 'aria-label', 'aria-labelledby', "hasInlineFilter", "innerRef", "footer", "footerRef", "isLastOptionBeforeFooter"]);
        /* eslint-enable @typescript-eslint/no-unused-vars */
        let Component = 'div';
        const variantProps = Object.assign({ ref: innerRef, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(!footer ? _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenu : 'pf-v5-c-select__menu-list', position === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectPosition.right && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.alignRight, className) }, (maxHeight && { style: { maxHeight, overflow: 'auto' } }));
        const extendedChildren = () => variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox
            ? this.extendCheckboxChildren(children)
            : this.extendChildren(inputIdPrefix);
        if (isCustomContent) {
            variantProps.children = children;
        }
        else if (hasInlineFilter) {
            if (react__WEBPACK_IMPORTED_MODULE_0__.Children.count(children) === 0) {
                variantProps.children = react__WEBPACK_IMPORTED_MODULE_0__.createElement("fieldset", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuFieldset) });
            }
            else {
                variantProps.children = (react__WEBPACK_IMPORTED_MODULE_0__.createElement("fieldset", { "aria-label": ariaLabel, "aria-labelledby": (!ariaLabel && ariaLabelledBy) || null, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Form_form__WEBPACK_IMPORTED_MODULE_8__["default"].formFieldset) },
                    children.shift(),
                    extendedChildren()));
            }
        }
        else {
            variantProps.children = extendedChildren();
            if (!isGrouped) {
                Component = 'ul';
                variantProps.role = 'listbox';
                variantProps['aria-label'] = ariaLabel;
                variantProps['aria-labelledby'] = (!ariaLabel && ariaLabelledBy) || null;
            }
        }
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
            react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, Object.assign({}, variantProps, props)),
            footer && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuFooter), ref: footerRef }, footer))));
    }
    render() {
        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectConsumer, null, context => this.renderSelectMenu(context));
    }
}
SelectMenuWithRef.displayName = 'SelectMenu';
SelectMenuWithRef.defaultProps = {
    className: '',
    isExpanded: false,
    isGrouped: false,
    openedOnEnter: false,
    selected: '',
    maxHeight: '',
    position: _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectPosition.left,
    sendRef: () => { },
    keyHandler: () => { },
    isCustomContent: false,
    hasInlineFilter: false,
    isLastOptionBeforeFooter: () => { }
};
const SelectMenu = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, ref) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(SelectMenuWithRef, Object.assign({ innerRef: ref }, props), props.children)));
//# sourceMappingURL=SelectMenu.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectOption.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectOption.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectOption: () => (/* binding */ SelectOption)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Select/select */ "./node_modules/@patternfly/react-styles/css/components/Select/select.js");
/* harmony import */ var _patternfly_react_styles_css_components_Check_check__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Check/check */ "./node_modules/@patternfly/react-styles/css/components/Check/check.js");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_check_icon__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/check-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/check-icon.js");
/* harmony import */ var _selectConstants__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./selectConstants */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/selectConstants.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_star_icon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/star-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/star-icon.js");
/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/util */ "./node_modules/@patternfly/react-core/dist/esm/helpers/util.js");
/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/constants */ "./node_modules/@patternfly/react-core/dist/esm/helpers/constants.js");










class SelectOption extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    constructor() {
        super(...arguments);
        this.ref = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.liRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.favoriteRef = react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        this.onKeyDown = (event, innerIndex, onEnter, isCheckbox) => {
            const { index, keyHandler, isLastOptionBeforeFooter } = this.props;
            let isLastItemBeforeFooter = false;
            if (isLastOptionBeforeFooter !== undefined) {
                isLastItemBeforeFooter = isLastOptionBeforeFooter(index);
            }
            if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Tab) {
                // More modal-like experience for checkboxes
                if (isCheckbox && !isLastItemBeforeFooter) {
                    if (event.shiftKey) {
                        keyHandler(index, innerIndex, 'up');
                    }
                    else {
                        keyHandler(index, innerIndex, 'down');
                    }
                    event.stopPropagation();
                }
                else {
                    if (event.shiftKey) {
                        keyHandler(index, innerIndex, 'up');
                    }
                    else {
                        keyHandler(index, innerIndex, 'tab');
                    }
                }
            }
            event.preventDefault();
            if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.ArrowUp) {
                keyHandler(index, innerIndex, 'up');
            }
            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.ArrowDown) {
                keyHandler(index, innerIndex, 'down');
            }
            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.ArrowLeft) {
                keyHandler(index, innerIndex, 'left');
            }
            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.ArrowRight) {
                keyHandler(index, innerIndex, 'right');
            }
            else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Enter) {
                if (onEnter !== undefined) {
                    onEnter();
                }
                else {
                    this.ref.current.click();
                }
            }
        };
    }
    componentDidMount() {
        this.props.sendRef(this.props.isDisabled ? null : this.ref.current, this.props.isDisabled ? null : this.favoriteRef.current, this.props.isDisabled ? null : this.liRef.current, this.props.index);
    }
    componentDidUpdate() {
        this.props.sendRef(this.props.isDisabled ? null : this.ref.current, this.props.isDisabled ? null : this.favoriteRef.current, this.props.isDisabled ? null : this.liRef.current, this.props.index);
    }
    render() {
        /* eslint-disable @typescript-eslint/no-unused-vars */
        const _a = this.props, { children, className, id, description, itemCount, value, onClick, isDisabled, isPlaceholder, isNoResultsOption, isSelected, isChecked, isFocused, sendRef, keyHandler, index, component, inputId, isFavorite, ariaIsFavoriteLabel = 'starred', ariaIsNotFavoriteLabel = 'not starred', isLoad, isLoading, setViewMoreNextIndex, 
        // eslint-disable-next-line no-console
        isLastOptionBeforeFooter, isGrouped = false } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_2__.__rest)(_a, ["children", "className", "id", "description", "itemCount", "value", "onClick", "isDisabled", "isPlaceholder", "isNoResultsOption", "isSelected", "isChecked", "isFocused", "sendRef", "keyHandler", "index", "component", "inputId", "isFavorite", "ariaIsFavoriteLabel", "ariaIsNotFavoriteLabel", "isLoad", "isLoading", "setViewMoreNextIndex", "isLastOptionBeforeFooter", "isGrouped"]);
        /* eslint-enable @typescript-eslint/no-unused-vars */
        const Component = component;
        if (!id && isFavorite !== null) {
            // eslint-disable-next-line no-console
            console.error('Please provide an id to use the favorites feature.');
        }
        const generatedId = id || (0,_helpers_util__WEBPACK_IMPORTED_MODULE_3__.getUniqueId)('select-option');
        const favoriteButton = (onFavorite) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItem, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.action, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.favoriteAction), "aria-label": isFavorite ? ariaIsFavoriteLabel : ariaIsNotFavoriteLabel, onClick: () => {
                onFavorite(generatedId.replace('favorite-', ''), isFavorite);
            }, onKeyDown: event => {
                this.onKeyDown(event, 1, () => onFavorite(generatedId.replace('favorite-', ''), isFavorite));
            }, ref: this.favoriteRef },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItemActionIcon) },
                react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_star_icon__WEBPACK_IMPORTED_MODULE_6__["default"], null))));
        const itemDisplay = itemCount ? (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItemRow) },
            react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItemText) }, children || (value && value.toString && value.toString())),
            react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItemCount) }, itemCount))) : (children || value.toString());
        const onViewMoreClick = (event) => {
            // Set the index for the next item to focus after view more clicked, then call view more callback
            setViewMoreNextIndex();
            onClick(event);
        };
        const renderOption = (onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect) => {
            if (variant !== _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox && isLoading && isGrouped) {
                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { role: "presentation", className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectListItem, isLoading && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.loading, className) }, children));
            }
            else if (variant !== _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox && isLoad && isGrouped) {
                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null,
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", Object.assign({}, props, { role: "presentation", className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItem, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.load, className), onClick: (event) => {
                            onViewMoreClick(event);
                            event.stopPropagation();
                        }, ref: this.ref, type: "button" }), children || value.toString())));
            }
            else if (variant !== _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox) {
                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("li", { id: generatedId, role: "presentation", className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(isLoading && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectListItem, !isLoading && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuWrapper, isFavorite && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.favorite, isFocused && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.focus, isLoading && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.loading), ref: this.liRef },
                    isLoading && children,
                    isLoad && !isGrouped && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", Object.assign({}, props, { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItem, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.load, className), onClick: (event) => {
                            onViewMoreClick(event);
                            event.stopPropagation();
                        }, ref: this.ref, onKeyDown: (event) => {
                            this.onKeyDown(event, 0);
                        }, type: "button" }), itemDisplay)),
                    !isLoading && !isLoad && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, Object.assign({}, props, { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItem, isLoad && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.load, isSelected && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.selected, isDisabled && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.disabled, description && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.description, isFavorite !== null && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.link, className), onClick: (event) => {
                                if (!isDisabled) {
                                    onClick(event);
                                    onSelect(event, value, isPlaceholder);
                                    shouldResetOnSelect && onClose();
                                }
                            }, role: "option", "aria-selected": isSelected || null, ref: this.ref, onKeyDown: (event) => {
                                this.onKeyDown(event, 0);
                            }, type: "button" }),
                            description && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                                react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItemMain) },
                                    itemDisplay,
                                    isSelected && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItemIcon) },
                                        react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_check_icon__WEBPACK_IMPORTED_MODULE_8__["default"], { "aria-hidden": true })))),
                                react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItemDescription) }, description))),
                            !description && (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
                                itemDisplay,
                                isSelected && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItemIcon) },
                                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_check_icon__WEBPACK_IMPORTED_MODULE_8__["default"], { "aria-hidden": true })))))),
                        isFavorite !== null && id && favoriteButton(onFavorite)))));
            }
            else if (variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox && isLoad) {
                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItem, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.load, isFocused && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.focus, className), onKeyDown: (event) => {
                        this.onKeyDown(event, 0, undefined, true);
                    }, onClick: (event) => {
                        onViewMoreClick(event);
                        event.stopPropagation();
                    }, ref: this.ref }, children || (value && value.toString && value.toString())));
            }
            else if (variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox && isLoading) {
                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectListItem, isLoading && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.loading, className) }, children));
            }
            else if (variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox && !isNoResultsOption && !isLoading && !isLoad) {
                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("label", Object.assign({}, props, { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Check_check__WEBPACK_IMPORTED_MODULE_9__["default"].check, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItem, isDisabled && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.disabled, description && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.description, className), onKeyDown: (event) => {
                        this.onKeyDown(event, 0, undefined, true);
                    } }),
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("input", { id: inputId || `${inputIdPrefix}-${value.toString()}`, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Check_check__WEBPACK_IMPORTED_MODULE_9__["default"].checkInput), type: "checkbox", onChange: event => {
                            if (!isDisabled) {
                                onClick(event);
                                onSelect(event, value);
                            }
                        }, ref: this.ref, checked: isChecked || false, disabled: isDisabled }),
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Check_check__WEBPACK_IMPORTED_MODULE_9__["default"].checkLabel, isDisabled && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.disabled) }, itemDisplay),
                    description && react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Check_check__WEBPACK_IMPORTED_MODULE_9__["default"].checkDescription) }, description)));
            }
            else if (variant === _selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectVariant.checkbox && isNoResultsOption && !isLoading && !isLoad) {
                return (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", null,
                    react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component, Object.assign({}, props, { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_4__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].selectMenuItem, isSelected && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.selected, isDisabled && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_5__["default"].modifiers.disabled, className), role: "option", "aria-selected": isSelected || null, ref: this.ref, onKeyDown: (event) => {
                            this.onKeyDown(event, 0, undefined, true);
                        }, type: "button" }), itemDisplay)));
            }
        };
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(_selectConstants__WEBPACK_IMPORTED_MODULE_7__.SelectConsumer, null, ({ onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect }) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, renderOption(onSelect, onClose, variant, inputIdPrefix, onFavorite, shouldResetOnSelect)))));
    }
}
SelectOption.displayName = 'SelectOption';
SelectOption.defaultProps = {
    className: '',
    value: '',
    index: 0,
    isDisabled: false,
    isPlaceholder: false,
    isSelected: false,
    isChecked: false,
    isNoResultsOption: false,
    component: 'button',
    onClick: () => { },
    sendRef: () => { },
    keyHandler: () => { },
    inputId: '',
    isFavorite: null,
    isLoad: false,
    isLoading: false,
    setViewMoreNextIndex: () => { },
    isLastOptionBeforeFooter: () => false
};
//# sourceMappingURL=SelectOption.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectToggle.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectToggle.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectToggle: () => (/* binding */ SelectToggle)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.mjs");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Select/select */ "./node_modules/@patternfly/react-styles/css/components/Select/select.js");
/* harmony import */ var _patternfly_react_styles_css_components_Button_button__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @patternfly/react-styles/css/components/Button/button */ "./node_modules/@patternfly/react-styles/css/components/Button/button.js");
/* harmony import */ var _patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @patternfly/react-styles */ "./node_modules/@patternfly/react-styles/dist/esm/index.js");
/* harmony import */ var _patternfly_react_icons_dist_esm_icons_caret_down_icon__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @patternfly/react-icons/dist/esm/icons/caret-down-icon */ "./node_modules/@patternfly/react-icons/dist/esm/icons/caret-down-icon.js");
/* harmony import */ var _selectConstants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./selectConstants */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/selectConstants.js");
/* harmony import */ var _helpers_util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/util */ "./node_modules/@patternfly/react-core/dist/esm/helpers/util.js");
/* harmony import */ var _helpers_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/constants */ "./node_modules/@patternfly/react-core/dist/esm/helpers/constants.js");









class SelectToggleBase extends react__WEBPACK_IMPORTED_MODULE_0__.Component {
    constructor(props) {
        super(props);
        this.onDocClick = (event) => {
            const { parentRef, menuRef, footerRef, isOpen, onToggle, onClose } = this.props;
            const clickedOnToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);
            const clickedWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);
            const clickedWithinFooter = footerRef && footerRef.current && footerRef.current.contains && footerRef.current.contains(event.target);
            if (isOpen && !(clickedOnToggle || clickedWithinMenu || clickedWithinFooter)) {
                onToggle(event, false);
                onClose();
            }
        };
        this.handleGlobalKeys = (event) => {
            const { parentRef, menuRef, hasFooter, footerRef, isOpen, variant, onToggle, onClose, moveFocusToLastMenuItem } = this.props;
            const escFromToggle = parentRef && parentRef.current && parentRef.current.contains(event.target);
            const escFromWithinMenu = menuRef && menuRef.current && menuRef.current.contains && menuRef.current.contains(event.target);
            if (isOpen &&
                event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Tab &&
                (variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeahead || variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeaheadMulti)) {
                this.props.handleTypeaheadKeys('tab', event.shiftKey);
                event.preventDefault();
                return;
            }
            if (isOpen && event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Tab && hasFooter) {
                const tabbableItems = (0,_helpers_util__WEBPACK_IMPORTED_MODULE_3__.findTabbableElements)(footerRef, _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectFooterTabbableItems);
                // If no tabbable item in footer close select
                if (tabbableItems.length <= 0) {
                    onToggle(event, false);
                    onClose();
                    this.toggle.current.focus();
                    return;
                }
                else {
                    // if current element is not in footer, tab to first tabbable element in footer, or close if shift clicked
                    const currentElementIndex = tabbableItems.findIndex((item) => item === document.activeElement);
                    if (currentElementIndex === -1) {
                        if (event.shiftKey) {
                            if (variant !== 'checkbox') {
                                // only close non checkbox variation on shift clicked
                                onToggle(event, false);
                                onClose();
                                this.toggle.current.focus();
                            }
                        }
                        else {
                            // tab to footer
                            tabbableItems[0].focus();
                            return;
                        }
                    }
                    // Current element is in footer.
                    if (event.shiftKey) {
                        // Move focus back to menu if current tab index is 0
                        if (currentElementIndex === 0) {
                            moveFocusToLastMenuItem();
                            event.preventDefault();
                        }
                        return;
                    }
                    // Tab to next element in footer or close if there are none
                    if (currentElementIndex + 1 < tabbableItems.length) {
                        tabbableItems[currentElementIndex + 1].focus();
                    }
                    else {
                        // no more footer items close menu
                        onToggle(event, false);
                        onClose();
                        this.toggle.current.focus();
                    }
                    event.preventDefault();
                    return;
                }
            }
            if (isOpen &&
                (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Escape || event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Tab) &&
                (escFromToggle || escFromWithinMenu)) {
                onToggle(event, false);
                onClose();
                this.toggle.current.focus();
            }
        };
        this.onKeyDown = (event) => {
            const { isOpen, onToggle, variant, onClose, onEnter, handleTypeaheadKeys } = this.props;
            if (variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeahead || variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeaheadMulti) {
                if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.ArrowDown || event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.ArrowUp) {
                    handleTypeaheadKeys((event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.ArrowDown && 'down') || (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.ArrowUp && 'up'));
                    event.preventDefault();
                }
                else if (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Enter) {
                    if (isOpen) {
                        handleTypeaheadKeys('enter');
                    }
                    else {
                        onToggle(event, !isOpen);
                    }
                }
            }
            if (variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeahead ||
                variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeaheadMulti ||
                (event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Tab && !isOpen) ||
                (event.key !== _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Enter && event.key !== _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Space)) {
                return;
            }
            event.preventDefault();
            if ((event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Tab || event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Enter || event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Space) && isOpen) {
                onToggle(event, !isOpen);
                onClose();
                this.toggle.current.focus();
            }
            else if ((event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Enter || event.key === _helpers_constants__WEBPACK_IMPORTED_MODULE_1__.KeyTypes.Space) && !isOpen) {
                onToggle(event, !isOpen);
                onEnter();
            }
        };
        const { variant } = props;
        const isTypeahead = variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeahead || variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeaheadMulti;
        if (this.props.innerRef) {
            this.toggle = this.props.innerRef;
        }
        else {
            this.toggle = isTypeahead ? react__WEBPACK_IMPORTED_MODULE_0__.createRef() : react__WEBPACK_IMPORTED_MODULE_0__.createRef();
        }
    }
    componentDidMount() {
        document.addEventListener('click', this.onDocClick, { capture: true });
        document.addEventListener('touchstart', this.onDocClick);
        document.addEventListener('keydown', this.handleGlobalKeys);
    }
    componentWillUnmount() {
        document.removeEventListener('click', this.onDocClick);
        document.removeEventListener('touchstart', this.onDocClick);
        document.removeEventListener('keydown', this.handleGlobalKeys);
    }
    render() {
        /* eslint-disable @typescript-eslint/no-unused-vars */
        const _a = this.props, { className, children, isOpen, isActive, isPlain, isDisabled, hasPlaceholderStyle, variant, onToggle, onEnter, onClose, onBlur, onClickTypeaheadToggleButton, handleTypeaheadKeys, moveFocusToLastMenuItem, parentRef, menuRef, id, type, hasClearButton, 'aria-labelledby': ariaLabelledBy, 'aria-label': ariaLabel, hasFooter, footerRef, toggleIndicator, innerRef } = _a, props = (0,tslib__WEBPACK_IMPORTED_MODULE_4__.__rest)(_a, ["className", "children", "isOpen", "isActive", "isPlain", "isDisabled", "hasPlaceholderStyle", "variant", "onToggle", "onEnter", "onClose", "onBlur", "onClickTypeaheadToggleButton", "handleTypeaheadKeys", "moveFocusToLastMenuItem", "parentRef", "menuRef", "id", "type", "hasClearButton", 'aria-labelledby', 'aria-label', "hasFooter", "footerRef", "toggleIndicator", "innerRef"]);
        /* eslint-enable @typescript-eslint/no-unused-vars */
        const isTypeahead = variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeahead || variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeaheadMulti || hasClearButton;
        const toggleProps = {
            id,
            'aria-labelledby': ariaLabelledBy,
            'aria-expanded': isOpen,
            'aria-haspopup': (variant !== _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.checkbox && 'listbox') || null
        };
        return (react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null,
            !isTypeahead && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", Object.assign({}, props, toggleProps, { ref: this.toggle, type: type, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].selectToggle, hasPlaceholderStyle && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.placeholder, isDisabled && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.disabled, isPlain && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.plain, isActive && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.active, className), "aria-label": ariaLabel, onBlur: onBlur, 
                // eslint-disable-next-line @typescript-eslint/no-unused-vars
                onClick: event => {
                    onToggle(event, !isOpen);
                    if (isOpen) {
                        onClose();
                    }
                }, onKeyDown: this.onKeyDown, disabled: isDisabled }),
                children,
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("span", { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].selectToggleArrow) }, toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_caret_down_icon__WEBPACK_IMPORTED_MODULE_7__["default"], null)))),
            isTypeahead && (react__WEBPACK_IMPORTED_MODULE_0__.createElement("div", Object.assign({}, props, { ref: this.toggle, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].selectToggle, hasPlaceholderStyle && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.placeholder, isDisabled && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.disabled, isPlain && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.plain, isTypeahead && _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.typeahead, className), onBlur: onBlur, 
                // eslint-disable-next-line @typescript-eslint/no-unused-vars
                onClick: event => {
                    if (!isDisabled) {
                        onToggle(event, !isOpen);
                        if (isOpen) {
                            onClose();
                        }
                    }
                }, onKeyDown: this.onKeyDown }),
                children,
                react__WEBPACK_IMPORTED_MODULE_0__.createElement("button", Object.assign({}, toggleProps, { type: type, className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Button_button__WEBPACK_IMPORTED_MODULE_8__["default"].button, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].selectToggleButton, _patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].modifiers.plain), "aria-label": ariaLabel, onClick: event => {
                        onToggle(event, !isOpen);
                        if (isOpen) {
                            onClose();
                        }
                        onClickTypeaheadToggleButton();
                    } }, ((variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeahead || variant === _selectConstants__WEBPACK_IMPORTED_MODULE_2__.SelectVariant.typeaheadMulti) && {
                    tabIndex: -1
                }), { disabled: isDisabled }), toggleIndicator !== null && toggleIndicator !== void 0 ? toggleIndicator : react__WEBPACK_IMPORTED_MODULE_0__.createElement(_patternfly_react_icons_dist_esm_icons_caret_down_icon__WEBPACK_IMPORTED_MODULE_7__["default"], { className: (0,_patternfly_react_styles__WEBPACK_IMPORTED_MODULE_5__.css)(_patternfly_react_styles_css_components_Select_select__WEBPACK_IMPORTED_MODULE_6__["default"].selectToggleArrow) }))))));
    }
}
SelectToggleBase.displayName = 'SelectToggle';
SelectToggleBase.defaultProps = {
    className: '',
    isOpen: false,
    isActive: false,
    isPlain: false,
    isDisabled: false,
    hasPlaceholderStyle: false,
    hasClearButton: false,
    hasFooter: false,
    variant: 'single',
    'aria-labelledby': '',
    'aria-label': '',
    type: 'button',
    onToggle: () => { },
    onEnter: () => { },
    onClose: () => { },
    onClickTypeaheadToggleButton: () => { }
};
const SelectToggle = react__WEBPACK_IMPORTED_MODULE_0__.forwardRef((props, ref) => (react__WEBPACK_IMPORTED_MODULE_0__.createElement(SelectToggleBase, Object.assign({ innerRef: ref }, props))));
//# sourceMappingURL=SelectToggle.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Select: () => (/* reexport safe */ _Select__WEBPACK_IMPORTED_MODULE_0__.Select),
/* harmony export */   SelectConsumer: () => (/* reexport safe */ _selectConstants__WEBPACK_IMPORTED_MODULE_3__.SelectConsumer),
/* harmony export */   SelectContext: () => (/* reexport safe */ _selectConstants__WEBPACK_IMPORTED_MODULE_3__.SelectContext),
/* harmony export */   SelectDirection: () => (/* reexport safe */ _selectConstants__WEBPACK_IMPORTED_MODULE_3__.SelectDirection),
/* harmony export */   SelectFooterTabbableItems: () => (/* reexport safe */ _selectConstants__WEBPACK_IMPORTED_MODULE_3__.SelectFooterTabbableItems),
/* harmony export */   SelectGroup: () => (/* reexport safe */ _SelectGroup__WEBPACK_IMPORTED_MODULE_1__.SelectGroup),
/* harmony export */   SelectOption: () => (/* reexport safe */ _SelectOption__WEBPACK_IMPORTED_MODULE_2__.SelectOption),
/* harmony export */   SelectPosition: () => (/* reexport safe */ _selectConstants__WEBPACK_IMPORTED_MODULE_3__.SelectPosition),
/* harmony export */   SelectProvider: () => (/* reexport safe */ _selectConstants__WEBPACK_IMPORTED_MODULE_3__.SelectProvider),
/* harmony export */   SelectVariant: () => (/* reexport safe */ _selectConstants__WEBPACK_IMPORTED_MODULE_3__.SelectVariant)
/* harmony export */ });
/* harmony import */ var _Select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Select */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/Select.js");
/* harmony import */ var _SelectGroup__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SelectGroup */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectGroup.js");
/* harmony import */ var _SelectOption__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./SelectOption */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/SelectOption.js");
/* harmony import */ var _selectConstants__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./selectConstants */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/selectConstants.js");




//# sourceMappingURL=index.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/selectConstants.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/deprecated/components/Select/selectConstants.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   SelectConsumer: () => (/* binding */ SelectConsumer),
/* harmony export */   SelectContext: () => (/* binding */ SelectContext),
/* harmony export */   SelectDirection: () => (/* binding */ SelectDirection),
/* harmony export */   SelectFooterTabbableItems: () => (/* binding */ SelectFooterTabbableItems),
/* harmony export */   SelectPosition: () => (/* binding */ SelectPosition),
/* harmony export */   SelectProvider: () => (/* binding */ SelectProvider),
/* harmony export */   SelectVariant: () => (/* binding */ SelectVariant)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);

const SelectContext = react__WEBPACK_IMPORTED_MODULE_0__.createContext(null);
const SelectProvider = SelectContext.Provider;
const SelectConsumer = SelectContext.Consumer;
var SelectVariant;
(function (SelectVariant) {
    SelectVariant["single"] = "single";
    SelectVariant["checkbox"] = "checkbox";
    SelectVariant["typeahead"] = "typeahead";
    SelectVariant["typeaheadMulti"] = "typeaheadmulti";
})(SelectVariant || (SelectVariant = {}));
var SelectPosition;
(function (SelectPosition) {
    SelectPosition["right"] = "right";
    SelectPosition["left"] = "left";
})(SelectPosition || (SelectPosition = {}));
var SelectDirection;
(function (SelectDirection) {
    SelectDirection["up"] = "up";
    SelectDirection["down"] = "down";
})(SelectDirection || (SelectDirection = {}));
const SelectFooterTabbableItems = 'input, button, select, textarea, a[href]';
//# sourceMappingURL=selectConstants.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-core/dist/esm/helpers/favorites.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@patternfly/react-core/dist/esm/helpers/favorites.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   createRenderableFavorites: () => (/* binding */ createRenderableFavorites),
/* harmony export */   extendItemsWithFavorite: () => (/* binding */ extendItemsWithFavorite)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react?dc4e");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _deprecated_components_ApplicationLauncher_ApplicationLauncherSeparator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../deprecated/components/ApplicationLauncher/ApplicationLauncherSeparator */ "./node_modules/@patternfly/react-core/dist/esm/deprecated/components/ApplicationLauncher/ApplicationLauncherSeparator.js");
/* harmony import */ var _components_Divider_Divider__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/Divider/Divider */ "./node_modules/@patternfly/react-core/dist/esm/components/Divider/Divider.js");



/**
 * This function is a helper for creating an array of renderable favorite items for the Application launcher or Select
 *
 * @param {object} items The items rendered in Select or Application aLauncher
 * @param {boolean} isGrouped Flag indicating if items are grouped
 * @param {any[]} favorites Array of ids of favorited items
 * @param {boolean} isEnterTriggersArrowDown Flag indicating if we should add isEnterTriggersArrowDown to favorited item
 */
const createRenderableFavorites = (items, isGrouped, favorites, isEnterTriggersArrowDown) => {
    if (isGrouped) {
        const favoriteItems = [];
        items.forEach(group => {
            if (favorites.length > 0) {
                return (group.props.children &&
                    group.props.children
                        .filter(item => favorites.includes(item.props.id))
                        .map(item => {
                        if (isEnterTriggersArrowDown) {
                            return favoriteItems.push(react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(item, {
                                isFavorite: true,
                                enterTriggersArrowDown: isEnterTriggersArrowDown,
                                id: `favorite-${item.props.id}`
                            }));
                        }
                        else {
                            return favoriteItems.push(react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(item, { isFavorite: true, id: `favorite-${item.props.id}` }));
                        }
                    }));
            }
        });
        return favoriteItems;
    }
    return items
        .filter(item => favorites.includes(item.props.id))
        .map(item => react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(item, { isFavorite: true, enterTriggersArrowDown: isEnterTriggersArrowDown }));
};
/**
 * This function is a helper for extending the array of renderable favorite with the select/application launcher items to  render in the Application launcher or Select
 *
 * @param {object} items The items rendered in Select or Application aLauncher
 * @param {boolean} isGrouped Flag indicating if items are grouped
 * @param {any[]} favorites Array of ids of favorited items
 */
const extendItemsWithFavorite = (items, isGrouped, favorites) => {
    if (isGrouped) {
        return items.map(group => react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(group, {
            children: react__WEBPACK_IMPORTED_MODULE_0__.Children.map(group.props.children, item => {
                if (item.type === _deprecated_components_ApplicationLauncher_ApplicationLauncherSeparator__WEBPACK_IMPORTED_MODULE_1__.ApplicationLauncherSeparator || item.type === _components_Divider_Divider__WEBPACK_IMPORTED_MODULE_2__.Divider) {
                    return item;
                }
                return react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(item, {
                    isFavorite: favorites.some(favoriteId => favoriteId === item.props.id || `favorite-${favoriteId}` === item.props.id)
                });
            })
        }));
    }
    return items.map(item => react__WEBPACK_IMPORTED_MODULE_0__.cloneElement(item, {
        isFavorite: favorites.some(favoriteId => favoriteId === item.props.id)
    }));
};
//# sourceMappingURL=favorites.js.map

/***/ }),

/***/ "./node_modules/@patternfly/react-styles/css/components/Select/select.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@patternfly/react-styles/css/components/Select/select.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


exports.__esModule = true;
__webpack_require__(/*! ./select.css */ "?66b3");
exports["default"] = {
  "check": "pf-v5-c-check",
  "checkLabel": "pf-v5-c-check__label",
  "chipGroup": "pf-v5-c-chip-group",
  "divider": "pf-v5-c-divider",
  "formControl": "pf-v5-c-form-control",
  "modifiers": {
    "invalid": "pf-m-invalid",
    "success": "pf-m-success",
    "warning": "pf-m-warning",
    "disabled": "pf-m-disabled",
    "active": "pf-m-active",
    "expanded": "pf-m-expanded",
    "plain": "pf-m-plain",
    "typeahead": "pf-m-typeahead",
    "placeholder": "pf-m-placeholder",
    "top": "pf-m-top",
    "alignRight": "pf-m-align-right",
    "static": "pf-m-static",
    "favorite": "pf-m-favorite",
    "favoriteAction": "pf-m-favorite-action",
    "focus": "pf-m-focus",
    "link": "pf-m-link",
    "action": "pf-m-action",
    "selected": "pf-m-selected",
    "description": "pf-m-description",
    "load": "pf-m-load",
    "loading": "pf-m-loading"
  },
  "select": "pf-v5-c-select",
  "selectListItem": "pf-v5-c-select__list-item",
  "selectMenu": "pf-v5-c-select__menu",
  "selectMenuFieldset": "pf-v5-c-select__menu-fieldset",
  "selectMenuFooter": "pf-v5-c-select__menu-footer",
  "selectMenuGroup": "pf-v5-c-select__menu-group",
  "selectMenuGroupTitle": "pf-v5-c-select__menu-group-title",
  "selectMenuItem": "pf-v5-c-select__menu-item",
  "selectMenuItemActionIcon": "pf-v5-c-select__menu-item-action-icon",
  "selectMenuItemCount": "pf-v5-c-select__menu-item-count",
  "selectMenuItemDescription": "pf-v5-c-select__menu-item-description",
  "selectMenuItemIcon": "pf-v5-c-select__menu-item-icon",
  "selectMenuItemMain": "pf-v5-c-select__menu-item-main",
  "selectMenuItemMatch": "pf-v5-c-select__menu-item--match",
  "selectMenuItemRow": "pf-v5-c-select__menu-item-row",
  "selectMenuItemText": "pf-v5-c-select__menu-item-text",
  "selectMenuSearch": "pf-v5-c-select__menu-search",
  "selectMenuWrapper": "pf-v5-c-select__menu-wrapper",
  "selectToggle": "pf-v5-c-select__toggle",
  "selectToggleArrow": "pf-v5-c-select__toggle-arrow",
  "selectToggleBadge": "pf-v5-c-select__toggle-badge",
  "selectToggleButton": "pf-v5-c-select__toggle-button",
  "selectToggleClear": "pf-v5-c-select__toggle-clear",
  "selectToggleIcon": "pf-v5-c-select__toggle-icon",
  "selectToggleStatusIcon": "pf-v5-c-select__toggle-status-icon",
  "selectToggleText": "pf-v5-c-select__toggle-text",
  "selectToggleTypeahead": "pf-v5-c-select__toggle-typeahead",
  "selectToggleWrapper": "pf-v5-c-select__toggle-wrapper",
  "themeDark": "pf-v5-theme-dark"
};

/***/ })

}]);