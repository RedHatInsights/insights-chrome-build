{"version":3,"sources":["App/Footer.js","App/Header/Logo.js","App/Header/Brand.js","App/Header/UserToggle.js","App/Header/ToolbarToggle.js","App/Header/InsightsAbout.js","App/Header/Tools.js","App/Header/index.js","App/Sidenav/NavigationItem.js","App/Sidenav/Navigation.js","App/Sidenav/index.js","App/index.js"],"names":["logo","Brand","toggleNav","mapDispatchToProps","dispatch","buildItems","accountNumber","extraItems","window","insights","chrome","auth","logout","UserToggle","props","state","isOpen","onSelect","bind","onToggle","setState","account","isSmall","toggle","name","DropdownPosition","right","number","Component","propTypes","PropTypes","shape","oneOfType","string","bool","arrayOf","node","defaultProps","user","account_number","firstName","lastName","ToolbarToggle","_ev","url","location","document","baseURI","dropdownItems","map","title","ev","onClick","icon","InsightsAbout","app","globalNav","find","item","active","subItems","subApp","subItem","id","activeApp","reload","appDetails","apps","path","version","currentApp","updateAppVersion","term","details","appDetail","forEach","fetch","then","response","json","catch","travis","data","src_hash","isModalOpen","onClose","getItem","username","pathname","mapStateToProps","appId","aboutButton","QuestionCircleIcon","widget","actions","Tools","onModalToggle","oneItem","key","items","event","action","basepath","itemId","parent","Navigation","groupId","activeGroup","activeItem","_event","onNavigate","href","settings","disabled","subKey","stateToProps","dispatchToProps"],"mappings":"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","file":"App.010a2373.map","sourceRoot":"../../src/js","sourcesContent":["import React from 'react';\n\nexport default () => <div>I am Footer</div>;\n","import React from 'react';\nimport logo from './logo-cs.svg';\n/*eslint-disable max-len*/\n\nexport default () => (\n    <img src={logo} alt=\"Red Hat Cloud Services Logo\" />\n);\n/*eslint-enable max-len*/\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { onToggle } from '../../redux/actions';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport BarsIcon from '@patternfly/react-icons/dist/esm/icons/bars-icon';\nimport Logo from './Logo';\n\nconst Brand = ({ toggleNav }) => (<div className=\"pf-l-page__header-brand pf-c-page__header-brand\">\n    <div>\n        <Button\n            variant=\"plain\"\n            aria-label=\"Toggle primary navigation\"\n            widget-type=\"InsightsNavToggle\"\n            onClick={() => toggleNav && toggleNav()}\n        >\n            <BarsIcon size=\"md\"/>\n        </Button>\n    </div>\n    <a className=\"pf-l-page__header-brand-link pf-c-page__header-brand-link\" href=\"./platform/dashboard/\">\n        <Logo />\n    </a>\n</div>);\n\nfunction mapDispatchToProps(dispatch) {\n    return {\n        toggleNav: () => {\n            dispatch(onToggle());\n        }\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Brand);\n","import React, { Component } from 'react';\nimport {\n    Dropdown,\n    DropdownToggle,\n    KebabToggle,\n    DropdownItem,\n    DropdownSeparator,\n    DropdownPosition\n} from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nfunction buildItems(accountNumber = -1, extraItems) {\n    return [\n        <DropdownItem key=\"logout\" component=\"button\" onClick={() => window.insights.chrome.auth.logout()}>\n            Logout\n        </DropdownItem>,\n        <DropdownSeparator key=\"separator\" />,\n        <DropdownItem key=\"Account\" isDisabled>\n            <dl>\n                <dt className=\"account-number__header\">Account Number:</dt>\n                <dd className=\"account-number__value\">{accountNumber}</dd>\n            </dl>\n        </DropdownItem>,\n        [...extraItems]\n    ];\n}\n\nclass UserToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    }\n\n    render() {\n        const { isOpen } = this.state;\n        const { account, isSmall, extraItems } = this.props;\n        const toggle = isSmall ?\n            <KebabToggle onToggle={this.onToggle} /> :\n            <DropdownToggle onToggle={this.onToggle}>{account.name}</DropdownToggle>;\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                aria-label=\"Overflow actions\"\n                widget-type=\"InsightsOverflowActions\"\n                onSelect={this.onSelect}\n                toggle={toggle}\n                isPlain\n                isOpen={isOpen}\n                dropdownItems={buildItems(account.number, extraItems)}\n            />\n        );\n    }\n}\n\nUserToggle.propTypes = {\n    account: PropTypes.shape({\n        number: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n        name: PropTypes.string\n    }),\n    isSmall: PropTypes.bool,\n    extraItems: PropTypes.arrayOf(PropTypes.node)\n};\n\nUserToggle.defaultProps = {\n    account: {\n        number: 1,\n        name: 'Foo'\n    },\n    isSmall: false,\n    extraItems: []\n};\n\nexport default connect(({ chrome: { user: { account_number: accountNumber, firstName, lastName } } }) => ({\n    account: {\n        number: accountNumber,\n        name: `${firstName} ${lastName}`\n    }\n}))(UserToggle);\n","import React, { Component } from 'react';\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownItem,\n    DropdownPosition\n} from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport PropTypes from 'prop-types';\n\nclass ToolbarToggle extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onSelect = this.onSelect.bind(this);\n        this.onToggle = this.onToggle.bind(this);\n    }\n\n    onSelect() {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    onToggle(isOpen) {\n        this.setState({ isOpen });\n    }\n\n    onClick(_ev, url) {\n        window.location = `${document.baseURI}platform/${url}`;\n    }\n\n    render() {\n        const dropdownItems = this.props.dropdownItems.map(({ url, title }) =>\n            <DropdownItem component='button' onClick={ev => this.onClick(ev, url)}>{ title }</DropdownItem>\n        );\n\n        const toggle = <DropdownToggle iconComponent={null} onToggle={this.onToggle}>\n            <this.props.icon />\n        </DropdownToggle>;\n\n        return (\n            <Dropdown\n                aria-label='Settings'\n                position={DropdownPosition.right}\n                toggle={toggle}\n                isOpen={this.state.isOpen}\n                dropdownItems={dropdownItems}\n                onSelect={this.onSelect}\n                isPlain\n            />\n        );\n    }\n}\n\nToolbarToggle.propTypes = {\n    icon: PropTypes.node,\n    dropdownItems: PropTypes.arrayOf(PropTypes.node)\n};\n\nexport default ToolbarToggle;\n","import React, { Component } from 'react';\n\nimport {\n    AboutModal,\n    TextContent, TextList, TextListItem,\n    Level, LevelItem,\n    Stack, StackItem\n} from '@patternfly/react-core';\n\nimport logo from './logo-cs.svg';\nimport { connect } from 'react-redux';\n\nimport './InsightsAbout.scss';\n\nclass InsightsAbout extends Component {\n    constructor(props) {\n        super(props);\n\n        let app;\n        if (this.props.globalNav) {\n            app = this.props.globalNav.find(item => item.active);\n            if (app.subItems) {\n                const subApp = app.subItems.find(subItem => subItem.id === this.props.activeApp);\n                app = subApp && subApp.reload ? subApp : app;\n            }\n        }\n\n        this.state = {\n            appDetails: { apps: [\n                { name: 'Chrome', path: 'static/chrome/app.info.json', version: 'N/A' },\n                { name: 'Inventory', path: `platform/inventory/app.info.json`, version: 'N/A' },\n                { name: 'Remediations', path: `platform/remediations/app.info.json`, version: 'N/A' },\n                { name: 'Vulnerabilities', path: 'platform/vulnerability/app.info.json', version: 'N/A' },\n                { name: 'Compliance', path: 'platform/compliance/app.info.json', version: 'N/A' },\n                { name: 'Cost Management', path: 'platform/cost-management/app.info.json', version: 'N/A' },\n                { name: 'Advisor', path: 'platform/advisor/app.info.json', version: 'N/A' }\n            ] },\n            currentApp: app && app.title\n        };\n        this.updateAppVersion = this.updateAppVersion.bind(this);\n    }\n\n    getItem(term, details) {\n        return <React.Fragment>\n            <TextListItem component=\"dt\">{term}:</TextListItem>\n            <TextListItem component=\"dd\">\n                {\n                    (typeof details === 'function') ? details() : details\n                }\n            </TextListItem>\n        </React.Fragment>;\n    }\n\n    updateAppVersion(app, version) {\n        const { appDetails } = this.state;\n        let currentApp = appDetails.apps.find(appDetail => appDetail.name === app.name);\n\n        if (currentApp) {\n            currentApp.version = version;\n        }\n\n        this.setState(appDetails);\n    }\n\n    componentDidMount() {\n        this.state.appDetails.apps.forEach((app) => {\n            fetch(app.path)\n            .then(response => response.json())\n            .catch(() => ({ travis: {} }))\n            .then(data => this.updateAppVersion(app, data.src_hash));\n        });\n    }\n\n    render() {\n        const { isModalOpen, onClose, user } = this.props;\n\n        return (\n            <AboutModal\n                isOpen={isModalOpen}\n                onClose={onClose}\n                brandImageSrc={logo}\n                brandImageAlt=\"Red Hat Cloud Services Logo\"\n                heroImageSrc={`${document.baseURI}/static/chrome/assets/images/pfbg_2000.jpg`}\n                trademark='Copyright © 2018 Red Hat, Inc.'\n            >\n                <Stack gutter='sm'>\n                    <StackItem>\n                        Please include these details when opening a support case against Insights\n                    </StackItem>\n                    <StackItem>\n                        <TextContent>\n                            <TextList component=\"dl\" className='ins-debug-info'>\n                                {this.getItem('User Name', user && user.username)}\n                                {this.getItem('Current Application', this.state.currentApp)}\n                                {this.getItem('Application Path', window.location.pathname)}\n                                {this.state.appDetails.apps.map((app) => {\n                                    return this.getItem(app.name + ' Version', app.version);\n                                })}\n                            </TextList>\n                        </TextContent>\n                    </StackItem>\n                    <StackItem className='ins-c-about-modal__footer'>\n                        <Level>\n                            <LevelItem>\n                                <a class=\"nav-link\"\n                                    href=\"https://www.redhat.com/en/about/privacy-policy\"\n                                    target=\"_blank\">\n                                    Privacy Policy\n                                </a>\n                            </LevelItem>\n                            <LevelItem>\n                                <a class=\"nav-link\"\n                                    href=\"https://ci.foo.redhat.com:1337/help/terms/\"\n                                    target=\"_blank\">\n                                    Customer Portal Terms of Use\n                                </a>\n                            </LevelItem>\n                            <LevelItem>\n                                <a class=\"nav-link\"\n                                    href=\"https://www.redhat.com/en/about/all-policies-guidelines\"\n                                    target=\"_blank\">\n                                    All Policies and Guidelines\n                                </a>\n                            </LevelItem>\n                        </Level>\n                    </StackItem>\n                </Stack>\n            </AboutModal>\n        );\n    }\n}\n\nfunction mapStateToProps({ chrome: { user, appId, globalNav, activeApp } }) {\n    return { appId, globalNav, user, activeApp };\n}\n\nexport default connect(mapStateToProps)(InsightsAbout);\n","import React, { Component } from 'react';\nimport { Button } from '@patternfly/react-core/dist/esm/components/Button';\nimport { Toolbar, ToolbarGroup, ToolbarItem } from '@patternfly/react-core/dist/esm/layouts/Toolbar';\nimport { DropdownItem } from '@patternfly/react-core/dist/esm/components/Dropdown';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/esm/icons/question-circle-icon';\n// import SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\n// import BellIcon from '@patternfly/react-icons/dist/esm/icons/bell-icon';\n// import CogIcon from '@patternfly/react-icons/dist/esm/icons/cog-icon';\nimport UserToggle from './UserToggle';\nimport ToolbarToggle from './ToolbarToggle';\nimport InsightsAbout from './InsightsAbout';\n\nconst aboutButton = {\n    title: 'FAQ',\n    icon: QuestionCircleIcon,\n    widget: 'InsightsFAQ'\n};\n\nconst actions = [\n    // {\n    //     title: 'Search',\n    //     icon: SearchIcon,\n    //     widget: 'InsightsSearch'\n    // },\n    // {\n    //     title: 'Notification',\n    //     icon: BellIcon,\n    //     widget: 'InsightsNotifications'\n    // },\n    // {\n    //     title: 'Settings',\n    //     icon: CogIcon,\n    //     widget: 'InsightsSettings',\n    //     items: [\n    //         {\n    //             title: 'Topological Inventory',\n    //             url: 'topological-inventory'\n    //         }\n    //     ]\n    // },\n    aboutButton\n];\n\nclass Tools extends Component {\n    constructor(props) {\n        super(props);\n        this.onModalToggle = this.onModalToggle.bind(this);\n        aboutButton.onClick = this.onModalToggle.bind(this);\n        this.state = {\n            isModalOpen: false\n        };\n    }\n\n    onModalToggle() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n        const { isModalOpen } = this.state;\n        return (\n            <div className=\"pf-l-page__header-tools pf-c-page__header-tools\" widget-type=\"InsightsToolbar\">\n                <Toolbar>\n                    <ToolbarGroup className=\"pf-u-sr-only pf-u-visible-on-lg\">\n                        {actions.map((oneItem, key) => (\n                            oneItem.items ?\n                                <ToolbarToggle icon={oneItem.icon} dropdownItems={oneItem.items} /> :\n                                <ToolbarItem key={key} data-key={key}>\n                                    <Button\n                                        variant=\"plain\"\n                                        aria-label={`Overflow ${oneItem.title}`}\n                                        widget-type={oneItem.widget}\n                                        onClick={event => oneItem.onClick && oneItem.onClick(event)}\n                                    >\n                                        <oneItem.icon />\n                                    </Button>\n                                </ToolbarItem>\n                        ))}\n                    </ToolbarGroup>\n                    <ToolbarGroup>\n                        <ToolbarItem className=\"pf-u-hidden-on-lg pf-u-mr-0\">\n                            <UserToggle isSmall extraItems={actions.map((action, key) => (\n                                <DropdownItem key={key} component=\"button\" isDisabled>{action.title}</DropdownItem>\n                            ))} />\n                        </ToolbarItem>\n                        <ToolbarItem className=\"pf-u-sr-only pf-u-visible-on-lg\">\n                            <UserToggle />\n                        </ToolbarItem>\n                    </ToolbarGroup>\n                    { isModalOpen && <InsightsAbout isModalOpen={isModalOpen} onClose={this.onModalToggle} /> }\n                </Toolbar>\n            </div>\n        );\n    }\n}\n\nexport default Tools;\n","import React, { Fragment } from 'react';\nimport Brand from './Brand';\nimport Tools from './Tools';\n\nexport default () => (\n    <Fragment>\n        <Brand />\n        <Tools />\n    </Fragment>\n);\n","import React from 'react';\nimport { NavItem } from '@patternfly/react-core/dist/esm/components/Nav';\n\nconst basepath = `${document.baseURI}platform/`;\n\nexport default ({ itemId, title, parent = '', ...props }) => (\n    <NavItem {...props} itemId={itemId} preventDefault to={`${basepath}${parent}${itemId}`}>{title}</NavItem>\n);\n","import React, { Component } from 'react';\nimport { Nav, NavExpandable, NavList } from '@patternfly/react-core/dist/esm/components/Nav';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { appNavClick } from '../../redux/actions';\nimport NavigationItem from './NavigationItem';\n\nconst basepath = `${document.baseURI}platform/`;\n\nclass Navigation extends Component {\n    constructor(props) {\n        super(props);\n        this.onSelect = this.onSelect.bind(this);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onSelect({ groupId, itemId }) {\n        this.setState({\n            activeGroup: groupId,\n            activeItem: itemId\n        });\n    };\n\n    onClick(_event, item, parent) {\n        const { onNavigate } = this.props;\n        if (parent && parent.active) {\n            if (!item.reload) {\n                onNavigate && onNavigate(item);\n            } else {\n                window.location.href = `${basepath}${item.reload}`;\n            }\n        } else {\n            const reload = item.reload || `${parent ? parent.id + '/' : ''}${item.id}`;\n            window.location.href = `${basepath}${reload}`;\n        }\n    }\n\n    render() {\n        const { settings, activeApp } = this.props;\n        return (\n            <Nav onSelect={this.onSelect} aria-label=\"Insights Global Navigation\">\n                <NavList>\n                    {\n                        settings.map((item, key) => {\n                            if (!item.disabled) {\n                                if (item.subItems) {\n                                    return <NavExpandable\n                                        title={item.title}\n                                        itemId={item.id}\n                                        key={key}\n                                        isActive={item.active}\n                                        isExpanded={item.active}>\n                                        {\n                                            item.subItems.map((subItem, subKey) => (\n                                                <NavigationItem\n                                                    itemId={subItem.id}\n                                                    key={subKey}\n                                                    title={subItem.title}\n                                                    parent={`${item.id}/`}\n                                                    isActive={item.active && subItem.id === activeApp}\n                                                    onClick={event => this.onClick(event, subItem, item)}\n                                                />\n                                            ))\n                                        }\n                                    </NavExpandable>;\n                                } else {\n                                    return <NavigationItem\n                                        itemId={item.id}\n                                        key={key}\n                                        title={item.title}\n                                        isActive={item.active}\n                                        onClick={event => this.onClick(event, item)}\n                                    />;\n                                }\n                            }\n                        })\n                    }\n                </NavList>\n            </Nav>\n        );\n    }\n}\n\nNavigation.propTypes = {\n    settings: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string,\n            title: PropTypes.string,\n            subItems: () => Navigation.propTypes.settings\n        })\n    )\n};\n\nfunction stateToProps({ chrome: { globalNav, activeApp } }) {\n    return ({ settings: globalNav, activeApp });\n}\n\nfunction dispatchToProps(dispatch) {\n    return {\n        onNavigate: (item) => dispatch(appNavClick(item))\n    };\n}\n\nexport default connect(stateToProps, dispatchToProps)(Navigation);\n","import React from 'react';\nimport Navigation from './Navigation';\n\nexport default () => <Navigation />;\n","export { default as Footer } from './Footer';\nexport { default as Header } from './Header/index';\nexport { default as Sidenav } from './Sidenav/index';\n"]}